{
  "openapi": "3.0.1",
  "info": {
    "title": "API V1",
    "version": "v0.0",
    "description": "A RestFull API for Decidim, to be able to CRUD resources from Decidim.\n\n## Authentication\n[Get a token](https://octree-gva.github.io/decidim-rest-full/category/authentication) from our `/oauth/token` routes, \nfollowing OAuth specs on Credential Flows or Resource Owner Password Credentials Flow.\n\n### Permissions\nA permission system is attached to the created OAuth application, that is designed in two levels: \n\n- **scope**: a broad permission to access a collection of endpoints\n- **abilities**: a fine grained permission system that allow actions. \n\nThe scopes and abilities are manageable in your System Admin Panel.\n\n### Multi-tenant\nDecidim is multi-tenant, and this API supports it.\n- The **`system` scope** endpoints are available in any tenant\n- The tenant `host` attribute will be used to guess which tenant you are requesting. \n  For example, given a tenant `example.org` and `foobar.org`, the endpoint\n  * `example.org/oauth/token` will ask a token for the example.org organization\n  * `foobar.org/oauth/token` for foobar.org.\n"
  },
  "security": [
    {
      "resourceOwnerFlowBearer": [

      ]
    }
  ],
  "servers": [
    {
      "url": "https://{defaultHost}",
      "variables": {
        "defaultHost": {
          "default": "www.example.com"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "OAuth",
      "description": "Use OAuth to get tokens and interact with the API. You can use machine-to-machine tokens, or user token directly with the API.\n* **Machine-to-machine**: Client Credential Flow\n* **User**: Resource Owner Password Credential Flow, with **impersonation** or **login**",
      "externalDocs": {
        "description": "How to authenticate",
        "url": "https://octree-gva.github.io/decidim-rest-full/category/authentication"
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "credentialFlowBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Authorization via service-to-service credentials flow. Use this for machine clients. [Learn more here](https://octree-gva.github.io/decidim-rest-full/user_documentation/auth/client-credential-flow)"
      },
      "resourceOwnerFlowBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Authorization via resource owner flow. Use this for user-based authentication [Learn more here](https://octree-gva.github.io/decidim-rest-full/user_documentation/auth/user-credentials-flow)"
      }
    },
    "schemas": {
      "api_error": {
        "type": "object",
        "title": "Api Error",
        "properties": {
          "error_code": {
            "type": "integer",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Bad Request"
          },
          "details": {
            "type": "string",
            "example": "Title is required"
          }
        },
        "required": [
          "error_code",
          "message"
        ]
      },
      "organizations_response": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/organization"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "organization": {
        "type": "object",
        "title": "Organization",
        "properties": {
          "id": {
            "type": "string",
            "example": "1"
          },
          "type": {
            "type": "string",
            "enum": [
              "organization"
            ],
            "example": "organization"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "example": {
                  "en": "Organization Name",
                  "fr": "Nom de l'organisation"
                }
              },
              "host": {
                "type": "string",
                "example": "example.org"
              },
              "secondaryHosts": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "secondary.example.org"
                ]
              },
              "meta": {
                "type": "object",
                "properties": {
                  "populated": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "id",
                      "name"
                    ]
                  },
                  "locales": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "en",
                      "fr"
                    ]
                  }
                }
              },
              "created_at": {
                "type": "string",
                "format": "date_time",
                "example": "2024-11-12T12:34:56Z"
              },
              "updated_at": {
                "type": "string",
                "format": "date_time",
                "example": "2024-11-12T12:34:56Z"
              }
            },
            "required": [
              "created_at",
              "updated_at"
            ]
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "space": {
        "type": "object",
        "title": "Space",
        "properties": {
          "id": {
            "type": "string",
            "example": "1",
            "description": "Space Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "space"
            ],
            "example": "space"
          },
          "attributes": {
            "title": "Space Attributes",
            "type": "object",
            "properties": {
              "title": {
                "type": "object",
                "title": "Title translations",
                "additionalProperties": {
                  "type": "string"
                },
                "example": {
                  "en": "Assembly Name",
                  "fr": "Nom de l'Assembl√©e"
                },
                "description": "Space title"
              },
              "subtitle": {
                "type": "object",
                "title": "Subtitle translations",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Space subtitle"
              },
              "short_description": {
                "type": "object",
                "title": "Short Description translations",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Space short_description"
              },
              "description": {
                "type": "object",
                "title": "Description translations",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Space description"
              },
              "manifest_name": {
                "type": "string",
                "enum": [
                  "participatory_processes",
                  "assemblies"
                ]
              },
              "visibility": {
                "type": "string",
                "enum": [
                  "public",
                  "transparent",
                  "private"
                ],
                "description": "Space visibility"
              },
              "components": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Component Summary",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 2,
                      "description": "Component Id"
                    },
                    "manifest_name": {
                      "type": "string",
                      "enum": [
                        "dummy",
                        "pages",
                        "proposals",
                        "meetings",
                        "budgets",
                        "surveys",
                        "accountability",
                        "debates",
                        "sortitions",
                        "blogs"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "manifest_name"
                  ]
                }
              }
            },
            "required": [
              "title",
              "manifest_name",
              "visibility",
              "components"
            ]
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "component": {
        "type": "object",
        "title": "Component",
        "properties": {
          "id": {
            "type": "string",
            "example": "1",
            "description": "Component Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "component"
            ],
            "example": "component"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "example": {
                  "en": "Assembly Name",
                  "fr": "Nom de l'Assembl√©e"
                },
                "description": "Component title"
              },
              "global_annoucement": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "example": {
                  "en": "Welcome! You can create",
                  "fr": "Bienvenue! Vous pouvez"
                },
                "description": "Component title"
              },
              "manifest_name": {
                "type": "string",
                "enum": [
                  "dummy",
                  "pages",
                  "proposals",
                  "meetings",
                  "budgets",
                  "surveys",
                  "accountability",
                  "debates",
                  "sortitions",
                  "blogs"
                ]
              }
            },
            "required": [
              "title",
              "manifest_name"
            ]
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "component_response": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/component"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "space_response": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/space"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "oauth_grant_param": {
        "oneOf": [
          {
            "type": "object",
            "title": "Client Credential",
            "properties": {
              "grant_type": {
                "type": "string",
                "enum": [
                  "client_credentials"
                ],
                "description": "Client Credential Flow, for **machine-to-machine**"
              },
              "client_id": {
                "type": "string",
                "description": "OAuth application Client Id"
              },
              "client_secret": {
                "type": "string",
                "description": "OAuth application Client Secret"
              },
              "scope": {
                "type": "string",
                "enum": [
                  "public",
                  "spaces",
                  "system",
                  "proposals",
                  "meetings",
                  "debates",
                  "pages"
                ],
                "description": "Requested scopes"
              }
            },
            "required": [
              "grant_type",
              "client_id",
              "client_secret",
              "scope"
            ]
          },
          {
            "type": "object",
            "title": "Impersonation",
            "properties": {
              "grant_type": {
                "type": "string",
                "enum": [
                  "password"
                ],
                "description": "Resource Owner Password Credentials (ROPC) Flow, for **user impersonation**"
              },
              "auth_type": {
                "type": "string",
                "enum": [
                  "impersonate"
                ],
                "description": "Type of ROPC"
              },
              "username": {
                "type": "string",
                "description": "User nickname"
              },
              "client_id": {
                "type": "string",
                "description": "OAuth application Client Id"
              },
              "client_secret": {
                "type": "string",
                "description": "OAuth application Client Secret"
              },
              "scope": {
                "type": "string",
                "enum": [
                  "public",
                  "spaces",
                  "proposals",
                  "meetings",
                  "debates",
                  "pages"
                ],
                "description": "Request scopes"
              }
            },
            "required": [
              "grant_type",
              "client_id",
              "client_secret",
              "scope",
              "username",
              "auth_type"
            ]
          },
          {
            "type": "object",
            "title": "Login",
            "properties": {
              "grant_type": {
                "type": "string",
                "enum": [
                  "password"
                ],
                "description": "Resource Owner Password Credentials (ROPC) Flow, for **user login**"
              },
              "auth_type": {
                "type": "string",
                "enum": [
                  "login"
                ],
                "description": "Type of ROPC"
              },
              "username": {
                "type": "string",
                "description": "User nickname"
              },
              "password": {
                "type": "string",
                "description": "User password"
              },
              "client_id": {
                "type": "string",
                "description": "OAuth application Client Id"
              },
              "client_secret": {
                "type": "string",
                "description": "OAuth application Client Secret"
              },
              "scope": {
                "type": "string",
                "enum": [
                  "public",
                  "spaces",
                  "proposals",
                  "meetings",
                  "debates",
                  "pages"
                ],
                "description": "Request scopes"
              }
            },
            "required": [
              "grant_type",
              "client_id",
              "client_secret",
              "scope",
              "username",
              "password",
              "auth_type"
            ]
          }
        ]
      },
      "password_grant_param": {
        "oneOf": [
          {
            "type": "object",
            "title": "Impersonation",
            "properties": {
              "grant_type": {
                "type": "string",
                "enum": [
                  "password"
                ],
                "description": "Resource Owner Password Credentials (ROPC) Flow, for **user impersonation**"
              },
              "auth_type": {
                "type": "string",
                "enum": [
                  "impersonate"
                ],
                "description": "Type of ROPC"
              },
              "username": {
                "type": "string",
                "description": "User nickname"
              },
              "client_id": {
                "type": "string",
                "description": "OAuth application Client Id"
              },
              "client_secret": {
                "type": "string",
                "description": "OAuth application Client Secret"
              },
              "scope": {
                "type": "string",
                "enum": [
                  "public",
                  "spaces",
                  "proposals",
                  "meetings",
                  "debates",
                  "pages"
                ],
                "description": "Request scopes"
              }
            },
            "required": [
              "grant_type",
              "client_id",
              "client_secret",
              "scope",
              "username",
              "auth_type"
            ]
          },
          {
            "type": "object",
            "title": "Login",
            "properties": {
              "grant_type": {
                "type": "string",
                "enum": [
                  "password"
                ],
                "description": "Resource Owner Password Credentials (ROPC) Flow, for **user login**"
              },
              "auth_type": {
                "type": "string",
                "enum": [
                  "login"
                ],
                "description": "Type of ROPC"
              },
              "username": {
                "type": "string",
                "description": "User nickname"
              },
              "password": {
                "type": "string",
                "description": "User password"
              },
              "client_id": {
                "type": "string",
                "description": "OAuth application Client Id"
              },
              "client_secret": {
                "type": "string",
                "description": "OAuth application Client Secret"
              },
              "scope": {
                "type": "string",
                "enum": [
                  "public",
                  "spaces",
                  "proposals",
                  "meetings",
                  "debates",
                  "pages"
                ],
                "description": "Request scopes"
              }
            },
            "required": [
              "grant_type",
              "client_id",
              "client_secret",
              "scope",
              "username",
              "password",
              "auth_type"
            ]
          }
        ]
      }
    }
  },
  "paths": {
    "/oauth/token": {
      "post": {
        "summary": "Request a OAuth token",
        "tags": [
          "OAuth"
        ],
        "security": [

        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "Token returned"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/oauth_grant_param"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/rest_full/v0.0/public/components": {
      "get": {
        "summary": "List Components",
        "tags": [
          "Public"
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          },
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "en",
                  "fr"
                ]
              }
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "participatory_processes",
                  "assemblies"
                ]
              },
              "description": "match none of values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "participatory_processes",
                  "assemblies"
                ]
              },
              "description": "match one of values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Starts with"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Does not starts with"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Equal manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Not Equal manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "matches with `LIKE` manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_does_not_match]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Does not matches with `LIKE` manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_matches_any]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Match any with `LIKE` manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_matches_all]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Match any with `LIKE` manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_does_not_match_any]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Does not match any with `LIKE` manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_does_not_match_all]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Does not match all with `LIKE` manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Less than manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_lteq]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "less than or equal manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "greater than manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_gteq]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "greater than or equal manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_present]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "not null and not empty manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_blank]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "is null or empty. manifest_name"
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search Results",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "3353",
                          "type": "component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "title": {
                              "en": "<script>alert(\"component_name\");</script> Voluptatem molestiae aut. 135",
                              "fr": ""
                            },
                            "global_annoucement": {
                              "en": "",
                              "fr": ""
                            },
                            "meta": {
                              "populated": [

                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            },
                            "created_at": "2024-11-20T15:54:15Z",
                            "updated_at": "2024-11-20T15:54:15Z"
                          }
                        },
                        {
                          "id": "3354",
                          "type": "component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "title": {
                              "en": "<script>alert(\"component_name\");</script> Autem est non. 221",
                              "fr": ""
                            },
                            "global_annoucement": {
                              "en": "",
                              "fr": ""
                            },
                            "meta": {
                              "populated": [

                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            },
                            "created_at": "2024-11-20T15:54:15Z",
                            "updated_at": "2024-11-20T15:54:15Z"
                          }
                        },
                        {
                          "id": "3355",
                          "type": "component",
                          "attributes": {
                            "manifest_name": "accountability",
                            "title": {
                              "en": "<script>alert(\"accountability\");</script> Accountability",
                              "fr": "<script>alert(\"accountability\");</script> Suivi"
                            },
                            "global_annoucement": {
                              "en": "",
                              "fr": ""
                            },
                            "meta": {
                              "populated": [

                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            },
                            "created_at": "2024-11-20T15:54:15Z",
                            "updated_at": "2024-11-20T15:54:15Z"
                          }
                        }
                      ]
                    }
                  },
                  "manifest_name_in_Meetings": {
                    "value": {
                      "data": [
                        {
                          "id": "3356",
                          "type": "component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "title": {
                              "en": "<script>alert(\"component_name\");</script> Qui aspernatur nostrum. 317",
                              "fr": ""
                            },
                            "global_annoucement": {
                              "en": "",
                              "fr": ""
                            },
                            "meta": {
                              "populated": [

                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            },
                            "created_at": "2024-11-20T15:54:16Z",
                            "updated_at": "2024-11-20T15:54:16Z"
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "3359",
                          "type": "component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "title": {
                              "en": "<script>alert(\"component_name\");</script> Aut pariatur amet. 499",
                              "fr": ""
                            },
                            "global_annoucement": {
                              "en": "",
                              "fr": ""
                            },
                            "meta": {
                              "populated": [

                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            },
                            "created_at": "2024-11-20T15:54:16Z",
                            "updated_at": "2024-11-20T15:54:16Z"
                          }
                        },
                        {
                          "id": "3360",
                          "type": "component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "title": {
                              "en": "<script>alert(\"component_name\");</script> Ut assumenda quidem. 585",
                              "fr": ""
                            },
                            "global_annoucement": {
                              "en": "",
                              "fr": ""
                            },
                            "meta": {
                              "populated": [

                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            },
                            "created_at": "2024-11-20T15:54:16Z",
                            "updated_at": "2024-11-20T15:54:16Z"
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/component_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "server_error": {
                    "value": {
                      "error_code": 500,
                      "message": "An error occurred",
                      "detail": "StandardError"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/api_error"
                }
              }
            }
          }
        }
      }
    },
    "/api/rest_full/v0.0/public/spaces": {
      "get": {
        "summary": "List Participatory Spaces",
        "tags": [
          "Public"
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          },
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "en",
                  "fr"
                ]
              }
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "participatory_processes",
                  "assemblies"
                ]
              },
              "description": "match none of values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "participatory_processes",
                  "assemblies"
                ]
              },
              "description": "match one of values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Starts with"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Does not starts with"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Equal manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Not Equal manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "matches with `LIKE` manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_does_not_match]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Does not matches with `LIKE` manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_matches_any]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Match any with `LIKE` manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_matches_all]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Match any with `LIKE` manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_does_not_match_any]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Does not match any with `LIKE` manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_does_not_match_all]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Does not match all with `LIKE` manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Less than manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_lteq]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "less than or equal manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "greater than manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_gteq]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "greater than or equal manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_present]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "not null and not empty manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_blank]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "is null or empty. manifest_name"
            },
            "required": false
          },
          {
            "name": "filter[title_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "match none of values in array"
            },
            "required": false
          },
          {
            "name": "filter[title_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "match one of values in array"
            },
            "required": false
          },
          {
            "name": "filter[title_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Starts with"
            },
            "required": false
          },
          {
            "name": "filter[title_not_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Does not starts with"
            },
            "required": false
          },
          {
            "name": "filter[title_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Equal title"
            },
            "required": false
          },
          {
            "name": "filter[title_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Not Equal title"
            },
            "required": false
          },
          {
            "name": "filter[title_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "matches with `LIKE` title"
            },
            "required": false
          },
          {
            "name": "filter[title_does_not_match]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Does not matches with `LIKE` title"
            },
            "required": false
          },
          {
            "name": "filter[title_matches_any]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Match any with `LIKE` title"
            },
            "required": false
          },
          {
            "name": "filter[title_matches_all]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Match any with `LIKE` title"
            },
            "required": false
          },
          {
            "name": "filter[title_does_not_match_any]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Does not match any with `LIKE` title"
            },
            "required": false
          },
          {
            "name": "filter[title_does_not_match_all]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Does not match all with `LIKE` title"
            },
            "required": false
          },
          {
            "name": "filter[title_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Less than title"
            },
            "required": false
          },
          {
            "name": "filter[title_lteq]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "less than or equal title"
            },
            "required": false
          },
          {
            "name": "filter[title_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "greater than title"
            },
            "required": false
          },
          {
            "name": "filter[title_gteq]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "greater than or equal title"
            },
            "required": false
          },
          {
            "name": "filter[title_present]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "not null and not empty title"
            },
            "required": false
          },
          {
            "name": "filter[title_blank]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "is null or empty. title"
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search Results",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "1508",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "title": {
                              "en": "My assembly for testing purpose",
                              "fr": "c'est une assembl√©e"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Sed ratione ut. 1055",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Laudantium accusantium harum. 1057</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Magni nemo dolor. 1059</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "components": [

                            ],
                            "meta": {
                              "populated": [

                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            },
                            "created_at": "2024-11-20T15:54:18Z",
                            "updated_at": "2024-11-20T15:54:18Z"
                          }
                        },
                        {
                          "id": "1509",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Vero itaque numquam. 1083",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Beatae quo tenetur. 1085",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Vel blanditiis ducimus. 1087</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Perferendis ut totam. 1089</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "components": [

                            ],
                            "meta": {
                              "populated": [

                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            },
                            "created_at": "2024-11-20T15:54:18Z",
                            "updated_at": "2024-11-20T15:54:18Z"
                          }
                        },
                        {
                          "id": "907",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Sint id voluptas. 1113",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Qui est mollitia. 1115",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Et dicta debitis. 1117</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Enim facilis ex. 1119</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "components": [

                            ],
                            "meta": {
                              "populated": [

                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            },
                            "created_at": "2024-11-20T15:54:18Z",
                            "updated_at": "2024-11-20T15:54:18Z"
                          }
                        }
                      ]
                    }
                  },
                  "manifest_name_in_Assemblies": {
                    "value": {
                      "data": [
                        {
                          "id": "1510",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "title": {
                              "en": "My assembly for testing purpose",
                              "fr": "c'est une assembl√©e"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Velit qui aspernatur. 1141",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Consequuntur omnis mollitia. 1143</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Quibusdam voluptates quia. 1145</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "components": [

                            ],
                            "meta": {
                              "populated": [

                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            },
                            "created_at": "2024-11-20T15:54:19Z",
                            "updated_at": "2024-11-20T15:54:19Z"
                          }
                        },
                        {
                          "id": "1511",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Tempore vero veniam. 1169",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Est est modi. 1171",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Sit velit et. 1173</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Minima velit corrupti. 1175</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "components": [

                            ],
                            "meta": {
                              "populated": [

                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            },
                            "created_at": "2024-11-20T15:54:19Z",
                            "updated_at": "2024-11-20T15:54:19Z"
                          }
                        }
                      ]
                    }
                  },
                  "search_translatable_text": {
                    "value": {
                      "data": [
                        {
                          "id": "1512",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "title": {
                              "en": "My assembly for testing purpose",
                              "fr": "c'est une assembl√©e"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Porro alias maiores. 1227",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Sit molestiae recusandae. 1229</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Commodi est repudiandae. 1231</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "components": [

                            ],
                            "meta": {
                              "populated": [

                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            },
                            "created_at": "2024-11-20T15:54:19Z",
                            "updated_at": "2024-11-20T15:54:19Z"
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "1514",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "title": {
                              "en": "My assembly for testing purpose",
                              "fr": "c'est une assembl√©e"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Vitae ipsam voluptatem. 1313",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Occaecati fugiat accusantium. 1315</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Amet dignissimos aliquid. 1317</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "components": [

                            ],
                            "meta": {
                              "populated": [

                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            },
                            "created_at": "2024-11-20T15:54:19Z",
                            "updated_at": "2024-11-20T15:54:19Z"
                          }
                        },
                        {
                          "id": "1515",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Perspiciatis quia et. 1341",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Aut fugiat consequatur. 1343",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Inventore et totam. 1345</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Et sint quis. 1347</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "components": [

                            ],
                            "meta": {
                              "populated": [

                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            },
                            "created_at": "2024-11-20T15:54:19Z",
                            "updated_at": "2024-11-20T15:54:19Z"
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/space_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "server_error": {
                    "value": {
                      "error_code": 500,
                      "message": "An error occurred",
                      "detail": "StandardError"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/api_error"
                }
              }
            }
          }
        }
      }
    },
    "/api/rest_full/v0.0/system/organizations": {
      "get": {
        "summary": "List available organizations",
        "tags": [
          "System"
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "parameters": [
          {
            "name": "populate[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "host",
                  "secondary_hosts",
                  "name",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "required": false
          },
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "en",
                  "fr"
                ]
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organizations listed",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "organization",
                          "attributes": {
                            "host": "localhost",
                            "secondary_hosts": [
                              "0.0.0.0",
                              "127.0.0.1"
                            ],
                            "name": {
                              "en": "Schoen, Gutmann and VonRueden",
                              "fr": "Payet SAS"
                            },
                            "created_at": "2024-11-08T10:42:59Z",
                            "updated_at": "2024-11-08T10:43:02Z",
                            "meta": {
                              "populated": [
                                "host",
                                "secondary_hosts",
                                "name",
                                "created_at",
                                "updated_at",
                                "id",
                                "meta"
                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            }
                          }
                        },
                        {
                          "id": "5614",
                          "type": "organization",
                          "attributes": {
                            "host": "33.lvh.me",
                            "secondary_hosts": [

                            ],
                            "name": {
                              "en": "Ankunding and Sons",
                              "fr": "Torp LLC"
                            },
                            "created_at": "2024-11-20T15:54:22Z",
                            "updated_at": "2024-11-20T15:54:22Z",
                            "meta": {
                              "populated": [
                                "host",
                                "secondary_hosts",
                                "name",
                                "created_at",
                                "updated_at",
                                "id",
                                "meta"
                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "organization",
                          "attributes": {
                            "created_at": "2024-11-08T10:42:59Z",
                            "updated_at": "2024-11-08T10:43:02Z",
                            "meta": {
                              "populated": [
                                "id",
                                "created_at",
                                "updated_at",
                                "meta"
                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            }
                          }
                        },
                        {
                          "id": "5615",
                          "type": "organization",
                          "attributes": {
                            "created_at": "2024-11-20T15:54:22Z",
                            "updated_at": "2024-11-20T15:54:22Z",
                            "meta": {
                              "populated": [
                                "id",
                                "created_at",
                                "updated_at",
                                "meta"
                              ],
                              "locales": [
                                "en",
                                "fr"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/organizations_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "bad_format": {
                    "value": {
                      "error_code": 400,
                      "message": "Bad request",
                      "detail": "Not allowed populate param: invalid_field"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/api_error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "server_error": {
                    "value": {
                      "error_code": 500,
                      "message": "An error occurred",
                      "detail": "StandardError"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/api_error"
                }
              }
            }
          }
        }
      }
    }
  }
}