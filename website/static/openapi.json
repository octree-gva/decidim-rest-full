{
  "openapi": "3.0.1",
  "info": {
    "title": "API V1",
    "version": "v0.2",
    "description": "A RestFull API for Decidim, to be able to CRUD resources from Decidim.\n\n## Authentication\n[Get a token](https://octree-gva.github.io/decidim-rest-full/category/authentication) from our `/oauth/token` routes,\nfollowing OAuth specs on Credential Flows or Resource Owner Password Credentials Flow.\n\n### Permissions\nA permission system is attached to the created OAuth application, that is designed in two levels:\n\n- **scope**: a broad permission to access a collection of endpoints\n- **abilities**: a fine grained permission system that allow actions.\n\nThe scopes and abilities are manageable in your System Admin Panel.\n\n### Multi-tenant\nDecidim is multi-tenant, and this API supports it.\n- The **`system` scope** endpoints are available in any tenant\n- The tenant `host` attribute will be used to guess which tenant you are requesting.\n  For example, given a tenant `example.org` and `foobar.org`, the endpoint\n  * `example.org/oauth/token` will ask a token for the example.org organization\n  * `foobar.org/oauth/token` for foobar.org.\n"
  },
  "servers": [
    {
      "url": "https://{defaultHost}/api/rest_full/v0.2",
      "variables": {
        "defaultHost": {
          "default": "www.example.com"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "OAuth",
      "description": "Use OAuth to get tokens and interact with the API. You can use machine-to-machine tokens, or user token directly with the API.\n* **Machine-to-machine**: Client Credential Flow\n* **User**: Resource Owner Password Credential Flow, with **impersonation** or **login**",
      "externalDocs": {
        "description": "How to authenticate",
        "url": "https://octree-gva.github.io/decidim-rest-full/category/authentication"
      }
    },
    {
      "name": "Spaces",
      "description": "Search and vizualize spaces (eg. Assemblies, Participatory Processes)"
    },
    {
      "name": "Components",
      "description": "Search and vizualize components"
    },
    {
      "name": "Users",
      "description": "Get information about participants, and manage own data."
    },
    {
      "name": "Blogs",
      "description": "Get informations about blog posts"
    },
    {
      "name": "Proposals",
      "description": "Manipulate proposals and drafts"
    },
    {
      "name": "Metrics",
      "description": "Metrics of the organization"
    }
  ],
  "components": {
    "securitySchemes": {
      "credentialFlowBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Authorization via service-to-service credentials flow.\nUse this for machine clients.\n[Learn more here](https://octree-gva.github.io/decidim-rest-full/user_documentation/auth/client-credential-flow)\n"
      },
      "resourceOwnerFlowBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Authorization via resource owner flow.\nUse this for user-based authentication\n[Learn more here](https://octree-gva.github.io/decidim-rest-full/user_documentation/auth/user-credentials-flow)\n"
      }
    },
    "schemas": {
      "get_action_link": {
        "title": "GET Action URL",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Action Name"
          },
          "href": {
            "type": "string",
            "description": "Full URL"
          },
          "describedby": {
            "type": "string",
            "description": "JSONSchema URL describing the request"
          },
          "hreflang": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Available locales"
          },
          "rel": {
            "type": "string",
            "enum": [
              "action"
            ]
          },
          "meta": {
            "title": "Meta for read request",
            "type": "object",
            "properties": {
              "component_id": {
                "type": "string",
                "description": "Component ID"
              },
              "component_manifest": {
                "type": "string",
                "description": "Component manifest"
              },
              "space_id": {
                "type": "string",
                "description": "Space ID"
              },
              "space_manifest": {
                "type": "string",
                "description": "Space Manifest"
              },
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "action_method": {
                "type": "string",
                "enum": [
                  "GET"
                ],
                "description": "Action HTTP method"
              }
            },
            "required": [
              "action_method"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "href",
          "title",
          "meta",
          "rel"
        ]
      },
      "post_action_link": {
        "title": "POST/DELETE/PUT Action URL",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Action Name"
          },
          "href": {
            "type": "string",
            "description": "Full URL"
          },
          "describedby": {
            "type": "string",
            "description": "JSONSchema URL describing the request"
          },
          "hreflang": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Available locales"
          },
          "rel": {
            "type": "string",
            "enum": [
              "action"
            ]
          },
          "meta": {
            "title": "Meta for write request",
            "type": "object",
            "properties": {
              "component_id": {
                "type": "string",
                "description": "Component ID"
              },
              "component_manifest": {
                "type": "string",
                "description": "Component manifest"
              },
              "space_id": {
                "type": "string",
                "description": "Space ID"
              },
              "space_manifest": {
                "type": "string",
                "description": "Space Manifest"
              },
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "action_method": {
                "type": "string",
                "enum": [
                  "POST",
                  "DELETE",
                  "PUT"
                ],
                "description": "Action HTTP method"
              },
              "action_enctype": {
                "type": "string",
                "enum": [
                  "application/x-www-form-urlencoded",
                  "multipart/form-data"
                ],
                "description": "Encoding of the payload"
              },
              "action_target": {
                "type": "string",
                "description": "URL to goes after submitting a valid request"
              }
            },
            "required": [
              "action_method",
              "action_enctype"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "href",
          "title",
          "meta",
          "rel"
        ]
      },
      "resource_link": {
        "title": "Resource URL",
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "Full URL"
          },
          "title": {
            "type": "string",
            "description": "Page Title"
          },
          "hreflang": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Available locales"
          },
          "describedby": {
            "type": "string",
            "description": "JSONSchema URL describing the request"
          },
          "rel": {
            "type": "string",
            "enum": [
              "public_page",
              "resource"
            ]
          },
          "meta": {
            "type": "object",
            "title": "Resource URL Metadata",
            "properties": {
              "component_id": {
                "type": "string",
                "description": "Component ID"
              },
              "component_manifest": {
                "type": "string",
                "description": "Component manifest"
              },
              "space_id": {
                "type": "string",
                "description": "Space ID"
              },
              "space_manifest": {
                "type": "string",
                "description": "Space Manifest"
              },
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              }
            }
          }
        },
        "required": [
          "href",
          "title",
          "meta",
          "rel"
        ],
        "additionalProperties": false
      },
      "translated_prop": {
        "type": "object",
        "title": "Translated data",
        "description": "Hash with translated data, key=locale value=translation",
        "properties": {
          "en": {
            "type": "string",
            "description": "Translation in en"
          },
          "fr": {
            "type": "string",
            "description": "Translation in fr"
          }
        },
        "additionalProperties": false
      },
      "component_type": {
        "type": "string",
        "enum": [
          "page_component",
          "proposal_component",
          "meeting_component",
          "budget_component",
          "survey_component",
          "accountability_component",
          "debate_component",
          "sortition_component",
          "blog_component",
          "awesome_map_component",
          "awesome_iframe_component"
        ]
      },
      "creation_date": {
        "title": "Creation date",
        "description": "Creation date, in ISO8601 format.",
        "type": "string",
        "format": "date_time",
        "example": "2024-11-12T12:34:56Z"
      },
      "edition_date": {
        "title": "Last Update Date",
        "description": "Last update date, in ISO8601 format.",
        "type": "string",
        "format": "date_time",
        "example": "2024-12-12T20:34:56Z"
      },
      "space_manifest": {
        "title": "Space Manifest",
        "type": "string",
        "enum": [
          "participatory_processes",
          "assemblies"
        ]
      },
      "component_manifest": {
        "title": "Component Manifest",
        "type": "string",
        "enum": [
          "pages",
          "proposals",
          "meetings",
          "budgets",
          "surveys",
          "accountability",
          "debates",
          "sortitions",
          "blogs",
          "awesome_map",
          "awesome_iframe"
        ]
      },
      "resource_manifest": {
        "title": "Resource Type",
        "type": "string",
        "enum": [
          "page",
          "proposal",
          "meeting",
          "budget",
          "survey",
          "accountability",
          "debate",
          "sortition",
          "blog",
          "awesome_map",
          "awesome_iframe"
        ]
      },
      "space_type": {
        "type": "string",
        "enum": [
          "participatory_processes",
          "assemblies"
        ]
      },
      "space_classes": {
        "type": "string",
        "description": "space class name. Part of the polymorphic association (participatory_space_type,participatory_space_id)",
        "enum": [
          "Decidim::ParticipatoryProcess",
          "Decidim::Assembly"
        ]
      },
      "space": {
        "type": "object",
        "title": "Space",
        "properties": {
          "id": {
            "type": "string",
            "description": "Space Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "space"
            ]
          },
          "attributes": {
            "title": "Space Attributes",
            "type": "object",
            "properties": {
              "title": {
                "$ref": "#/components/schemas/translated_prop",
                "title": "Title translations",
                "description": "Space title"
              },
              "subtitle": {
                "$ref": "#/components/schemas/translated_prop",
                "title": "Subtitle translations",
                "description": "Space subtitle"
              },
              "short_description": {
                "$ref": "#/components/schemas/translated_prop",
                "title": "Short Description translations",
                "description": "Space short_description"
              },
              "description": {
                "$ref": "#/components/schemas/translated_prop",
                "title": "Description translations",
                "description": "Space description"
              },
              "manifest_name": {
                "$ref": "#/components/schemas/space_manifest"
              },
              "participatory_space_type": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "visibility": {
                "type": "string",
                "enum": [
                  "public",
                  "transparent",
                  "private"
                ],
                "description": "Space visibility"
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "required": [
              "title",
              "manifest_name",
              "visibility",
              "created_at",
              "updated_at"
            ],
            "additionalProperties": false
          },
          "relationships": {
            "type": "object",
            "title": "Space relationships",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "$ref": "#/components/schemas/component_type"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Space Component Relationships Data"
                  },
                  "meta": {
                    "title": "Space Component Metadata",
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count for components association"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "count"
                    ]
                  },
                  "links": {
                    "type": "object",
                    "title": "Space Component Links",
                    "properties": {
                      "self": {
                        "$ref": "#/components/schemas/resource_link"
                      },
                      "related": {
                        "$ref": "#/components/schemas/resource_link"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "self"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta",
                  "links"
                ],
                "title": "Space Component Relationships"
              }
            }
          },
          "links": {
            "type": "object",
            "title": "Space Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "required": [
              "self",
              "related"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "links",
          "relationships"
        ]
      },
      "space_index_response": {
        "type": "object",
        "title": "Space Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/space"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "space_item_response": {
        "type": "object",
        "title": "Space Index Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/space"
          }
        },
        "required": [
          "data"
        ]
      },
      "client_credential": {
        "type": "object",
        "title": "Client Credential",
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "client_credentials"
            ],
            "description": "Client Credential Flow, for **machine-to-machine**"
          },
          "client_id": {
            "type": "string",
            "description": "OAuth application Client Id"
          },
          "client_secret": {
            "type": "string",
            "description": "OAuth application Client Secret"
          },
          "scope": {
            "type": "string",
            "enum": [
              "public",
              "spaces",
              "system",
              "proposals",
              "meetings",
              "debates",
              "pages",
              "blogs",
              "oauth"
            ],
            "description": "Requested scopes"
          }
        },
        "required": [
          "grant_type",
          "client_id",
          "client_secret",
          "scope"
        ]
      },
      "password_grant_login": {
        "type": "object",
        "title": "Login",
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "password"
            ],
            "description": "Resource Owner Password Credentials (ROPC) Flow, for **user login**"
          },
          "auth_type": {
            "type": "string",
            "enum": [
              "login"
            ],
            "description": "Type of ROPC"
          },
          "username": {
            "type": "string",
            "description": "User nickname"
          },
          "password": {
            "type": "string",
            "description": "User password"
          },
          "client_id": {
            "type": "string",
            "description": "OAuth application Client Id"
          },
          "client_secret": {
            "type": "string",
            "description": "OAuth application Client Secret"
          },
          "scope": {
            "type": "string",
            "enum": [
              "public",
              "spaces",
              "proposals",
              "meetings",
              "debates",
              "pages",
              "blogs",
              "oauth"
            ],
            "description": "Request scopes"
          }
        },
        "required": [
          "grant_type",
          "client_id",
          "client_secret",
          "scope",
          "username",
          "password",
          "auth_type"
        ]
      },
      "password_grant_impersonate": {
        "type": "object",
        "title": "Impersonation",
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "password"
            ],
            "description": "Resource Owner Password Credentials (ROPC) Flow, for **user impersonation**"
          },
          "auth_type": {
            "type": "string",
            "enum": [
              "impersonate"
            ],
            "description": "Type of ROPC"
          },
          "username": {
            "type": "string",
            "description": "User nickname, unique and at least 6 alphanumeric chars."
          },
          "id": {
            "type": "string",
            "description": "User id, will find over id and ignore username. Fails if register_on_missing=true."
          },
          "meta": {
            "type": "object",
            "title": "User impersonation settings",
            "description": "Impersonation Settings",
            "properties": {
              "register_on_missing": {
                "type": "boolean",
                "description": "Register the user if it does not exists. Default: false"
              },
              "accept_tos_on_register": {
                "type": "boolean",
                "description": "Accept the TOS on registration, used only if register_on_missing=true. Default: false"
              },
              "skip_confirmation_on_register": {
                "type": "boolean",
                "description": "Skip email confirmation on creation, used only if register_on_missing=true. Default: false"
              },
              "email": {
                "type": "string",
                "description": "User email to use on registration. used only if register_on_missing=true. Default to <username>@example.org"
              },
              "name": {
                "type": "string",
                "description": "User name. Used only if register_on_missing=true. Default to username"
              }
            },
            "additionalProperties": false
          },
          "client_id": {
            "type": "string",
            "description": "OAuth application Client Id"
          },
          "client_secret": {
            "type": "string",
            "description": "OAuth application Client Secret"
          },
          "scope": {
            "type": "string",
            "enum": [
              "public",
              "spaces",
              "proposals",
              "meetings",
              "debates",
              "pages",
              "blogs",
              "oauth"
            ],
            "description": "Request scopes"
          }
        },
        "additionalProperties": false,
        "required": [
          "grant_type",
          "client_id",
          "client_secret",
          "scope",
          "auth_type"
        ]
      },
      "oauth_grant_param": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/client_credential"
          },
          {
            "$ref": "#/components/schemas/password_grant_impersonate"
          },
          {
            "$ref": "#/components/schemas/password_grant_login"
          }
        ]
      },
      "password_grant_param": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/password_grant_impersonate"
          },
          {
            "$ref": "#/components/schemas/password_grant_login"
          }
        ]
      },
      "blog": {
        "type": "object",
        "title": "Blog Post",
        "properties": {
          "id": {
            "type": "string",
            "description": "Blog Post Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "blog"
            ]
          },
          "attributes": {
            "type": "object",
            "title": "Blog Post Attributes",
            "properties": {
              "title": {
                "$ref": "#/components/schemas/translated_prop"
              },
              "body": {
                "$ref": "#/components/schemas/translated_prop"
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "title",
              "body"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Blog Post Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published blog post?"
              },
              "scope": {
                "type": "integer",
                "description": "Scope Id"
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published"
            ]
          },
          "links": {
            "type": "object",
            "title": "Blog Post Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "collection": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              },
              "prev": {
                "$ref": "#/components/schemas/resource_link"
              },
              "next": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self",
              "collection",
              "related"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Blog Post Relationships",
            "properties": {
              "space": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "participatory_processes",
                          "assemblies"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Linked Space Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Linked Space"
              },
              "component": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "blog_component"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Linked Blog Component Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Linked Blog Component"
              }
            },
            "required": [
              "component",
              "space"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta",
          "links"
        ]
      },
      "blog_index_response": {
        "type": "object",
        "title": "Blog Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/blog"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "blog_item_response": {
        "type": "object",
        "title": "Blog Index Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/blog"
          }
        },
        "required": [
          "data"
        ]
      },
      "generic_component": {
        "type": "object",
        "title": "Component",
        "properties": {
          "id": {
            "type": "string",
            "description": "Component Id"
          },
          "type": {
            "$ref": "#/components/schemas/component_type"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Component name"
              },
              "global_announcement": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Component annoucement (intro)"
              },
              "participatory_space_type": {
                "$ref": "#/components/schemas/space_classes"
              },
              "participatory_space_id": {
                "type": "string",
                "description": "Associate space id. Part of the polymorphic association (participatory_space_type,participatory_space_id)"
              },
              "created_at": {
                "type": "string",
                "description": "Creation date of the component"
              },
              "updated_at": {
                "type": "string",
                "description": "Last update date of the component"
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "name",
              "manifest_name",
              "participatory_space_type",
              "participatory_space_id"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Component Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published component?"
              },
              "scopes_enabled": {
                "type": "boolean",
                "description": "Component handle scopes?"
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published",
              "scopes_enabled"
            ]
          },
          "links": {
            "type": "object",
            "title": "Component Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Component Relationships",
            "properties": {
              "resources": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Component Linked Resources Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Component Linked Resources Metadata",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count of resources"
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Component Linked Resources"
              }
            }
          }
        }
      },
      "proposal_component": {
        "type": "object",
        "title": "Proposal Component",
        "properties": {
          "id": {
            "type": "string",
            "description": "Proposal Component Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "proposal_component"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Proposal Component name"
              },
              "global_announcement": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Proposal Component annoucement (intro)"
              },
              "participatory_space_type": {
                "$ref": "#/components/schemas/space_classes"
              },
              "participatory_space_id": {
                "type": "string",
                "description": "Associate space id. Part of the polymorphic association (participatory_space_type,participatory_space_id)"
              },
              "created_at": {
                "type": "string",
                "description": "Creation date of the component"
              },
              "updated_at": {
                "type": "string",
                "description": "Last update date of the component"
              },
              "manifest_name": {
                "type": "string",
                "enum": [
                  "proposals"
                ]
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "name",
              "manifest_name",
              "participatory_space_type",
              "participatory_space_id"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Proposal Component Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published component?"
              },
              "scopes_enabled": {
                "type": "boolean",
                "description": "Proposal Component handle scopes?"
              },
              "can_create_proposals": {
                "type": "boolean",
                "description": "If the current user can create proposal (component allows, and user did not reach publication limit)"
              },
              "can_vote": {
                "type": "boolean",
                "description": "If the current user can vote on the component"
              },
              "can_comment": {
                "type": "boolean",
                "description": "If the current user comment on the component"
              },
              "geocoding_enabled": {
                "type": "boolean",
                "description": "If the component needs a map to display its resources"
              },
              "attachments_allowed": {
                "type": "boolean",
                "description": "If the component allows to attach files to resources"
              },
              "collaborative_drafts_enabled": {
                "type": "boolean",
                "description": "If you can create collaborative draft for the proposal"
              },
              "comments_enabled": {
                "type": "boolean",
                "description": "If you can comment on proposals"
              },
              "comments_max_length": {
                "type": "integer",
                "description": "Characters limit for comment"
              },
              "default_sort_order": {
                "type": "string",
                "enum": [
                  "random",
                  "recent",
                  "most_voted",
                  "most_endorsed",
                  "most_commented",
                  "most_followed",
                  "with_more_authors",
                  "automatic",
                  "default"
                ],
                "description": "Default order of proposals"
              },
              "official_proposals_enabled": {
                "type": "boolean",
                "description": "If proposals can be official"
              },
              "participatory_texts_enabled": {
                "type": "boolean",
                "description": "If proposals are based on a text modification"
              },
              "proposal_edit_before_minutes": {
                "type": "integer",
                "description": "Time in minute participant can edit the proposal"
              },
              "proposal_edit_time": {
                "type": "string",
                "enum": [
                  "infinite",
                  "limited"
                ],
                "description": "Type of restriction for proposal edition"
              },
              "proposal_limit": {
                "type": "integer",
                "description": "Max proposal per participant. No maximum if value is 0"
              },
              "resources_permissions_enabled": {
                "type": "boolean",
                "description": "If authorizations can be defined per proposal"
              },
              "threshold_per_proposal": {
                "type": "integer",
                "description": "Threshold to compare similar proposals"
              },
              "vote_limit": {
                "type": "integer",
                "description": "Max Number of vote per participant. 0 if no limit"
              },
              "endorsements_enabled": {
                "type": "boolean",
                "description": "If endorsements are enabled"
              },
              "votes_enabled": {
                "type": "boolean",
                "description": "If votes on proposal are enabled"
              },
              "creation_enabled": {
                "type": "boolean",
                "description": "If participant can create proposal are enabled"
              },
              "proposal_answering_enabled": {
                "type": "boolean",
                "description": "If officials can answer proposals"
              },
              "amendment_creation_enabled": {
                "type": "boolean",
                "description": "If participant can propose an amendment to a proposal"
              },
              "amendment_reaction_enabled": {
                "type": "boolean",
                "description": "If participant can react to an amendment of a proposal"
              },
              "amendment_promotion_enabled": {
                "type": "boolean",
                "description": "If participant choose an amendment to replace their initial proposal"
              },
              "votes": {
                "title": "Proposal Vote Weights Options",
                "description": "Vote weight, if can_vote is true.",
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Proposal Vote Weight",
                  "properties": {
                    "label": {
                      "type": "string",
                      "description": "Label to voting button"
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Value to add to the vote. 0 for abstention"
                    }
                  },
                  "required": [
                    "label",
                    "weight"
                  ]
                }
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published",
              "scopes_enabled",
              "can_create_proposals",
              "can_vote",
              "can_comment",
              "geocoding_enabled",
              "attachments_allowed",
              "vote_limit"
            ]
          },
          "links": {
            "type": "object",
            "title": "Proposal Component Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              },
              "draft": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Proposal Component Relationships",
            "properties": {
              "resources": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Proposal Component Linked Resources Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Proposal Component Linked Resources Metadata",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count of resources"
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Proposal Component Linked Resources"
              }
            }
          }
        },
        "description": "A proposal component can host proposals from participants, and official proposals (proposals from the organization).\nThis component have many metadatas that explain what are the restrictions regarding proposing, voting, commenting, amending or endorsing. \n\nFeatures toggles: \n- `can_create_proposals`: If participants can create proposals\n- `can_vote`: If participants can vote\n- `can_comment`: If participants can comments\n- .... and some more\n\n\n"
      },
      "proposal_component_index_response": {
        "type": "object",
        "title": "Proposal Component Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/proposal_component"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "proposal_component_item_response": {
        "type": "object",
        "title": "Proposal Component Index Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/proposal_component"
          }
        },
        "required": [
          "data"
        ]
      },
      "blog_component": {
        "type": "object",
        "title": "Blog Post Component",
        "properties": {
          "id": {
            "type": "string",
            "description": "Blog Post Component Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "blog_component"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Blog Post Component name"
              },
              "global_announcement": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Blog Post Component annoucement (intro)"
              },
              "participatory_space_type": {
                "$ref": "#/components/schemas/space_classes"
              },
              "participatory_space_id": {
                "type": "string",
                "description": "Associate space id. Part of the polymorphic association (participatory_space_type,participatory_space_id)"
              },
              "created_at": {
                "type": "string",
                "description": "Creation date of the component"
              },
              "updated_at": {
                "type": "string",
                "description": "Last update date of the component"
              },
              "manifest_name": {
                "type": "string",
                "enum": [
                  "blogs"
                ]
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "name",
              "manifest_name",
              "participatory_space_type",
              "participatory_space_id"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Blog Post Component Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published component?"
              },
              "scopes_enabled": {
                "type": "boolean",
                "description": "Blog Post Component handle scopes?"
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published",
              "scopes_enabled"
            ]
          },
          "links": {
            "type": "object",
            "title": "Blog Post Component Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Blog Post Component Relationships",
            "properties": {
              "resources": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Blog Post Component Linked Resources Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Blog Post Component Linked Resources Metadata",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count of resources"
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Blog Post Component Linked Resources"
              }
            }
          }
        }
      },
      "blog_component_index_response": {
        "type": "object",
        "title": "Blog Component Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/blog_component"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "blog_component_item_response": {
        "type": "object",
        "title": "Blog Component Index Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/blog_component"
          }
        },
        "required": [
          "data"
        ]
      },
      "other_component": {
        "type": "object",
        "title": "Generic Component",
        "properties": {
          "id": {
            "type": "string",
            "description": "Generic Component Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "page_component",
              "meeting_component",
              "budget_component",
              "survey_component",
              "accountability_component",
              "debate_component",
              "sortition_component",
              "awesome_map_component",
              "awesome_iframe_component"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Generic Component name"
              },
              "global_announcement": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Generic Component annoucement (intro)"
              },
              "participatory_space_type": {
                "$ref": "#/components/schemas/space_classes"
              },
              "participatory_space_id": {
                "type": "string",
                "description": "Associate space id. Part of the polymorphic association (participatory_space_type,participatory_space_id)"
              },
              "created_at": {
                "type": "string",
                "description": "Creation date of the component"
              },
              "updated_at": {
                "type": "string",
                "description": "Last update date of the component"
              },
              "manifest_name": {
                "type": "string",
                "enum": [
                  "pages",
                  "meetings",
                  "budgets",
                  "surveys",
                  "accountability",
                  "debates",
                  "sortitions",
                  "awesome_map",
                  "awesome_iframe"
                ]
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "name",
              "manifest_name",
              "participatory_space_type",
              "participatory_space_id"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Generic Component Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published component?"
              },
              "scopes_enabled": {
                "type": "boolean",
                "description": "Generic Component handle scopes?"
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published",
              "scopes_enabled"
            ]
          },
          "links": {
            "type": "object",
            "title": "Generic Component Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Generic Component Relationships",
            "properties": {
              "resources": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Generic Component Linked Resources Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Generic Component Linked Resources Metadata",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count of resources"
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Generic Component Linked Resources"
              }
            }
          }
        }
      },
      "component": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/proposal_component"
          },
          {
            "$ref": "#/components/schemas/blog_component"
          },
          {
            "$ref": "#/components/schemas/other_component"
          }
        ]
      },
      "component_index_response": {
        "type": "object",
        "title": "Component Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/component"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "component_item_response": {
        "type": "object",
        "title": "Component Index Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/component"
          }
        },
        "required": [
          "data"
        ]
      },
      "error": {
        "type": "object",
        "title": "Api Error Payload",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error title, starting with HTTP Code, like 400: bad request"
          },
          "error_description": {
            "type": "string",
            "description": "Error detail, mostly validation error"
          },
          "state": {
            "type": "string",
            "description": "authentification state"
          }
        },
        "additionalProperties": false,
        "required": [
          "error",
          "error_description"
        ]
      },
      "error_response": {
        "$ref": "#/components/schemas/error"
      },
      "health": {
        "type": "object",
        "title": "Health Status",
        "properties": {
          "message": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          }
        }
      },
      "introspect_data": {
        "type": "object",
        "title": "Introspection Response",
        "properties": {
          "sub": {
            "type": "integer",
            "description": "Access token id"
          },
          "active": {
            "type": "boolean",
            "description": "If the token can be used"
          },
          "aud": {
            "type": "string",
            "description": "Where this token can be used (organization host)"
          },
          "resource": {
            "type": "object",
            "title": "Resource details",
            "properties": {
              "id": {
                "type": "string",
                "description": "resource id"
              },
              "type": {
                "type": "string",
                "enum": [
                  "user"
                ],
                "description": "resource type"
              },
              "attributes": {
                "type": "object",
                "title": "Resource Attributes",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Last update date"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Creation date"
                  },
                  "personal_url": {
                    "type": "string",
                    "description": "Personal url (social link, website, etc.)"
                  },
                  "locale": {
                    "type": "string",
                    "description": "Current prefered locale",
                    "enum": [
                      "en",
                      "fr"
                    ]
                  }
                },
                "required": [
                  "email",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "sub",
          "active",
          "aud",
          "exp"
        ]
      },
      "locale": {
        "title": "Current locale",
        "type": "string",
        "enum": [
          "en",
          "fr"
        ]
      },
      "locales": {
        "type": "array",
        "title": "Available locales",
        "items": {
          "$ref": "#/components/schemas/locale"
        }
      },
      "organization": {
        "type": "object",
        "title": "Organization",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "organization"
            ]
          },
          "attributes": {
            "title": "Organization Attributes",
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/translated_prop",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "host": {
                "type": "string"
              },
              "available_locales": {
                "type": "array",
                "title": "Available locales",
                "items": {
                  "$ref": "#/components/schemas/locale"
                }
              },
              "default_locale": {
                "type": "string",
                "description": "defaut locale for the organization"
              },
              "secondary_hosts": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Additional host, will redirect (301) to `host`"
                }
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "additionalProperties": false,
            "required": [
              "created_at",
              "updated_at",
              "host",
              "name",
              "available_locales",
              "default_locale"
            ]
          },
          "meta": {
            "title": "Organization Metadata",
            "type": "object",
            "properties": {
              "locales": {
                "type": "array",
                "title": "Available locales",
                "items": {
                  "$ref": "#/components/schemas/locale"
                }
              }
            },
            "required": [
              "locales"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta"
        ]
      },
      "organization_index_response": {
        "type": "object",
        "title": "Organization Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/organization"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "organization_item_response": {
        "type": "object",
        "title": "Organization Index Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/organization"
          }
        },
        "required": [
          "data"
        ]
      },
      "organization_extended_data": {
        "type": "object",
        "title": "Organization extended data",
        "properties": {},
        "additionalProperties": true,
        "description": "Hash of values attached to an organization. These values won't be\ndisplayed to admins or users, consider this as an internal\ndata payload.\n"
      },
      "draft_proposal": {
        "type": "object",
        "title": "Draft Proposal",
        "properties": {
          "id": {
            "type": "string",
            "description": "Draft Proposal Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "draft_proposal"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Draft Proposal title"
              },
              "body": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Draft Proposal content"
              },
              "errors": {
                "type": "object",
                "title": "Draft Proposal Validation Errors",
                "properties": {
                  "title": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "body": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "title",
                  "body"
                ],
                "description": "Draft current errors"
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "title",
              "body"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Draft Proposition Metadata",
            "properties": {
              "publishable": {
                "type": "boolean",
                "description": "Draft is published as it is now?"
              },
              "client_id": {
                "type": "string",
                "description": "Attached client_id"
              },
              "scope": {
                "type": "integer",
                "description": "Scope Id"
              },
              "fields": {
                "type": "array",
                "description": "Editable field names",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "publishable",
              "client_id",
              "fields"
            ]
          },
          "links": {
            "type": "object",
            "title": "Proposal Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "collection": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self",
              "related",
              "collection"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Draft Proposal Relationships",
            "properties": {
              "space": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "$ref": "#/components/schemas/space_type"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Draft Proposal Related Space Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Draft Proposal Related Space"
              },
              "component": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "$ref": "#/components/schemas/component_type"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Draft Proposal Related Component Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Draft Proposal Related Component"
              },
              "author": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "user",
                          "user_group"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Draft Proposal Author Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Draft Proposal Author"
              },
              "coauthors": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user",
                            "user_group"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Draft Proposal Coauthors Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Draft Proposal Coauthors"
              }
            },
            "required": [
              "component",
              "space"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta",
          "links"
        ]
      },
      "draft_proposal_index_response": {
        "type": "object",
        "title": "Draft Proposal Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/draft_proposal"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "draft_proposal_item_response": {
        "type": "object",
        "title": "Draft Proposal Index Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/draft_proposal"
          }
        },
        "required": [
          "data"
        ]
      },
      "proposal": {
        "type": "object",
        "title": "Proposal",
        "properties": {
          "id": {
            "type": "string",
            "description": "Proposal Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "proposal"
            ]
          },
          "attributes": {
            "type": "object",
            "title": "Proposal Attributes",
            "properties": {
              "title": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Proposal title"
              },
              "body": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Proposal content"
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "title",
              "body"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Proposal Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published blog post?"
              },
              "scope": {
                "type": "integer",
                "description": "Scope Id"
              },
              "voted": {
                "type": "object",
                "title": "Current User Proposal Vote Metadata",
                "properties": {
                  "weight": {
                    "type": "integer",
                    "description": "Vote weight"
                  }
                },
                "required": [
                  "weight"
                ],
                "additionalProperties": false,
                "nullable": true
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published"
            ]
          },
          "links": {
            "type": "object",
            "title": "Proposal Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "collection": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              },
              "prev": {
                "$ref": "#/components/schemas/resource_link"
              },
              "next": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self",
              "collection",
              "related"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Proposal Relationships",
            "properties": {
              "state": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "proposal_state"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Proposal State Relationship Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Proposal State Relationship Metadata",
                    "properties": {
                      "token": {
                        "type": "string",
                        "description": "Proposal State token"
                      }
                    },
                    "required": [
                      "token"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Proposal State Relationship"
              },
              "space": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "$ref": "#/components/schemas/space_type"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Linked Space Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Linked Space"
              },
              "component": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "proposal_component"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Linked Proposal Component Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Linked Proposal Component"
              },
              "author": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "user",
                          "user_group"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Proposal's Author Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Proposal's Author"
              },
              "coauthors": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user",
                            "user_group"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Proposal's Coauthors Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Proposal's Coauthors"
              }
            },
            "required": [
              "component",
              "space"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta",
          "links"
        ]
      },
      "proposal_index_response": {
        "type": "object",
        "title": "Proposal Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/proposal"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "proposal_item_response": {
        "type": "object",
        "title": "Proposal Index Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/proposal"
          }
        },
        "required": [
          "data"
        ]
      },
      "user_extended_data": {
        "type": "object",
        "title": "User extended data",
        "properties": {},
        "additionalProperties": true,
        "description": "Hash of values attached to a user. These values won't be\ndisplayed to admins or users, consider this as an internal\ndata payload.\n"
      },
      "user": {
        "type": "object",
        "title": "User",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "user"
            ]
          },
          "meta": {
            "title": "User Metadata",
            "type": "object",
            "properties": {
              "blocked": {
                "type": "boolean",
                "description": "If the user is blocked, and need to be unblocked to signin"
              },
              "locked": {
                "type": "boolean",
                "description": "If the user is locked, and need to click on the mail link to unlock"
              }
            },
            "required": [
              "blocked",
              "locked"
            ],
            "additionalProperties": false
          },
          "relationships": {
            "type": "object",
            "title": "User Relationships",
            "properties": {
              "roles": {
                "type": "object",
                "title": "User Roles",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "title": "User Role",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user_role"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          },
          "attributes": {
            "type": "object",
            "title": "User Attributes",
            "properties": {
              "name": {
                "description": "User name, use to display the Profile identity. Public",
                "type": "string"
              },
              "nickname": {
                "description": "User nickname, unique identifier for the user. Public",
                "type": "string"
              },
              "personal_url": {
                "description": "Personal website URL or social link. Public",
                "type": "string"
              },
              "about": {
                "description": "Short bio of the user. Public",
                "type": "string"
              },
              "locale": {
                "$ref": "#/components/schemas/locale",
                "description": "User locale. Fallback to default locale of the organization. Private"
              },
              "email": {
                "description": "Email of the user. Private",
                "type": "string"
              },
              "extended_data": {
                "type": "object",
                "title": "User Extended Data",
                "description": "Additional data. Private",
                "properties": {},
                "additionalProperties": true
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "additionalProperties": false,
            "required": [
              "created_at",
              "updated_at",
              "name",
              "nickname",
              "locale",
              "extended_data"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "additionalProperties": false
      },
      "user_index_response": {
        "type": "object",
        "title": "User Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/user"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "user_item_response": {
        "type": "object",
        "title": "User Index Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/user"
          }
        },
        "required": [
          "data"
        ]
      },
      "magic_link": {
        "type": "object",
        "title": "Magic Link",
        "properties": {
          "id": {
            "type": "string",
            "description": "Magic Token ID"
          },
          "type": {
            "type": "string",
            "enum": [
              "magic_link"
            ]
          },
          "attributes": {
            "type": "object",
            "title": "Magic Link Attributes",
            "properties": {
              "token": {
                "type": "string",
                "description": "Magic Link Token"
              },
              "label": {
                "type": "string",
                "description": "Magic Link description"
              }
            },
            "required": [
              "token",
              "label"
            ]
          },
          "links": {
            "type": "object",
            "title": "Magic Link links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "sign_in": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "required": [
              "self",
              "sign_in"
            ]
          }
        },
        "required": [
          "attributes",
          "links",
          "id",
          "type"
        ],
        "additionalProperties": false
      },
      "magic_link_index_response": {
        "type": "object",
        "title": "Magic Link Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/magic_link"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "magic_link_item_response": {
        "type": "object",
        "title": "Magic Link Index Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/magic_link"
          }
        },
        "required": [
          "data"
        ]
      },
      "magic_link_redirect": {
        "type": "object",
        "title": "Magic Redirect",
        "properties": {
          "id": {
            "type": "string",
            "description": "Magic Token ID"
          },
          "type": {
            "type": "string",
            "enum": [
              "magic_link_redirect"
            ]
          },
          "attributes": {
            "type": "object",
            "title": "Magic Link Attributes",
            "properties": {
              "redirect_url": {
                "type": "string",
                "description": "Redirection destination"
              },
              "label": {
                "type": "string",
                "description": "Magic Link description"
              }
            },
            "required": [
              "redirect_url",
              "label"
            ]
          },
          "links": {
            "type": "object",
            "title": "Magic Link links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/get_action_link"
              },
              "magic_link": {
                "$ref": "#/components/schemas/get_action_link"
              }
            },
            "required": [
              "self",
              "magic_link"
            ]
          }
        },
        "required": [
          "attributes",
          "links",
          "id",
          "type"
        ],
        "additionalProperties": false
      }
    }
  },
  "paths": {
    "/components/proposal_components/{id}": {
      "get": {
        "summary": "Proposal Component Details",
        "tags": [
          "Components"
        ],
        "operationId": "proposal_component",
        "description": "Find on proposal",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "title": "id IN filter",
              "description": "match one of _id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[id_eq]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id equal filter",
              "description": "_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[id_lt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id less than filter",
              "description": "_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[id_gt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id greater than filter",
              "description": "_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id present filter",
              "description": "_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id blank filter",
              "description": "_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Proposal Component",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "1262",
                        "type": "proposal_component",
                        "attributes": {
                          "manifest_name": "proposals",
                          "participatory_space_type": "Decidim::ParticipatoryProcess",
                          "participatory_space_id": "362",
                          "name": {
                            "en": "<script>alert(\"component_name\");</script> Omnis ratione perspiciatis. 495",
                            "fr": ""
                          },
                          "global_announcement": {
                            "en": "",
                            "fr": ""
                          },
                          "created_at": "2025-06-25T06:17:14Z",
                          "updated_at": "2025-06-25T06:17:14Z"
                        },
                        "relationships": {
                          "resources": {
                            "data": [],
                            "meta": {
                              "count": 0
                            }
                          }
                        },
                        "links": {
                          "self": {
                            "href": "https://7.lvh.me/components/proposal_components/1262",
                            "title": "<script>alert(\"component_name\");</script> Omnis ratione perspiciatis. 495",
                            "rel": "resource",
                            "meta": {
                              "space_id": "362",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          },
                          "related": {
                            "href": "https://7.lvh.me/spaces/participatory_processes/362",
                            "title": "<script>alert(\"participatory_process_title\");</script> Optio blanditiis sequi. 469",
                            "rel": "resource",
                            "meta": {
                              "space_id": "362",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "scopes_enabled": false,
                          "amendments_enabled": false,
                          "attachments_allowed": false,
                          "collaborative_drafts_enabled": false,
                          "comments_enabled": true,
                          "comments_max_length": 1000,
                          "default_sort_order": "default",
                          "geocoding_enabled": false,
                          "minimum_votes_per_user": 0,
                          "official_proposals_enabled": true,
                          "participatory_texts_enabled": false,
                          "proposal_edit_before_minutes": 5,
                          "proposal_edit_time": "limited",
                          "proposal_limit": 0,
                          "resources_permissions_enabled": true,
                          "threshold_per_proposal": 0,
                          "vote_limit": 0,
                          "endorsements_enabled": true,
                          "votes_enabled": false,
                          "creation_enabled": false,
                          "proposal_answering_enabled": true,
                          "amendment_creation_enabled": true,
                          "amendment_reaction_enabled": true,
                          "amendment_promotion_enabled": true,
                          "can_create_proposals": false,
                          "can_vote": false,
                          "can_endorse": true,
                          "can_comment": true
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_component_item_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/me/magic_links": {
      "post": {
        "summary": "Create a magic-lick",
        "tags": [
          "Users"
        ],
        "operationId": "generateMagicLink",
        "description": "Generates a uniq magic link, valid for 5minutes. If the user follow this link, it will be signed in automatically\n",
        "parameters": [],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "oauth"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Magick link created",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "6",
                        "type": "magic_link",
                        "attributes": {
                          "token": "eEFiWUs2b21ER1BDekU4YkZteFk=",
                          "label": "My label"
                        },
                        "links": {
                          "self": {
                            "href": "https://11.lvh.me/api/rest_full/v0.2/me/magic_links",
                            "title": "Generates a magic link",
                            "rel": "resource",
                            "meta": {
                              "action_method": "POST",
                              "action_enctype": "application/x-www-form-urlencoded"
                            }
                          },
                          "sign_in": {
                            "href": "https://11.lvh.me/api/rest_full/v0.2/me/magic_links/eEFiWUs2b21ER1BDekU4YkZteFk=",
                            "title": "Sign in with magic link",
                            "rel": "resource",
                            "meta": {
                              "action_method": "GET"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/magic_link_item_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "bad_blocked": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "User blocked"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Generate Magic Link Payload",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "redirect_url": {
                        "type": "string",
                        "description": "Redirect url after sign-in"
                      }
                    },
                    "required": [
                      "redirect_url"
                    ],
                    "description": "Optional payload to configure the magic link"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/proposals": {
      "get": {
        "summary": "Proposals",
        "tags": [
          "Proposals"
        ],
        "operationId": "proposals",
        "description": "Search proposals",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "space_manifest",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "description": "Space type"
            },
            "required": false
          },
          {
            "name": "space_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Space Id"
            },
            "required": false
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "published_at",
                "rand"
              ]
            },
            "description": "Order by",
            "required": false
          },
          {
            "name": "order_direction",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "Order direction",
            "required": false
          },
          {
            "name": "filter[voted_weight_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "voted_weight IN filter",
              "description": "match one of _voted_weight_'s values in array. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight equal filter",
              "description": "_voted_weight_ is equal to. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight less than filter",
              "description": "_voted_weight_ is less than. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight greater than filter",
              "description": "_voted_weight_ is greater than. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "voted_weight present filter",
              "description": "_voted_weight_ is not null and not empty. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "voted_weight blank filter",
              "description": "_voted_weight_ is null or empty. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[state_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "state not IN filter",
              "description": "match none of _state_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[state_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "state IN filter",
              "description": "match one of _state_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[state_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_state_ starts with",
              "title": "state starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[state_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state equal filter",
              "description": "_state_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[state_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state not equal filter",
              "description": "_state_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[state_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state like filter",
              "description": "matches _state_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[state_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "state blank filter",
              "description": "_state_ is null or empty"
            },
            "required": false
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Proposal List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/proposal_index_response"
                },
                "examples": {
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "720",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-06-25T06:17:25Z",
                            "updated_at": "2025-06-25T06:17:25Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Necessitatibus autem veritatis. 2019",
                              "fr": ""
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Repellat architecto tempore. 2021</p>",
                              "fr": ""
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "382",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "1282",
                                "type": "proposal_component"
                              }
                            },
                            "state": {
                              "data": {
                                "id": "1046",
                                "type": "proposal_state"
                              },
                              "meta": {
                                "token": "accepted"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "1103",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "1103",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://32.lvh.me/public/components/1282",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "382",
                                "space_manifest": "participatory_processes",
                                "component_id": "1282",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://32.lvh.me/api/rest_full/v0.2/proposals/720",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1282",
                                "component_manifest": "proposals",
                                "space_id": "382",
                                "space_manifest": "participatory_processes",
                                "resource_id": "720",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://32.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1282",
                                "component_manifest": "proposals",
                                "space_id": "382",
                                "space_manifest": "participatory_processes",
                                "resource_id": "720",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "721",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-06-25T06:17:25Z",
                            "updated_at": "2025-06-25T06:17:25Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Dolor dolorem officia. 2029",
                              "fr": ""
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Numquam autem quisquam. 2031</p>",
                              "fr": ""
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "382",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "1282",
                                "type": "proposal_component"
                              }
                            },
                            "state": {
                              "data": {
                                "id": "1046",
                                "type": "proposal_state"
                              },
                              "meta": {
                                "token": "accepted"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "1104",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "1104",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://32.lvh.me/public/components/1282",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "382",
                                "space_manifest": "participatory_processes",
                                "component_id": "1282",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://32.lvh.me/api/rest_full/v0.2/proposals/721",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1282",
                                "component_manifest": "proposals",
                                "space_id": "382",
                                "space_manifest": "participatory_processes",
                                "resource_id": "721",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://32.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1282",
                                "component_manifest": "proposals",
                                "space_id": "382",
                                "space_manifest": "participatory_processes",
                                "resource_id": "721",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        }
                      ]
                    }
                  },
                  "state_non_rejected": {
                    "value": {
                      "data": [
                        {
                          "id": "702",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-06-25T06:17:23Z",
                            "updated_at": "2025-06-25T06:17:23Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Ratione eaque qui. 1687",
                              "fr": ""
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Ea recusandae maxime. 1689</p>",
                              "fr": ""
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "378",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "1278",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "1085",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "1085",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://28.lvh.me/public/components/1278",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://28.lvh.me/api/rest_full/v0.2/proposals/702",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "resource_id": "702",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://28.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "resource_id": "702",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "703",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-06-25T06:17:23Z",
                            "updated_at": "2025-06-25T06:17:23Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Magni et modi. 1697",
                              "fr": ""
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Aut quae doloremque. 1699</p>",
                              "fr": ""
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "378",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "1278",
                                "type": "proposal_component"
                              }
                            },
                            "state": {
                              "data": {
                                "id": "1034",
                                "type": "proposal_state"
                              },
                              "meta": {
                                "token": "accepted"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "1086",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "1086",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://28.lvh.me/public/components/1278",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://28.lvh.me/api/rest_full/v0.2/proposals/703",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "resource_id": "703",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://28.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "resource_id": "703",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "705",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-06-25T06:17:23Z",
                            "updated_at": "2025-06-25T06:17:23Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Id cum corrupti. 1717",
                              "fr": ""
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Amet ut tenetur. 1719</p>",
                              "fr": ""
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "378",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "1278",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "1088",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "1088",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://28.lvh.me/public/components/1278",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://28.lvh.me/api/rest_full/v0.2/proposals/705",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "resource_id": "705",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://28.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "resource_id": "705",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "706",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-06-25T06:17:23Z",
                            "updated_at": "2025-06-25T06:17:23Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Explicabo ut ea. 1727",
                              "fr": ""
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Aliquam quod rerum. 1729</p>",
                              "fr": ""
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "378",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "1278",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "1089",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "1089",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://28.lvh.me/public/components/1278",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://28.lvh.me/api/rest_full/v0.2/proposals/706",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "resource_id": "706",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://28.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "resource_id": "706",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "707",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-06-25T06:17:23Z",
                            "updated_at": "2025-06-25T06:17:23Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Hic ad quidem. 1737",
                              "fr": ""
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Maiores dolor qui. 1739</p>",
                              "fr": ""
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "378",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "1278",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "1090",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "1090",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://28.lvh.me/public/components/1278",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://28.lvh.me/api/rest_full/v0.2/proposals/707",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "resource_id": "707",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://28.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "resource_id": "707",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "708",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-06-25T06:17:24Z",
                            "updated_at": "2025-06-25T06:17:24Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Sunt delectus laborum. 1747",
                              "fr": ""
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Et laboriosam voluptatem. 1749</p>",
                              "fr": ""
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "378",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "1278",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "1091",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "1091",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://28.lvh.me/public/components/1278",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://28.lvh.me/api/rest_full/v0.2/proposals/708",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "resource_id": "708",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://28.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "resource_id": "708",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "709",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-06-25T06:17:24Z",
                            "updated_at": "2025-06-25T06:17:24Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Ratione quo debitis. 1757",
                              "fr": ""
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Ut laboriosam accusantium. 1759</p>",
                              "fr": ""
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "378",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "1278",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "1092",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "1092",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://28.lvh.me/public/components/1278",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://28.lvh.me/api/rest_full/v0.2/proposals/709",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "resource_id": "709",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://28.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1278",
                                "component_manifest": "proposals",
                                "space_id": "378",
                                "space_manifest": "participatory_processes",
                                "resource_id": "709",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        }
                      ]
                    }
                  },
                  "state_accepted": {
                    "value": {
                      "data": [
                        {
                          "id": "695",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-06-25T06:17:23Z",
                            "updated_at": "2025-06-25T06:17:23Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Officia qui labore. 1581",
                              "fr": ""
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Vel soluta aut. 1583</p>",
                              "fr": ""
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "377",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "1277",
                                "type": "proposal_component"
                              }
                            },
                            "state": {
                              "data": {
                                "id": "1031",
                                "type": "proposal_state"
                              },
                              "meta": {
                                "token": "accepted"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "1078",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "1078",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://27.lvh.me/public/components/1277",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "377",
                                "space_manifest": "participatory_processes",
                                "component_id": "1277",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://27.lvh.me/api/rest_full/v0.2/proposals/695",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1277",
                                "component_manifest": "proposals",
                                "space_id": "377",
                                "space_manifest": "participatory_processes",
                                "resource_id": "695",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://27.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1277",
                                "component_manifest": "proposals",
                                "space_id": "377",
                                "space_manifest": "participatory_processes",
                                "resource_id": "695",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/oauth/token": {
      "post": {
        "summary": "Request a OAuth token through Client Credentials",
        "tags": [
          "OAuth"
        ],
        "security": [],
        "operationId": "createToken",
        "description": "Create a oauth token for the given scopes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Token returned",
            "content": {
              "application/json": {
                "examples": {
                  "ok_ropc_login": {
                    "value": {
                      "access_token": "VZXdzGnagItQYXSYNN4y5LaNhSYegeod13e_jSAVxH4",
                      "token_type": "Bearer",
                      "expires_in": 7200,
                      "scope": "public proposals",
                      "created_at": 1750832248
                    }
                  },
                  "ok_ropc_impersonate": {
                    "value": {
                      "access_token": "gaOF8_eY-VcXnUAPDfeCGEIpD8rjFEwN0QS8CQxVGrU",
                      "token_type": "Bearer",
                      "expires_in": 7200,
                      "scope": "public",
                      "created_at": 1750832248
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Invalid Api Client, check credentials"
                    }
                  },
                  "invalid_username_on_register": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "User not found. To create one, user meta.register_on_missing"
                    }
                  },
                  "user_not_found": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "User not found. To create one, user meta.register_on_missing"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/oauth_grant_param"
              }
            }
          },
          "required": true
        }
      }
    },
    "/spaces/search": {
      "get": {
        "summary": "Search Participatory Spaces",
        "tags": [
          "Spaces"
        ],
        "operationId": "searchSpaces",
        "description": "List or search spaces of the organization. Can be processes, assemblies, or any other registred participatory space.",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[manifest_name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "participatory_processes",
                  "assemblies"
                ]
              },
              "title": "manifest_name not IN filter",
              "description": "match none of _manifest_name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "participatory_processes",
                  "assemblies"
                ]
              },
              "title": "manifest_name IN filter",
              "description": "match one of _manifest_name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_manifest_name_ starts with",
              "title": "manifest_name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "title": "manifest_name equal filter",
              "description": "_manifest_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "title": "manifest_name not equal filter",
              "description": "_manifest_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "manifest_name like filter",
              "description": "matches _manifest_name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "manifest_name blank filter",
              "description": "_manifest_name_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "title": "id IN filter",
              "description": "match one of _id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[id_eq]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id equal filter",
              "description": "_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[id_lt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id less than filter",
              "description": "_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[id_gt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id greater than filter",
              "description": "_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id present filter",
              "description": "_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id blank filter",
              "description": "_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[title_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "title not IN filter",
              "description": "match none of _title_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[title_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "title IN filter",
              "description": "match one of _title_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[title_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_title_ starts with",
              "title": "title starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[title_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "title equal filter",
              "description": "_title_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[title_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "title not equal filter",
              "description": "_title_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[title_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "title like filter",
              "description": "matches _title_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[title_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "title blank filter",
              "description": "_title_ is null or empty"
            },
            "required": false
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Search Results",
            "content": {
              "application/json": {
                "examples": {
                  "search_translatable_text": {
                    "value": {
                      "data": [
                        {
                          "id": "6",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "My assembly for testing purpose",
                              "fr": "c'est une assemblée"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Assumenda nostrum quidem. 14619",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Dicta exercitationem eius. 14621</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Ut sapiente perferendis. 14623</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "created_at": "2025-06-25T06:17:45Z",
                            "updated_at": "2025-06-25T06:17:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [
                                {
                                  "id": "1637",
                                  "type": "accountability_component"
                                },
                                {
                                  "id": "1642",
                                  "type": "awesome_iframe_component"
                                },
                                {
                                  "id": "1641",
                                  "type": "awesome_map_component"
                                },
                                {
                                  "id": "1640",
                                  "type": "blog_component"
                                },
                                {
                                  "id": "1635",
                                  "type": "budget_component"
                                },
                                {
                                  "id": "1638",
                                  "type": "debate_component"
                                },
                                {
                                  "id": "1634",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "1627",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "1629",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "1631",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "1632",
                                  "type": "page_component"
                                },
                                {
                                  "id": "1630",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "1626",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "1633",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "1628",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "1639",
                                  "type": "sortition_component"
                                },
                                {
                                  "id": "1636",
                                  "type": "survey_component"
                                }
                              ],
                              "meta": {
                                "count": 17
                              },
                              "links": {
                                "self": {
                                  "href": "https://188.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=6",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "6",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://188.lvh.me/public/assemblies/6",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "6",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://188.lvh.me/system/organizations/420",
                              "title": "Abbott-Hettinger",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "440",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Cum qui voluptatem. 13837",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Est sunt nesciunt. 13839",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Impedit ea non. 13841</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Ratione neque et. 13843</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "created_at": "2025-06-25T06:17:45Z",
                            "updated_at": "2025-06-25T06:17:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://174.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=440",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "440",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://174.lvh.me/public/participatory_processes/440",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "440",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://174.lvh.me/system/organizations/418",
                              "title": "Glover, Kshlerin and Goodwin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "332",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Suscipit at qui. 13857",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Neque placeat aperiam. 13859",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Nisi qui aut. 13861</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Libero dolores fugit. 13863</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "created_at": "2025-06-25T06:17:45Z",
                            "updated_at": "2025-06-25T06:17:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://174.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=332",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "332",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://174.lvh.me/public/assemblies/332",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "332",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://174.lvh.me/system/organizations/418",
                              "title": "Glover, Kshlerin and Goodwin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "331",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Enim quas nulla. 13807",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Fugit dolores quod. 13809",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Culpa sed autem. 13811</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Amet dolorem ea. 13813</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "created_at": "2025-06-25T06:17:45Z",
                            "updated_at": "2025-06-25T06:17:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://174.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=331",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "331",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://174.lvh.me/public/assemblies/331",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "331",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://174.lvh.me/system/organizations/418",
                              "title": "Glover, Kshlerin and Goodwin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "333",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Voluptate nulla iusto. 13907",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Vitae quia maiores. 13909",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Quia eaque fuga. 13911</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Animi est consectetur. 13913</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "created_at": "2025-06-25T06:17:45Z",
                            "updated_at": "2025-06-25T06:17:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://174.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=333",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "333",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://174.lvh.me/public/assemblies/333",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "333",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://174.lvh.me/system/organizations/418",
                              "title": "Glover, Kshlerin and Goodwin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "442",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Incidunt adipisci quis. 13937",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Natus placeat vitae. 13939",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Ut dolor reiciendis. 13941</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Quia tempore similique. 13943</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "created_at": "2025-06-25T06:17:45Z",
                            "updated_at": "2025-06-25T06:17:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://174.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=442",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "442",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://174.lvh.me/public/participatory_processes/442",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "442",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://174.lvh.me/system/organizations/418",
                              "title": "Glover, Kshlerin and Goodwin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "441",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Eum id quia. 13887",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Repudiandae voluptatem consequatur. 13889",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Omnis velit et. 13891</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Eius rem et. 13893</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "created_at": "2025-06-25T06:17:45Z",
                            "updated_at": "2025-06-25T06:17:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://174.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=441",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "441",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://174.lvh.me/public/participatory_processes/441",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "441",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://174.lvh.me/system/organizations/418",
                              "title": "Glover, Kshlerin and Goodwin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "6",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "My assembly for testing purpose",
                              "fr": "c'est une assemblée"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Dignissimos quibusdam iure. 13443",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Iusto architecto porro. 13445</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Nemo sequi animi. 13447</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "created_at": "2025-06-25T06:17:44Z",
                            "updated_at": "2025-06-25T06:17:44Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [
                                {
                                  "id": "1603",
                                  "type": "accountability_component"
                                },
                                {
                                  "id": "1608",
                                  "type": "awesome_iframe_component"
                                },
                                {
                                  "id": "1607",
                                  "type": "awesome_map_component"
                                },
                                {
                                  "id": "1606",
                                  "type": "blog_component"
                                },
                                {
                                  "id": "1601",
                                  "type": "budget_component"
                                },
                                {
                                  "id": "1604",
                                  "type": "debate_component"
                                },
                                {
                                  "id": "1600",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "1593",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "1595",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "1597",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "1598",
                                  "type": "page_component"
                                },
                                {
                                  "id": "1596",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "1592",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "1599",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "1594",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "1605",
                                  "type": "sortition_component"
                                },
                                {
                                  "id": "1602",
                                  "type": "survey_component"
                                }
                              ],
                              "meta": {
                                "count": 17
                              },
                              "links": {
                                "self": {
                                  "href": "https://174.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=6",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "6",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://174.lvh.me/public/assemblies/6",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "6",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://174.lvh.me/system/organizations/418",
                              "title": "Glover, Kshlerin and Goodwin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "manifest_name_in_Assemblies": {
                    "value": {
                      "data": [
                        {
                          "id": "334",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Distinctio ex velit. 14395",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Tempora blanditiis enim. 14397",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Quos est rerum. 14399</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Eum laboriosam enim. 14401</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "created_at": "2025-06-25T06:17:45Z",
                            "updated_at": "2025-06-25T06:17:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://181.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=334",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "334",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://181.lvh.me/public/assemblies/334",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "334",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://181.lvh.me/system/organizations/419",
                              "title": "Hamill, Mohr and Marquardt",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "336",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Perspiciatis veritatis voluptatem. 14495",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Quis commodi corporis. 14497",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Pariatur aut a. 14499</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Dolor porro aut. 14501</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "created_at": "2025-06-25T06:17:45Z",
                            "updated_at": "2025-06-25T06:17:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://181.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=336",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "336",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://181.lvh.me/public/assemblies/336",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "336",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://181.lvh.me/system/organizations/419",
                              "title": "Hamill, Mohr and Marquardt",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "335",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Voluptatem ab hic. 14445",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Eum inventore laudantium. 14447",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Rem id laudantium. 14449</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Consequatur voluptates velit. 14451</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "created_at": "2025-06-25T06:17:45Z",
                            "updated_at": "2025-06-25T06:17:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://181.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=335",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "335",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://181.lvh.me/public/assemblies/335",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "335",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://181.lvh.me/system/organizations/419",
                              "title": "Hamill, Mohr and Marquardt",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "6",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "My assembly for testing purpose",
                              "fr": "c'est une assemblée"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Consectetur ipsa aut. 14031",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Aut est itaque. 14033</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Eum veritatis ut. 14035</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "created_at": "2025-06-25T06:17:45Z",
                            "updated_at": "2025-06-25T06:17:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [
                                {
                                  "id": "1620",
                                  "type": "accountability_component"
                                },
                                {
                                  "id": "1625",
                                  "type": "awesome_iframe_component"
                                },
                                {
                                  "id": "1624",
                                  "type": "awesome_map_component"
                                },
                                {
                                  "id": "1623",
                                  "type": "blog_component"
                                },
                                {
                                  "id": "1618",
                                  "type": "budget_component"
                                },
                                {
                                  "id": "1621",
                                  "type": "debate_component"
                                },
                                {
                                  "id": "1617",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "1610",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "1612",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "1614",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "1615",
                                  "type": "page_component"
                                },
                                {
                                  "id": "1613",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "1609",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "1616",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "1611",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "1622",
                                  "type": "sortition_component"
                                },
                                {
                                  "id": "1619",
                                  "type": "survey_component"
                                }
                              ],
                              "meta": {
                                "count": 17
                              },
                              "links": {
                                "self": {
                                  "href": "https://181.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=6",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "6",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://181.lvh.me/public/assemblies/6",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "6",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://181.lvh.me/system/organizations/419",
                              "title": "Hamill, Mohr and Marquardt",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "filter_by_id_in": {
                    "value": {
                      "data": [
                        {
                          "id": "425",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Sed voluptate nobis. 10627",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Commodi blanditiis illo. 10629",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Dolores rerum id. 10631</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Quasi et et. 10633</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "created_at": "2025-06-25T06:17:41Z",
                            "updated_at": "2025-06-25T06:17:41Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://139.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=425",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "425",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://139.lvh.me/public/participatory_processes/425",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "425",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://139.lvh.me/system/organizations/413",
                              "title": "Green Group",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "426",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Suscipit aut enim. 10677",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Vitae laboriosam neque. 10679",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Et voluptatum quis. 10681</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Consequatur nihil vero. 10683</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "created_at": "2025-06-25T06:17:41Z",
                            "updated_at": "2025-06-25T06:17:41Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://139.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=426",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "426",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://139.lvh.me/public/participatory_processes/426",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "426",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://139.lvh.me/system/organizations/413",
                              "title": "Green Group",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "427",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Nemo perferendis quia. 10727",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Id accusantium qui. 10729",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Aut inventore dicta. 10731</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Aut voluptates id. 10733</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "created_at": "2025-06-25T06:17:41Z",
                            "updated_at": "2025-06-25T06:17:41Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://139.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=427",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "427",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://139.lvh.me/public/participatory_processes/427",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "427",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://139.lvh.me/system/organizations/413",
                              "title": "Green Group",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "327",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Cumque cupiditate adipisci. 12817",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Ad ut distinctio. 12819",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Eius quia perferendis. 12821</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Natus aut assumenda. 12823</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "created_at": "2025-06-25T06:17:43Z",
                            "updated_at": "2025-06-25T06:17:43Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://160.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=327",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "327",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://160.lvh.me/public/assemblies/327",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "327",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://160.lvh.me/system/organizations/416",
                              "title": "Towne and Sons",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "326",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Excepturi ipsa et. 12787",
                              "fr": ""
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Ex odit dolor. 12789",
                              "fr": ""
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Dolores asperiores aliquam. 12791</p>",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Ut quibusdam sit. 12793</p>",
                              "fr": ""
                            },
                            "visibility": "public",
                            "created_at": "2025-06-25T06:17:43Z",
                            "updated_at": "2025-06-25T06:17:43Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://160.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=326",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "326",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://160.lvh.me/public/assemblies/326",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "326",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://160.lvh.me/system/organizations/416",
                              "title": "Towne and Sons",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/space_index_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}/extended_data": {
      "put": {
        "summary": "Update organization extended data",
        "tags": [
          "Organizations"
        ],
        "operationId": "setOrganizationExtendedData",
        "description": "The extended_data feature allows you to update a hash with recursive merging. Use the body payload with these keys:\n\n1. `data`: The value or hash you want to update.\n2. `object_path`: The dot-style path to the key (e.g., access.this.key).\n\n**Root path**<br />\nTo update data from root of the hash, use `object_path=\".\"`.\n\nExample:\n```\n  body={\"data\": {\"name\": \"Jane\"}, \"object_path\": \"personnal\"}\n```\nThis recursively merges data into the hash without removing existing keys.\n\n**Merge some data**<br />\nInitial hash:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\"}\n  }\n```\nPatch payload:\n```json\n  {\n    \"data\": {\n      \"name\": \"Jane\"\n    },\n    \"object_path\": \"personnal\"\n  }\n```\nResult:\n```\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\", \"name\": \"Jane\"}\n  }\n```\n\n**Create new Paths**<br />\nPaths are created as needed.\nExemple:\n```json\n  body = {\"data\": {\"external_user_id\": 12}, \"object_path\": \"data-store.my-app.foo\"}\n```\nResult:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\"},\n    \"data-store\": {\"my-app\": {\"foo\": {\"external_user_id\": 12}}}\n  }\n```\nAlternatively:\n```\n  body = {\"data\": 12, \"object_path\": \"data-store.my-app.foo.external_user_id\"}\n```\n\n**Remove a key**<br />\nSet a key to null or an empty value to remove it.\n\nExample: Initial hash:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\", \"name\": \"Jane\"}\n  }\n```\nPatch:\n```json\n  body = {\"data\": {\"birthday\": \"\"}, \"object_path\": \"personnal\"}\n```\n\nResult:\n```\n{\n  \"personnal\": {\"name\": \"Jane\"}\n}\n```\n\n**Return Value**<br />\nThe update request returns the updated value at the specified path.\n\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Id of the organization"
            },
            "required": true
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Update extended data value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organization_extended_data"
                },
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "foo": "bar"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "User Extended Data Payload",
                "properties": {
                  "data": {
                    "type": "object",
                    "title": "User Extended Data Data",
                    "description": "New value for the extended data at the given path"
                  },
                  "object_path": {
                    "type": "string",
                    "description": "object path, in dot style, like foo.bar. use '.' to update the whole user data"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      },
      "get": {
        "summary": "Get organization extended data",
        "tags": [
          "Organizations"
        ],
        "operationId": "organizationData",
        "description": "Fetch organization extended data",
        "parameters": [
          {
            "name": "object_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "object path, in dot style, like foo.bar"
            }
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Id of the organization"
            },
            "required": true
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Resource not found",
                      "error_description": "Resource not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Extended Data for a given object_path given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organization_extended_data"
                },
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "personal": {
                          "birthday": "1989-01-28"
                        },
                        "birthday": "1989-01-28"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/components/proposal_components": {
      "get": {
        "summary": "Proposal Components",
        "tags": [
          "Components"
        ],
        "operationId": "proposal_components",
        "description": "List or search proposal components of the organization",
        "parameters": [
          {
            "name": "filter[name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name not IN filter",
              "description": "match none of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name IN filter",
              "description": "match one of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_name_ starts with",
              "title": "name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name equal filter",
              "description": "_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name not equal filter",
              "description": "_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name like filter",
              "description": "matches _name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "name blank filter",
              "description": "_name_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "title": "participatory_space_type not IN filter",
              "description": "match none of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "title": "participatory_space_type IN filter",
              "description": "match one of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_participatory_space_type_ starts with",
              "title": "participatory_space_type starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Decidim::Assembly",
              "title": "participatory_space_type equal filter",
              "description": "_participatory_space_type_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Decidim::Assembly",
              "title": "participatory_space_type not equal filter",
              "description": "_participatory_space_type_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_type like filter",
              "description": "matches _participatory_space_type_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_type blank filter",
              "description": "_participatory_space_type_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "participatory_space_id IN filter",
              "description": "match one of _participatory_space_id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id equal filter",
              "description": "_participatory_space_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id less than filter",
              "description": "_participatory_space_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id greater than filter",
              "description": "_participatory_space_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id present filter",
              "description": "_participatory_space_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id blank filter",
              "description": "_participatory_space_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "List of proposal components",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/proposal_component_index_response"
                },
                "examples": {
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "1739",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::Assembly",
                            "participatory_space_id": "364",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Illum fuga cum. 18759",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:17:58Z",
                            "updated_at": "2025-06-25T06:17:58Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://239.lvh.me/components/proposal_components/1739",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "364",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://239.lvh.me/spaces/assemblies/364",
                              "title": "<script>alert(\"assembly_title\");</script> Exercitationem illum qui. 18665",
                              "rel": "resource",
                              "meta": {
                                "space_id": "364",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "1740",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::Assembly",
                            "participatory_space_id": "364",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Dolore doloribus modi. 18765",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:17:58Z",
                            "updated_at": "2025-06-25T06:17:58Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://239.lvh.me/components/proposal_components/1740",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "364",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://239.lvh.me/spaces/assemblies/364",
                              "title": "<script>alert(\"assembly_title\");</script> Exercitationem illum qui. 18665",
                              "rel": "resource",
                              "meta": {
                                "space_id": "364",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        }
                      ]
                    }
                  },
                  "ok_with_draft": {
                    "value": {
                      "data": [
                        {
                          "id": "1751",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "477",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Ratione ut tempore. 19173",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:18:00Z",
                            "updated_at": "2025-06-25T06:18:00Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "928",
                                  "type": "proposal"
                                },
                                {
                                  "id": "929",
                                  "type": "proposal"
                                },
                                {
                                  "id": "930",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 3
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://243.lvh.me/components/proposal_components/1751",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "477",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://243.lvh.me/spaces/participatory_processes/477",
                              "title": "<script>alert(\"participatory_process_title\");</script> Possimus sequi voluptas. 19147",
                              "rel": "resource",
                              "meta": {
                                "space_id": "477",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "draft": {
                              "href": "https://243.lvh.me/api/rest_full/v0.2/draft_proposals/931",
                              "title": "Draft Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1753",
                                "component_manifest": "proposals",
                                "space_id": "477",
                                "space_manifest": "participatory_processes",
                                "resource_id": "931",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "1752",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "477",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:18:00Z",
                            "updated_at": "2025-06-25T06:18:00Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://243.lvh.me/components/proposal_components/1752",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "477",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://243.lvh.me/spaces/participatory_processes/477",
                              "title": "<script>alert(\"participatory_process_title\");</script> Possimus sequi voluptas. 19147",
                              "rel": "resource",
                              "meta": {
                                "space_id": "477",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "draft": {
                              "href": "https://243.lvh.me/api/rest_full/v0.2/draft_proposals/931",
                              "title": "Draft Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1753",
                                "component_manifest": "proposals",
                                "space_id": "477",
                                "space_manifest": "participatory_processes",
                                "resource_id": "931",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        },
                        {
                          "id": "1753",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "477",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Aliquid saepe cupiditate. 19211",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:18:00Z",
                            "updated_at": "2025-06-25T06:18:00Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "931",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://243.lvh.me/components/proposal_components/1753",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "477",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://243.lvh.me/spaces/participatory_processes/477",
                              "title": "<script>alert(\"participatory_process_title\");</script> Possimus sequi voluptas. 19147",
                              "rel": "resource",
                              "meta": {
                                "space_id": "477",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "draft": {
                              "href": "https://243.lvh.me/api/rest_full/v0.2/draft_proposals/931",
                              "title": "Draft Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "1753",
                                "component_manifest": "proposals",
                                "space_id": "477",
                                "space_manifest": "participatory_processes",
                                "resource_id": "931",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        }
                      ]
                    }
                  },
                  "components_in_Process": {
                    "value": {
                      "data": [
                        {
                          "id": "1749",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "476",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Molestiae quia officiis. 19069",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:17:59Z",
                            "updated_at": "2025-06-25T06:17:59Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "925",
                                  "type": "proposal"
                                },
                                {
                                  "id": "926",
                                  "type": "proposal"
                                },
                                {
                                  "id": "927",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 3
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://242.lvh.me/components/proposal_components/1749",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "476",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://242.lvh.me/spaces/participatory_processes/476",
                              "title": "<script>alert(\"participatory_process_title\");</script> Cupiditate officia veniam. 19043",
                              "rel": "resource",
                              "meta": {
                                "space_id": "476",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "1750",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "476",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:17:59Z",
                            "updated_at": "2025-06-25T06:17:59Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://242.lvh.me/components/proposal_components/1750",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "476",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://242.lvh.me/spaces/participatory_processes/476",
                              "title": "<script>alert(\"participatory_process_title\");</script> Cupiditate officia veniam. 19043",
                              "rel": "resource",
                              "meta": {
                                "space_id": "476",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "1754",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "478",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Soluta atque voluptas. 19291",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:18:00Z",
                            "updated_at": "2025-06-25T06:18:00Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "932",
                                  "type": "proposal"
                                },
                                {
                                  "id": "933",
                                  "type": "proposal"
                                },
                                {
                                  "id": "934",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 3
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://244.lvh.me/components/proposal_components/1754",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "478",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://244.lvh.me/spaces/participatory_processes/478",
                              "title": "<script>alert(\"participatory_process_title\");</script> Et velit facilis. 19265",
                              "rel": "resource",
                              "meta": {
                                "space_id": "478",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "1755",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "478",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:18:00Z",
                            "updated_at": "2025-06-25T06:18:00Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://244.lvh.me/components/proposal_components/1755",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "478",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://244.lvh.me/spaces/participatory_processes/478",
                              "title": "<script>alert(\"participatory_process_title\");</script> Et velit facilis. 19265",
                              "rel": "resource",
                              "meta": {
                                "space_id": "478",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/spaces/assemblies/{id}": {
      "get": {
        "summary": "Assemblies Details",
        "tags": [
          "Spaces"
        ],
        "operationId": "Assemblies",
        "description": "Get detail of a Assemblies given its id",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Id of the space"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Assemblies Details",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "6",
                        "type": "space",
                        "attributes": {
                          "manifest_name": "assemblies",
                          "participatory_space_type": "Decidim::Assembly",
                          "title": {
                            "en": "My assembly for testing purpose",
                            "fr": "c'est une assemblée"
                          },
                          "subtitle": {
                            "en": "<script>alert(\"assembly_subtitle\");</script> Facilis est natus. 25195",
                            "fr": ""
                          },
                          "short_description": {
                            "en": "<p><script>alert(\"assembly_short_description\");</script> Velit amet distinctio. 25197</p>",
                            "fr": ""
                          },
                          "description": {
                            "en": "<p><script>alert(\"assembly_description\");</script> Animi voluptas suscipit. 25199</p>",
                            "fr": ""
                          },
                          "visibility": "public",
                          "created_at": "2025-06-25T06:18:09Z",
                          "updated_at": "2025-06-25T06:18:09Z"
                        },
                        "relationships": {
                          "components": {
                            "data": [
                              {
                                "id": "1922",
                                "type": "accountability_component"
                              },
                              {
                                "id": "1927",
                                "type": "awesome_iframe_component"
                              },
                              {
                                "id": "1926",
                                "type": "awesome_map_component"
                              },
                              {
                                "id": "1925",
                                "type": "blog_component"
                              },
                              {
                                "id": "1920",
                                "type": "budget_component"
                              },
                              {
                                "id": "1923",
                                "type": "debate_component"
                              },
                              {
                                "id": "1919",
                                "type": "meeting_component"
                              },
                              {
                                "id": "1912",
                                "type": "meeting_component"
                              },
                              {
                                "id": "1914",
                                "type": "meeting_component"
                              },
                              {
                                "id": "1916",
                                "type": "meeting_component"
                              },
                              {
                                "id": "1917",
                                "type": "page_component"
                              },
                              {
                                "id": "1915",
                                "type": "proposal_component"
                              },
                              {
                                "id": "1911",
                                "type": "proposal_component"
                              },
                              {
                                "id": "1918",
                                "type": "proposal_component"
                              },
                              {
                                "id": "1913",
                                "type": "proposal_component"
                              },
                              {
                                "id": "1924",
                                "type": "sortition_component"
                              },
                              {
                                "id": "1921",
                                "type": "survey_component"
                              }
                            ],
                            "meta": {
                              "count": 17
                            },
                            "links": {
                              "self": {
                                "href": "https://309.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=6",
                                "title": "Component list for this space",
                                "rel": "resource",
                                "meta": {
                                  "space_manifest": "assemblies",
                                  "space_id": "6",
                                  "action_method": "GET"
                                }
                              }
                            }
                          }
                        },
                        "links": {
                          "self": {
                            "href": "https://309.lvh.me/public/assemblies/6",
                            "title": "My assembly for testing purpose",
                            "rel": "resource",
                            "meta": {
                              "space_id": "6",
                              "space_manifest": "assemblies",
                              "action_method": "GET"
                            }
                          },
                          "related": {
                            "href": "https://309.lvh.me/system/organizations/463",
                            "title": "Boehm-Bruen",
                            "rel": "resource",
                            "meta": {
                              "action_method": "GET"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/space_item_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/spaces/participatory_processes/{id}": {
      "get": {
        "summary": "Participatory Processes Details",
        "tags": [
          "Spaces"
        ],
        "operationId": "ParticipatoryProcesses",
        "description": "Get detail of a Participatory Processes given its id",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Id of the space"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Participatory Processes Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/space_item_response"
                },
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "6",
                        "type": "space",
                        "attributes": {
                          "manifest_name": "participatory_processes",
                          "participatory_space_type": "Decidim::ParticipatoryProcess",
                          "title": {
                            "en": "My participatory_process for testing purpose",
                            "fr": "c'est une concertation"
                          },
                          "subtitle": {
                            "en": "<script>alert(\"participatory_process_subtitle\");</script> Est quidem repellendus. 32179",
                            "fr": ""
                          },
                          "short_description": {
                            "en": "<p><script>alert(\"participatory_process_short_description\");</script> Molestias reprehenderit numquam. 32181</p>",
                            "fr": ""
                          },
                          "description": {
                            "en": "<p><script>alert(\"participatory_process_description\");</script> Consequatur cupiditate eveniet. 32183</p>",
                            "fr": ""
                          },
                          "visibility": "public",
                          "created_at": "2025-06-25T06:18:17Z",
                          "updated_at": "2025-06-25T06:18:17Z"
                        },
                        "relationships": {
                          "components": {
                            "data": [],
                            "meta": {
                              "count": 0
                            },
                            "links": {
                              "self": {
                                "href": "https://386.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=6",
                                "title": "Component list for this space",
                                "rel": "resource",
                                "meta": {
                                  "space_manifest": "participatory_processes",
                                  "space_id": "6",
                                  "action_method": "GET"
                                }
                              }
                            }
                          }
                        },
                        "links": {
                          "self": {
                            "href": "https://386.lvh.me/public/participatory_processes/6",
                            "title": "My participatory_process for testing purpose",
                            "rel": "resource",
                            "meta": {
                              "space_id": "6",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          },
                          "related": {
                            "href": "https://386.lvh.me/system/organizations/474",
                            "title": "McKenzie-Hackett",
                            "rel": "resource",
                            "meta": {
                              "action_method": "GET"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/oauth/introspect": {
      "post": {
        "summary": "Introspect a OAuth token",
        "tags": [
          "OAuth"
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          },
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "operationId": "introspectToken",
        "description": "Get given oauth token details",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User details returned",
            "content": {
              "application/json": {
                "examples": {
                  "bearer_ropc": {
                    "value": {
                      "active": true,
                      "scope": "public",
                      "client_id": "Gzeu6fH7I36u3x-N8h_B7PLsxjb8QJezqdWsv0hQadg",
                      "token_type": "Bearer",
                      "exp": 3504256604,
                      "iat": 1750832302,
                      "sub": 462,
                      "aud": "https://415.lvh.me",
                      "resource": {
                        "id": "1575",
                        "type": "user",
                        "attributes": {
                          "email": "user550@example.org",
                          "name": "Tarra Schuppe",
                          "created_at": "2025-06-25T06:18:22Z",
                          "updated_at": "2025-06-25T06:18:22Z",
                          "personal_url": "http://mclaughlin-hand.example/roy",
                          "locale": "en"
                        },
                        "relationships": {},
                        "meta": {
                          "blocked": false,
                          "locked": false
                        }
                      }
                    }
                  },
                  "bearer_client_credential": {
                    "value": {
                      "active": true,
                      "scope": "public",
                      "client_id": "BRz-GjYw9ukfxENeNbJBwtE8jioSpIP_mdTCvaRlmQQ",
                      "token_type": "Bearer",
                      "exp": 3504256606,
                      "iat": 1750832303,
                      "sub": 465,
                      "aud": "https://416.lvh.me"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/introspect_data"
                }
              }
            }
          },
          "401": {
            "description": "When the token is invalid",
            "content": {
              "application/json": {
                "examples": {
                  "expired_token": {
                    "value": {
                      "error": "invalid_token",
                      "error_description": "The access token expired",
                      "state": "unauthorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List available Users",
        "tags": [
          "Users"
        ],
        "operationId": "users",
        "description": "List or search users of the organization",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[nickname_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "nickname not IN filter",
              "description": "match none of _nickname_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[nickname_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "nickname IN filter",
              "description": "match one of _nickname_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[nickname_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_nickname_ starts with",
              "title": "nickname starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[nickname_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "nickname equal filter",
              "description": "_nickname_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[nickname_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "nickname not equal filter",
              "description": "_nickname_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[nickname_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "nickname like filter",
              "description": "matches _nickname_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[nickname_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "nickname blank filter",
              "description": "_nickname_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "title": "id IN filter",
              "description": "match one of _id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[id_eq]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id equal filter",
              "description": "_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[id_lt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id less than filter",
              "description": "_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[id_gt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id greater than filter",
              "description": "_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id present filter",
              "description": "_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id blank filter",
              "description": "_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[extended_data_cont]",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "example": "\"foo\": \"bar\"",
            "description": "Search on user extended_data. use the format: `\"<key>\":<space>\"<value>\"`"
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "oauth"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Users listed",
            "content": {
              "application/json": {
                "examples": {
                  "filter_by_id_in": {
                    "value": {
                      "data": [
                        {
                          "id": "1588",
                          "type": "user",
                          "attributes": {
                            "name": "Andreas Hand",
                            "nickname": "utrxy9d7dh_562",
                            "personal_url": "http://hilpert.test/chin_shields",
                            "email": "user563@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Blanditiis autem nam. 34821\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Tempore atque molestias. 34822\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-06-25T06:18:25Z",
                            "updated_at": "2025-06-25T06:18:25Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "1584",
                          "type": "user",
                          "attributes": {
                            "name": "Hans Effertz",
                            "nickname": "664fl3_558",
                            "personal_url": "http://sanford.test/art_mckenzie",
                            "email": "user559@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Facere quasi necessitatibus. 34813\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Voluptates possimus illo. 34814\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-06-25T06:18:25Z",
                            "updated_at": "2025-06-25T06:18:25Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "1585",
                          "type": "user",
                          "attributes": {
                            "name": "Homer Emmerich",
                            "nickname": "rs92kd8_559",
                            "personal_url": "http://bartoletti-muller.example/ela_armstrong",
                            "email": "user560@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Quas fugiat molestias. 34815\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Magni non eos. 34816\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-06-25T06:18:25Z",
                            "updated_at": "2025-06-25T06:18:25Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "1586",
                          "type": "user",
                          "attributes": {
                            "name": "Basil Lehner",
                            "nickname": "b5k8wn_560",
                            "personal_url": "http://collins-oconnell.example/mozell_gulgowski",
                            "email": "user561@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Eligendi quia excepturi. 34817\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Numquam tempore ut. 34818\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-06-25T06:18:25Z",
                            "updated_at": "2025-06-25T06:18:25Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "1587",
                          "type": "user",
                          "attributes": {
                            "name": "Ina Kertzmann V",
                            "nickname": "19napx_561",
                            "personal_url": "http://turcotte-larson.example/jeromy",
                            "email": "user562@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Optio eveniet dolor. 34819\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Non magnam perferendis. 34820\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-06-25T06:18:25Z",
                            "updated_at": "2025-06-25T06:18:25Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "filter_by_nickname": {
                    "value": {
                      "data": [
                        {
                          "id": "1589",
                          "type": "user",
                          "attributes": {
                            "name": "Cindy Hickle",
                            "nickname": "blue-panda-218",
                            "personal_url": "http://kuhic.test/demetrius",
                            "email": "user564@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Quia odio sunt. 34831\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Eveniet et dolores. 34832\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-06-25T06:18:26Z",
                            "updated_at": "2025-06-25T06:18:26Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "1601",
                          "type": "user",
                          "attributes": {
                            "name": "Sen. Polly Hirthe",
                            "nickname": "vlwy_574",
                            "personal_url": "http://lockman.test/rory_cormier",
                            "email": "user576@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Consectetur ut accusamus. 34879\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Ab iusto aspernatur. 34880\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-06-25T06:18:28Z",
                            "updated_at": "2025-06-25T06:18:28Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "1602",
                          "type": "user",
                          "attributes": {
                            "name": "Benny Krajcik",
                            "nickname": "kafgfzgy_575",
                            "personal_url": "http://johns-pollich.example/vonda_davis",
                            "email": "user577@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Natus eius molestiae. 34881\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Laudantium sint et. 34882\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-06-25T06:18:28Z",
                            "updated_at": "2025-06-25T06:18:28Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "user_fr": {
                    "value": {
                      "data": [
                        {
                          "id": "1604",
                          "type": "user",
                          "attributes": {
                            "name": "Gov. Lora Rippin",
                            "nickname": "aiyi5_577",
                            "personal_url": "http://bode.example/leland",
                            "email": "user579@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Soluta voluptatem assumenda. 34901\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Ad illum officiis. 34902\"}}",
                            "extended_data": {},
                            "locale": "fr",
                            "created_at": "2025-06-25T06:18:28Z",
                            "updated_at": "2025-06-25T06:18:28Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "1607",
                          "type": "user",
                          "attributes": {
                            "name": "Serita Klocko PhD",
                            "nickname": "pe0hfvbs_580",
                            "personal_url": "http://schuppe-hoppe.test/marcellus.schmeler",
                            "email": "user582@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Facilis omnis similique. 34915\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Deleniti a pariatur. 34916\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-06-25T06:18:29Z",
                            "updated_at": "2025-06-25T06:18:29Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "1608",
                          "type": "user",
                          "attributes": {
                            "name": "Krystyna Koss",
                            "nickname": "rle6i29bnp_581",
                            "personal_url": "http://kuhlman.test/wilhelmina",
                            "email": "user583@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Et architecto omnis. 34917\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Delectus dolores non. 34918\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-06-25T06:18:29Z",
                            "updated_at": "2025-06-25T06:18:29Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "1605",
                          "type": "user",
                          "attributes": {
                            "name": "Corey Corwin",
                            "nickname": "13yrv_578",
                            "personal_url": "http://dooley.test/annis",
                            "email": "user580@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Ullam commodi veritatis. 34911\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Aspernatur officia numquam. 34912\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-06-25T06:18:29Z",
                            "updated_at": "2025-06-25T06:18:29Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "1606",
                          "type": "user",
                          "attributes": {
                            "name": "Pedro Skiles VM",
                            "nickname": "yivp7zq_579",
                            "personal_url": "http://kohler.test/gaylene",
                            "email": "user581@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Odio totam similique. 34913\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Sint rerum voluptatem. 34914\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-06-25T06:18:29Z",
                            "updated_at": "2025-06-25T06:18:29Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "1609",
                          "type": "user",
                          "attributes": {
                            "name": "Aleta Mayert PhD",
                            "nickname": "c4sr_582",
                            "personal_url": "http://schamberger.test/giuseppe_rodriguez",
                            "email": "user584@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Possimus error eum. 34919\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Ullam enim qui. 34920\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-06-25T06:18:29Z",
                            "updated_at": "2025-06-25T06:18:29Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "1610",
                          "type": "user",
                          "attributes": {
                            "name": "Charles Gulgowski III",
                            "nickname": "ydtei_583",
                            "personal_url": "http://pfannerstill.test/lynetta_christiansen",
                            "email": "user585@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Vel blanditiis ut. 34921\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Pariatur est atque. 34922\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-06-25T06:18:29Z",
                            "updated_at": "2025-06-25T06:18:29Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "filter_by_extended_data": {
                    "value": {
                      "data": [
                        {
                          "id": "1617",
                          "type": "user",
                          "attributes": {
                            "name": "Nelida Moen",
                            "nickname": "specific-data",
                            "personal_url": "http://balistreri-conn.example/brock",
                            "email": "user592@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Libero expedita modi. 34951\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Eos consequatur aut. 34952\"}}",
                            "extended_data": {
                              "key": {
                                "is": "awesome"
                              }
                            },
                            "locale": "en",
                            "created_at": "2025-06-25T06:18:29Z",
                            "updated_at": "2025-06-25T06:18:29Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user_index_response"
                }
              }
            }
          }
        }
      }
    },
    "/me/extended_data": {
      "get": {
        "summary": "Get user extended data",
        "tags": [
          "Users"
        ],
        "operationId": "userData",
        "description": "Fetch user extended data",
        "parameters": [
          {
            "name": "object_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "object path, in dot style, like foo.bar"
            }
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "oauth"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Extended Data for a given object_path given",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "personal": {
                          "birthday": "1989-01-28"
                        },
                        "birthday": "1989-01-28"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user_extended_data"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Resource not found",
                      "error_description": "Resource not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user extended data",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "oauth"
            ]
          }
        ],
        "operationId": "setUserData",
        "description": "The extended_data feature allows you to update a hash with recursive merging. Use the body payload with these keys:\n\n1. `data`: The value or hash you want to update.\n2. `object_path`: The dot-style path to the key (e.g., access.this.key).\n\n**Root path**<br />\nTo update data from root of the hash, use `object_path=\".\"`.\n\nExample:\n```\n  body={\"data\": {\"name\": \"Jane\"}, \"object_path\": \"personnal\"}\n```\nThis recursively merges data into the hash without removing existing keys.\n\n**Merge some data**<br />\nInitial hash:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\"}\n  }\n```\nPatch payload:\n```json\n  {\n    \"data\": {\n      \"name\": \"Jane\"\n    },\n    \"object_path\": \"personnal\"\n  }\n```\nResult:\n```\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\", \"name\": \"Jane\"}\n  }\n```\n\n**Create new Paths**<br />\nPaths are created as needed.\nExemple:\n```json\n  body = {\"data\": {\"external_user_id\": 12}, \"object_path\": \"data-store.my-app.foo\"}\n```\nResult:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\"},\n    \"data-store\": {\"my-app\": {\"foo\": {\"external_user_id\": 12}}}\n  }\n```\nAlternatively:\n```\n  body = {\"data\": 12, \"object_path\": \"data-store.my-app.foo.external_user_id\"}\n```\n\n**Remove a key**<br />\nSet a key to null or an empty value to remove it.\n\nExample: Initial hash:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\", \"name\": \"Jane\"}\n  }\n```\nPatch:\n```json\n  body = {\"data\": {\"birthday\": \"\"}, \"object_path\": \"personnal\"}\n```\n\nResult:\n```\n{\n  \"personnal\": {\"name\": \"Jane\"}\n}\n```\n\n**Return Value**<br />\nThe update request returns the updated value at the specified path.\n\n",
        "parameters": [],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Update extended data value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_extended_data"
                },
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "foo": "bar"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "User Extended Data Payload",
                "properties": {
                  "data": {
                    "type": "object",
                    "title": "User Extended Data Data",
                    "description": "New value for the extended data at the given path"
                  },
                  "object_path": {
                    "type": "string",
                    "description": "object path, in dot style, like foo.bar. use '.' to update the whole user data"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/draft_proposals": {
      "post": {
        "summary": "Create draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "operationId": "createDraftProposal",
        "description": "Create a draft\n",
        "parameters": [],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Draft updated",
            "content": {
              "application/json": {
                "examples": {
                  "ok_empty": {
                    "value": {
                      "data": {
                        "id": "1156",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-06-25T06:18:34Z",
                          "updated_at": "2025-06-25T06:18:34Z",
                          "title": {
                            "fr": ""
                          },
                          "body": {
                            "fr": ""
                          },
                          "errors": {
                            "title": [
                              "Title cannot be blank"
                            ],
                            "body": [
                              "Body cannot be blank"
                            ]
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "553",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "2167",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "1637",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "1637",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://441.lvh.me/public/components/2167",
                            "title": "<script>alert(\"component_name\");</script> Facere error saepe. 35127",
                            "rel": "resource",
                            "meta": {
                              "space_id": "553",
                              "space_manifest": "participatory_processes",
                              "component_id": "2167",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://441.lvh.me/api/rest_full/v0.2/proposals/1156",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2167",
                              "component_manifest": "proposals",
                              "space_id": "553",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1156",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://441.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2167",
                              "component_manifest": "proposals",
                              "space_id": "553",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1156",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "YZF8d0GDkn6y89wAI-fpLn_d0BZfuDCWMxpDfU-vj78",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/draft_proposal_item_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Create Draft Proposal Payload",
                "properties": {
                  "data": {
                    "type": "object",
                    "title": "Draft Proposal Data",
                    "properties": {
                      "component_id": {
                        "type": "integer",
                        "description": "Component ID"
                      }
                    },
                    "required": [
                      "component_id"
                    ],
                    "description": "Payload to update in the proposal"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/me/magic_links/{magic_token}": {
      "get": {
        "summary": "Use a magic-lick",
        "tags": [
          "Users"
        ],
        "operationId": "magicLinkSignin",
        "description": "Challenge given token, open and a session and redirect. Publically accessible by HTTP.\n",
        "parameters": [
          {
            "name": "magic_token",
            "in": "path",
            "schema": {
              "type": "string",
              "description": "A token received for magic link"
            },
            "required": true
          }
        ],
        "security": [],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "bad_token_expired": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Invalid Token"
                    }
                  },
                  "bad_blocked": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "User blocked"
                    }
                  },
                  "bad_token": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Token not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "302": {
            "description": "Signed in",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/proposal_votes": {
      "post": {
        "summary": "Vote",
        "tags": [
          "Proposals Vote"
        ],
        "operationId": "voteProposal",
        "description": "Vote on a proposal",
        "parameters": [],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Vote created",
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "data": {
                        "id": "1168",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-06-25T06:18:40Z",
                          "updated_at": "2025-06-25T06:18:40Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Sed sunt quae. 35631",
                            "fr": ""
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Est eum ipsum. 35633</p>",
                            "fr": ""
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "562",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "2176",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "1657",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "1657",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://455.lvh.me/public/components/2176",
                            "title": "<script>alert(\"proposals\");</script> Proposals",
                            "rel": "resource",
                            "meta": {
                              "space_id": "562",
                              "space_manifest": "participatory_processes",
                              "component_id": "2176",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://455.lvh.me/api/rest_full/v0.2/proposals/1168",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2176",
                              "component_manifest": "proposals",
                              "space_id": "562",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1168",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://455.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2176",
                              "component_manifest": "proposals",
                              "space_id": "562",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1168",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "voted": {
                            "weight": 1
                          }
                        }
                      }
                    }
                  },
                  "default_with_abstention": {
                    "value": {
                      "data": {
                        "id": "1169",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-06-25T06:18:41Z",
                          "updated_at": "2025-06-25T06:18:41Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Delectus aut deserunt. 35679",
                            "fr": ""
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Sit nesciunt quia. 35681</p>",
                            "fr": ""
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "563",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "2177",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "1659",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "1659",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://456.lvh.me/public/components/2177",
                            "title": "<script>alert(\"proposals\");</script> Proposals",
                            "rel": "resource",
                            "meta": {
                              "space_id": "563",
                              "space_manifest": "participatory_processes",
                              "component_id": "2177",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://456.lvh.me/api/rest_full/v0.2/proposals/1169",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2177",
                              "component_manifest": "proposals",
                              "space_id": "563",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1169",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://456.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2177",
                              "component_manifest": "proposals",
                              "space_id": "563",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1169",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "voted": {
                            "weight": 0
                          }
                        }
                      }
                    }
                  },
                  "voting_cards": {
                    "value": {
                      "data": {
                        "id": "1170",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-06-25T06:18:41Z",
                          "updated_at": "2025-06-25T06:18:41Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Cum quia saepe. 35727",
                            "fr": ""
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Ea qui rem. 35729</p>",
                            "fr": ""
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "564",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "2178",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "1661",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "1661",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://457.lvh.me/public/components/2178",
                            "title": "<script>alert(\"proposals\");</script> Proposals",
                            "rel": "resource",
                            "meta": {
                              "space_id": "564",
                              "space_manifest": "participatory_processes",
                              "component_id": "2178",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://457.lvh.me/api/rest_full/v0.2/proposals/1170",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2178",
                              "component_manifest": "proposals",
                              "space_id": "564",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1170",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://457.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2178",
                              "component_manifest": "proposals",
                              "space_id": "564",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1170",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "voted": {
                            "weight": 2
                          }
                        }
                      }
                    }
                  },
                  "voting_cards_with_abstention": {
                    "value": {
                      "data": {
                        "id": "1171",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-06-25T06:18:41Z",
                          "updated_at": "2025-06-25T06:18:41Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Nam beatae voluptas. 35775",
                            "fr": ""
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Ut ipsum sed. 35777</p>",
                            "fr": ""
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "565",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "2179",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "1663",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "1663",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://458.lvh.me/public/components/2179",
                            "title": "<script>alert(\"proposals\");</script> Proposals",
                            "rel": "resource",
                            "meta": {
                              "space_id": "565",
                              "space_manifest": "participatory_processes",
                              "component_id": "2179",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://458.lvh.me/api/rest_full/v0.2/proposals/1171",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2179",
                              "component_manifest": "proposals",
                              "space_id": "565",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1171",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://458.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2179",
                              "component_manifest": "proposals",
                              "space_id": "565",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1171",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "voted": {
                            "weight": 0
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_item_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Vote A Proposal Payload",
                "properties": {
                  "proposal_id": {
                    "type": "integer",
                    "description": "Proposal Id"
                  },
                  "data": {
                    "type": "object",
                    "title": "Vote A Proposal Data",
                    "properties": {
                      "weight": {
                        "type": "integer",
                        "description": "Weight for your vote"
                      }
                    },
                    "required": [
                      "weight"
                    ],
                    "description": "Payload to send your vote"
                  }
                },
                "required": [
                  "data",
                  "proposal_id"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/components/blog_components/{id}": {
      "get": {
        "summary": "Blog Component Details",
        "tags": [
          "Components"
        ],
        "operationId": "blog_component",
        "description": "Blog component details",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          },
          {
            "name": "space_manifest",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "description": "Space type"
            },
            "required": false
          },
          {
            "name": "space_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Space Id"
            },
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Blog Component",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "2195",
                        "type": "blog_component",
                        "attributes": {
                          "manifest_name": "blogs",
                          "participatory_space_type": "Decidim::ParticipatoryProcess",
                          "participatory_space_id": "581",
                          "name": {
                            "en": "<script>alert(\"component_name\");</script> Error corrupti id. 36685",
                            "fr": ""
                          },
                          "global_announcement": {
                            "en": "",
                            "fr": ""
                          },
                          "created_at": "2025-06-25T06:18:47Z",
                          "updated_at": "2025-06-25T06:18:47Z"
                        },
                        "relationships": {
                          "resources": {
                            "data": [],
                            "meta": {
                              "count": 0
                            }
                          }
                        },
                        "links": {
                          "self": {
                            "href": "https://473.lvh.me/components/blog_components/2195",
                            "title": "<script>alert(\"component_name\");</script> Error corrupti id. 36685",
                            "rel": "resource",
                            "meta": {
                              "space_id": "581",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          },
                          "related": {
                            "href": "https://473.lvh.me/spaces/participatory_processes/581",
                            "title": "<script>alert(\"participatory_process_title\");</script> Soluta odit cum. 36695",
                            "rel": "resource",
                            "meta": {
                              "space_id": "581",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "scopes_enabled": false
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/blog_component_item_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/draft_proposals/{id}": {
      "get": {
        "summary": "Display a draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "operationId": "draftProposal",
        "description": "Detail a draft proposal. Raise HTTP 404 error if no draft is created for now.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Draft Id"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Draft Found",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "1173",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-06-25T06:18:53Z",
                          "updated_at": "2025-06-25T06:18:53Z",
                          "title": {
                            "fr": ""
                          },
                          "body": {
                            "fr": ""
                          },
                          "errors": {
                            "title": [],
                            "body": [
                              "Body cannot be blank"
                            ]
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "587",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "2201",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "1691",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "1691",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://487.lvh.me/public/components/2201",
                            "title": "<script>alert(\"component_name\");</script> Eum est et. 37087",
                            "rel": "resource",
                            "meta": {
                              "space_id": "587",
                              "space_manifest": "participatory_processes",
                              "component_id": "2201",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://487.lvh.me/api/rest_full/v0.2/proposals/1173",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2201",
                              "component_manifest": "proposals",
                              "space_id": "587",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1173",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://487.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2201",
                              "component_manifest": "proposals",
                              "space_id": "587",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1173",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "eibGGSgrOeV93H5x9Qw4R4zsEmBhxk9mlJ6Ee2m-RWo",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/draft_proposal_item_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Withdrawn a draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "operationId": "withdrawnDraftProposal",
        "description": "Withdrawn a draft proposal. This action cannot be undone.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Draft Id"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Draft proposal Removed",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "1255",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-06-25T06:19:25Z",
                          "updated_at": "2025-06-25T06:19:25Z",
                          "title": {
                            "fr": ""
                          },
                          "body": {
                            "fr": ""
                          },
                          "errors": {
                            "title": [],
                            "body": []
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "651",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "2403",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "1852",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "1852",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://607.lvh.me/public/components/2403",
                            "title": "<script>alert(\"component_name\");</script> Perferendis et aut. 44117",
                            "rel": "resource",
                            "meta": {
                              "space_id": "651",
                              "space_manifest": "participatory_processes",
                              "component_id": "2403",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://607.lvh.me/api/rest_full/v0.2/proposals/1255",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2403",
                              "component_manifest": "proposals",
                              "space_id": "651",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1255",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://607.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2403",
                              "component_manifest": "proposals",
                              "space_id": "651",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1255",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "sMIVgmGzBQ7X6wt19BAx8xvTCblh9dx-c58z45KGtts",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/draft_proposal_item_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "operationId": "updateDraftProposal",
        "description": "This endpoint allows you to  update a draft proposal associated with your application ID.\nDrafts updated via this API are not visible in the Decidim front-end, and drafts created from the Decidim application are not editable through the API.\nTherefore, any draft you create here is new and tied to your application's credentials.\n\n### Example Request\n\n```http\nPUT /public/assemblies/12/2319/proposals/draft\nContent-Type: application/json\nAuthorization: Bearer YOUR_bearer_token\n\n{\n  \"title\": \"My valid title\"\n}\n```\n## Access Requirements\n\n* Authentication: This endpoint requires an impersonation token. You must create drafts on behalf of a participant; drafts cannot be created using a service token (credential_token).\n\n## Error Handling\n\n* Field Errors: Only errors related to the fields you're updating will be returned.\n* Publishable Status: To determine if the draft is publishable, check the data.meta.publishable field in the response.\n\n### Example response\n```json\n{\n  \"data\": {\n    \"id\": \"12345\",\n    \"type\": \"proposal\",\n    \"attributes\": {\n      \"title\": \"My valid title\",\n      \"body\": null\n    },\n    \"meta\": {\n      \"publishable\": false\n    }\n  }\n}\n```\nIn this example, the title is valid, so the server returns a 200 OK status.\nHowever, since the body is blank, meta.publishable is false, indicating that the draft is not yet ready for publication.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Draft Id"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Draft updated",
            "content": {
              "application/json": {
                "examples": {
                  "ok_empty": {
                    "value": {
                      "data": {
                        "id": "1268",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-06-25T06:19:36Z",
                          "updated_at": "2025-06-25T06:19:36Z",
                          "title": {
                            "fr": ""
                          },
                          "body": {
                            "fr": ""
                          },
                          "errors": {
                            "title": [
                              "Title cannot be blank"
                            ],
                            "body": [
                              "Body cannot be blank"
                            ]
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "664",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "2416",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "1875",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "1875",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://632.lvh.me/public/components/2416",
                            "title": "<script>alert(\"component_name\");</script> Laboriosam asperiores qui. 44805",
                            "rel": "resource",
                            "meta": {
                              "space_id": "664",
                              "space_manifest": "participatory_processes",
                              "component_id": "2416",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://632.lvh.me/api/rest_full/v0.2/proposals/1268",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2416",
                              "component_manifest": "proposals",
                              "space_id": "664",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1268",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://632.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2416",
                              "component_manifest": "proposals",
                              "space_id": "664",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1268",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "4oT_5zLJ0Lt-06ezSjeZNBd9ccllfTs-4EzB4k-nbv8",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  },
                  "ok": {
                    "value": {
                      "data": {
                        "id": "1270",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-06-25T06:19:37Z",
                          "updated_at": "2025-06-25T06:19:37Z",
                          "title": {
                            "fr": "This is a valid proposal title sample"
                          },
                          "body": {
                            "fr": ""
                          },
                          "errors": {
                            "title": [],
                            "body": [
                              "Body cannot be blank"
                            ]
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "666",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "2418",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "1877",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "1877",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://634.lvh.me/public/components/2418",
                            "title": "<script>alert(\"component_name\");</script> Soluta in eos. 44893",
                            "rel": "resource",
                            "meta": {
                              "space_id": "666",
                              "space_manifest": "participatory_processes",
                              "component_id": "2418",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://634.lvh.me/api/rest_full/v0.2/proposals/1270",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2418",
                              "component_manifest": "proposals",
                              "space_id": "666",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1270",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://634.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2418",
                              "component_manifest": "proposals",
                              "space_id": "666",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1270",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "_6c4Gvp0LD74hIG7QVMBGhrPlLuAWTvbz_zt2_l2X68",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/draft_proposal_item_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Update Draft Proposal Payload",
                "properties": {
                  "data": {
                    "type": "object",
                    "title": "Update Draft Proposal Payload Data",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Title of the draft"
                      },
                      "body": {
                        "type": "string",
                        "description": "Content of the draft"
                      },
                      "locale": {
                        "type": "string",
                        "enum": [
                          "en",
                          "fr"
                        ],
                        "description": "Locale of the draft. default to user locale"
                      }
                    },
                    "description": "Payload to update in the proposal"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/blogs/{id}": {
      "get": {
        "summary": "Show a blog detail",
        "tags": [
          "Blogs"
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "blogs"
            ]
          }
        ],
        "operationId": "blog",
        "description": "Get blog post details",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Blog Post Id"
            },
            "required": true
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Blog Found",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "229",
                        "type": "blog",
                        "attributes": {
                          "created_at": "2025-06-25T06:19:02Z",
                          "updated_at": "2025-06-25T06:19:02Z",
                          "title": {
                            "en": "<script>alert(\"blog_title\");</script> Pariatur laudantium vitae. 38077",
                            "fr": ""
                          },
                          "body": {
                            "en": "<p><script>alert(\"blog_body\");</script> Quis eaque consequatur. 38079</p>",
                            "fr": ""
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "608",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "2222",
                              "type": "blog_component"
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://508.lvh.me/public/components/2222",
                            "title": "<script>alert(\"component_name\");</script> Quisquam nihil adipisci. 38057",
                            "rel": "resource",
                            "meta": {
                              "space_id": "608",
                              "space_manifest": "participatory_processes",
                              "component_id": "2222",
                              "component_manifest": "blogs",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://508.lvh.me/api/rest_full/v0.2/blogs/229",
                            "title": "Blogs Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2222",
                              "component_manifest": "blogs",
                              "space_id": "608",
                              "space_manifest": "participatory_processes",
                              "resource_id": "229",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://508.lvh.me/api/rest_full/v0.2/blogs",
                            "title": "Blogs List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2222",
                              "component_manifest": "blogs",
                              "space_id": "608",
                              "space_manifest": "participatory_processes",
                              "resource_id": "229",
                              "action_method": "GET"
                            }
                          },
                          "next": {
                            "href": "https://508.lvh.me/api/rest_full/v0.2/blogs/228",
                            "title": "Next Blog Post",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2222",
                              "component_manifest": "blogs",
                              "space_id": "608",
                              "space_manifest": "participatory_processes",
                              "resource_id": "228",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://508.lvh.me/api/rest_full/v0.2/blogs/230",
                            "title": "Previous Blog Post",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2222",
                              "component_manifest": "blogs",
                              "space_id": "608",
                              "space_manifest": "participatory_processes",
                              "resource_id": "230",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  },
                  "ok_no_more": {
                    "value": {
                      "data": {
                        "id": "219",
                        "type": "blog",
                        "attributes": {
                          "created_at": "2025-06-25T06:19:01Z",
                          "updated_at": "2025-06-25T06:19:01Z",
                          "title": {
                            "en": "<script>alert(\"blog_title\");</script> Quis accusamus est. 37949",
                            "fr": ""
                          },
                          "body": {
                            "en": "<p><script>alert(\"blog_body\");</script> Itaque velit debitis. 37951</p>",
                            "fr": ""
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "606",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "2220",
                              "type": "blog_component"
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://506.lvh.me/public/components/2220",
                            "title": "<script>alert(\"component_name\");</script> Dignissimos vero voluptatem. 37941",
                            "rel": "resource",
                            "meta": {
                              "space_id": "606",
                              "space_manifest": "participatory_processes",
                              "component_id": "2220",
                              "component_manifest": "blogs",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://506.lvh.me/api/rest_full/v0.2/blogs/219",
                            "title": "Blogs Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2220",
                              "component_manifest": "blogs",
                              "space_id": "606",
                              "space_manifest": "participatory_processes",
                              "resource_id": "219",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://506.lvh.me/api/rest_full/v0.2/blogs",
                            "title": "Blogs List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2220",
                              "component_manifest": "blogs",
                              "space_id": "606",
                              "space_manifest": "participatory_processes",
                              "resource_id": "219",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://506.lvh.me/api/rest_full/v0.2/blogs/220",
                            "title": "Previous Blog Post",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2220",
                              "component_manifest": "blogs",
                              "space_id": "606",
                              "space_manifest": "participatory_processes",
                              "resource_id": "220",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/blog_item_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Blog Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/components/search": {
      "get": {
        "summary": "Search components",
        "tags": [
          "Components"
        ],
        "operationId": "searchComponents",
        "description": "List or search components of the organization",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/component_manifest"
              },
              "title": "manifest_name not IN filter",
              "description": "match none of _manifest_name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/component_manifest"
              },
              "title": "manifest_name IN filter",
              "description": "match one of _manifest_name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_manifest_name_ starts with",
              "title": "manifest_name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_eq]",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/component_manifest",
              "title": "manifest_name equal filter",
              "description": "_manifest_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_eq]",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/component_manifest",
              "title": "manifest_name not equal filter",
              "description": "_manifest_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "manifest_name like filter",
              "description": "matches _manifest_name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "manifest_name blank filter",
              "description": "_manifest_name_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "title": "id IN filter",
              "description": "match one of _id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[id_eq]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id equal filter",
              "description": "_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[id_lt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id less than filter",
              "description": "_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[id_gt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id greater than filter",
              "description": "_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id present filter",
              "description": "_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id blank filter",
              "description": "_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "participatory_space_id IN filter",
              "description": "match one of _participatory_space_id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id equal filter",
              "description": "_participatory_space_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id less than filter",
              "description": "_participatory_space_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id greater than filter",
              "description": "_participatory_space_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id present filter",
              "description": "_participatory_space_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id blank filter",
              "description": "_participatory_space_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/space_type"
              },
              "title": "participatory_space_type not IN filter",
              "description": "match none of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/space_type"
              },
              "title": "participatory_space_type IN filter",
              "description": "match one of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_participatory_space_type_ starts with",
              "title": "participatory_space_type starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_eq]",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/space_type",
              "title": "participatory_space_type equal filter",
              "description": "_participatory_space_type_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_eq]",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/space_type",
              "title": "participatory_space_type not equal filter",
              "description": "_participatory_space_type_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_type like filter",
              "description": "matches _participatory_space_type_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_type blank filter",
              "description": "_participatory_space_type_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name not IN filter",
              "description": "match none of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name IN filter",
              "description": "match one of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_name_ starts with",
              "title": "name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name equal filter",
              "description": "_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name not equal filter",
              "description": "_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name like filter",
              "description": "matches _name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "name blank filter",
              "description": "_name_ is null or empty"
            },
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "List of components",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "2322",
                          "type": "meeting_component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "627",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Velit quos eligendi. 41493",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:19:11Z",
                            "updated_at": "2025-06-25T06:19:11Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://559.lvh.me/components/meeting_components/2322",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "627",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://559.lvh.me/spaces/participatory_processes/627",
                              "title": "<script>alert(\"participatory_process_title\");</script> Cumque mollitia beatae. 41467",
                              "rel": "resource",
                              "meta": {
                                "space_id": "627",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "default_registration_terms": false,
                            "comments_enabled": false,
                            "comments_max_length": false,
                            "registration_code_enabled": false,
                            "creation_enabled_for_participants": false
                          }
                        },
                        {
                          "id": "2323",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "627",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Odio sint non. 41579",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:19:11Z",
                            "updated_at": "2025-06-25T06:19:11Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "1209",
                                  "type": "proposal"
                                },
                                {
                                  "id": "1210",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://559.lvh.me/components/proposal_components/2323",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "627",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://559.lvh.me/spaces/participatory_processes/627",
                              "title": "<script>alert(\"participatory_process_title\");</script> Cumque mollitia beatae. 41467",
                              "rel": "resource",
                              "meta": {
                                "space_id": "627",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "2324",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "627",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:19:11Z",
                            "updated_at": "2025-06-25T06:19:11Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://559.lvh.me/components/proposal_components/2324",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "627",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://559.lvh.me/spaces/participatory_processes/627",
                              "title": "<script>alert(\"participatory_process_title\");</script> Cumque mollitia beatae. 41467",
                              "rel": "resource",
                              "meta": {
                                "space_id": "627",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        },
                        {
                          "id": "2325",
                          "type": "accountability_component",
                          "attributes": {
                            "manifest_name": "accountability",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "627",
                            "name": {
                              "en": "<script>alert(\"accountability\");</script> Accountability",
                              "fr": "<script>alert(\"accountability\");</script> Suivi"
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:19:11Z",
                            "updated_at": "2025-06-25T06:19:11Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "120",
                                  "type": "result"
                                },
                                {
                                  "id": "119",
                                  "type": "result"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://559.lvh.me/components/accountability_components/2325",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "627",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://559.lvh.me/spaces/participatory_processes/627",
                              "title": "<script>alert(\"participatory_process_title\");</script> Cumque mollitia beatae. 41467",
                              "rel": "resource",
                              "meta": {
                                "space_id": "627",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "manifest_name_in_Meetings": {
                    "value": {
                      "data": [
                        {
                          "id": "2326",
                          "type": "meeting_component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "628",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Perspiciatis vel itaque. 41683",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:19:11Z",
                            "updated_at": "2025-06-25T06:19:11Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://562.lvh.me/components/meeting_components/2326",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "628",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://562.lvh.me/spaces/participatory_processes/628",
                              "title": "<script>alert(\"participatory_process_title\");</script> Quo totam et. 41657",
                              "rel": "resource",
                              "meta": {
                                "space_id": "628",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "default_registration_terms": false,
                            "comments_enabled": false,
                            "comments_max_length": false,
                            "registration_code_enabled": false,
                            "creation_enabled_for_participants": false
                          }
                        }
                      ]
                    }
                  },
                  "components_in_Process": {
                    "value": {
                      "data": [
                        {
                          "id": "2318",
                          "type": "meeting_component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "626",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Ut aliquid reiciendis. 41303",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:19:10Z",
                            "updated_at": "2025-06-25T06:19:10Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://556.lvh.me/components/meeting_components/2318",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "626",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://556.lvh.me/spaces/participatory_processes/626",
                              "title": "<script>alert(\"participatory_process_title\");</script> Iusto labore quo. 41277",
                              "rel": "resource",
                              "meta": {
                                "space_id": "626",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "default_registration_terms": false,
                            "comments_enabled": false,
                            "comments_max_length": false,
                            "registration_code_enabled": false,
                            "creation_enabled_for_participants": false
                          }
                        },
                        {
                          "id": "2319",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "626",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Est quisquam harum. 41389",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:19:10Z",
                            "updated_at": "2025-06-25T06:19:10Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "1207",
                                  "type": "proposal"
                                },
                                {
                                  "id": "1208",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://556.lvh.me/components/proposal_components/2319",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "626",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://556.lvh.me/spaces/participatory_processes/626",
                              "title": "<script>alert(\"participatory_process_title\");</script> Iusto labore quo. 41277",
                              "rel": "resource",
                              "meta": {
                                "space_id": "626",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "2320",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "626",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:19:10Z",
                            "updated_at": "2025-06-25T06:19:10Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://556.lvh.me/components/proposal_components/2320",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "626",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://556.lvh.me/spaces/participatory_processes/626",
                              "title": "<script>alert(\"participatory_process_title\");</script> Iusto labore quo. 41277",
                              "rel": "resource",
                              "meta": {
                                "space_id": "626",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        },
                        {
                          "id": "2321",
                          "type": "accountability_component",
                          "attributes": {
                            "manifest_name": "accountability",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "626",
                            "name": {
                              "en": "<script>alert(\"accountability\");</script> Accountability",
                              "fr": "<script>alert(\"accountability\");</script> Suivi"
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:19:10Z",
                            "updated_at": "2025-06-25T06:19:10Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "117",
                                  "type": "result"
                                },
                                {
                                  "id": "118",
                                  "type": "result"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://556.lvh.me/components/accountability_components/2321",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "626",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://556.lvh.me/spaces/participatory_processes/626",
                              "title": "<script>alert(\"participatory_process_title\");</script> Iusto labore quo. 41277",
                              "rel": "resource",
                              "meta": {
                                "space_id": "626",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "2366",
                          "type": "awesome_iframe_component",
                          "attributes": {
                            "manifest_name": "awesome_iframe",
                            "participatory_space_type": "Decidim::Assembly",
                            "participatory_space_id": "474",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Dolor similique nemo. 42689",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:19:13Z",
                            "updated_at": "2025-06-25T06:19:13Z"
                          },
                          "links": {
                            "self": {
                              "href": "https://574.lvh.me/components/awesome_iframe_components/2366",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "474",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://574.lvh.me/spaces/assemblies/474",
                              "title": "<script>alert(\"assembly_title\");</script> Rerum fugit qui. 42453",
                              "rel": "resource",
                              "meta": {
                                "space_id": "474",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        },
                        {
                          "id": "2367",
                          "type": "awesome_map_component",
                          "attributes": {
                            "manifest_name": "awesome_map",
                            "participatory_space_type": "Decidim::Assembly",
                            "participatory_space_id": "474",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Blanditiis sed fugiat. 42695",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:19:13Z",
                            "updated_at": "2025-06-25T06:19:13Z"
                          },
                          "links": {
                            "self": {
                              "href": "https://574.lvh.me/components/awesome_map_components/2367",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "474",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://574.lvh.me/spaces/assemblies/474",
                              "title": "<script>alert(\"assembly_title\");</script> Rerum fugit qui. 42453",
                              "rel": "resource",
                              "meta": {
                                "space_id": "474",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "filter_byId": {
                    "value": {
                      "data": [
                        {
                          "id": "2330",
                          "type": "meeting_component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "629",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Rerum sunt quia. 41873",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:19:11Z",
                            "updated_at": "2025-06-25T06:19:11Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://565.lvh.me/components/meeting_components/2330",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "629",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://565.lvh.me/spaces/participatory_processes/629",
                              "title": "<script>alert(\"participatory_process_title\");</script> Soluta perspiciatis quis. 41847",
                              "rel": "resource",
                              "meta": {
                                "space_id": "629",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "default_registration_terms": false,
                            "comments_enabled": false,
                            "comments_max_length": false,
                            "registration_code_enabled": false,
                            "creation_enabled_for_participants": false
                          }
                        },
                        {
                          "id": "2333",
                          "type": "accountability_component",
                          "attributes": {
                            "manifest_name": "accountability",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "629",
                            "name": {
                              "en": "<script>alert(\"accountability\");</script> Accountability",
                              "fr": "<script>alert(\"accountability\");</script> Suivi"
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:19:11Z",
                            "updated_at": "2025-06-25T06:19:11Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "124",
                                  "type": "result"
                                },
                                {
                                  "id": "123",
                                  "type": "result"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://565.lvh.me/components/accountability_components/2333",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "629",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://565.lvh.me/spaces/participatory_processes/629",
                              "title": "<script>alert(\"participatory_process_title\");</script> Soluta perspiciatis quis. 41847",
                              "rel": "resource",
                              "meta": {
                                "space_id": "629",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/component_index_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/proposals/{id}": {
      "get": {
        "summary": "Proposal Details",
        "tags": [
          "Proposals"
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "operationId": "proposal",
        "description": "Proposal detail",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "space_manifest",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "description": "Space type"
            },
            "required": false
          },
          {
            "name": "space_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Space Id"
            },
            "required": false
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "voted_weight not IN filter",
              "description": "match none of _voted_weight_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "voted_weight IN filter",
              "description": "match one of _voted_weight_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_voted_weight_ starts with",
              "title": "voted_weight starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight equal filter",
              "description": "_voted_weight_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight not equal filter",
              "description": "_voted_weight_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight like filter",
              "description": "matches _voted_weight_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "voted_weight blank filter",
              "description": "_voted_weight_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[state_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "state not IN filter",
              "description": "match none of _state_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[state_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "state IN filter",
              "description": "match one of _state_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[state_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_state_ starts with",
              "title": "state starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[state_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state equal filter",
              "description": "_state_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[state_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state not equal filter",
              "description": "_state_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[state_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state like filter",
              "description": "matches _state_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[state_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "state blank filter",
              "description": "_state_ is null or empty"
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Proposal Id"
            },
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Proposal Found",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "1252",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-06-25T06:19:23Z",
                          "updated_at": "2025-06-25T06:19:23Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Atque est culpa. 43985",
                            "fr": ""
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Autem eos quam. 43987</p>",
                            "fr": ""
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "648",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "2400",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "1847",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "1847",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://604.lvh.me/public/components/2400",
                            "title": "<script>alert(\"component_name\");</script> Dolorum maxime vero. 43979",
                            "rel": "resource",
                            "meta": {
                              "space_id": "648",
                              "space_manifest": "participatory_processes",
                              "component_id": "2400",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://604.lvh.me/api/rest_full/v0.2/proposals/1252",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2400",
                              "component_manifest": "proposals",
                              "space_id": "648",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1252",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://604.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2400",
                              "component_manifest": "proposals",
                              "space_id": "648",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1252",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  },
                  "navigation_last_accepted": {
                    "value": {
                      "data": {
                        "id": "1244",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-06-25T06:19:22Z",
                          "updated_at": "2025-06-25T06:19:22Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Cupiditate omnis necessitatibus. 43797",
                            "fr": ""
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Maiores consequatur qui. 43799</p>",
                            "fr": ""
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "645",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "2397",
                              "type": "proposal_component"
                            }
                          },
                          "state": {
                            "data": {
                              "id": "1859",
                              "type": "proposal_state"
                            },
                            "meta": {
                              "token": "accepted"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "1836",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "1836",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://601.lvh.me/public/components/2397",
                            "title": "<script>alert(\"component_name\");</script> Sunt rem distinctio. 43771",
                            "rel": "resource",
                            "meta": {
                              "space_id": "645",
                              "space_manifest": "participatory_processes",
                              "component_id": "2397",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://601.lvh.me/api/rest_full/v0.2/proposals/1244",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2397",
                              "component_manifest": "proposals",
                              "space_id": "645",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1244",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://601.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2397",
                              "component_manifest": "proposals",
                              "space_id": "645",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1244",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://601.lvh.me/api/rest_full/v0.2/proposals/1243",
                            "title": "Previous Proposal",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2397",
                              "component_manifest": "proposals",
                              "space_id": "645",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1243",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  },
                  "navigation_non_rejected": {
                    "value": {
                      "data": {
                        "id": "1247",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-06-25T06:19:22Z",
                          "updated_at": "2025-06-25T06:19:22Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Qui quia sed. 43863",
                            "fr": ""
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Qui magnam sunt. 43865</p>",
                            "fr": ""
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "646",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "2398",
                              "type": "proposal_component"
                            }
                          },
                          "state": {
                            "data": {
                              "id": "1862",
                              "type": "proposal_state"
                            },
                            "meta": {
                              "token": "accepted"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "1840",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "1840",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://602.lvh.me/public/components/2398",
                            "title": "<script>alert(\"component_name\");</script> Molestiae est unde. 43847",
                            "rel": "resource",
                            "meta": {
                              "space_id": "646",
                              "space_manifest": "participatory_processes",
                              "component_id": "2398",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://602.lvh.me/api/rest_full/v0.2/proposals/1247",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2398",
                              "component_manifest": "proposals",
                              "space_id": "646",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1247",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://602.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2398",
                              "component_manifest": "proposals",
                              "space_id": "646",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1247",
                              "action_method": "GET"
                            }
                          },
                          "next": {
                            "href": "https://602.lvh.me/api/rest_full/v0.2/proposals/1249",
                            "title": "Next Proposal",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2398",
                              "component_manifest": "proposals",
                              "space_id": "646",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1249",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://602.lvh.me/api/rest_full/v0.2/proposals/1246",
                            "title": "Previous Proposal",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2398",
                              "component_manifest": "proposals",
                              "space_id": "646",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1246",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  },
                  "accepted_proposal": {
                    "value": {
                      "data": {
                        "id": "1251",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-06-25T06:19:23Z",
                          "updated_at": "2025-06-25T06:19:23Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Quisquam autem consectetur. 43939",
                            "fr": ""
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Tempora error eligendi. 43941</p>",
                            "fr": ""
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "647",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "2399",
                              "type": "proposal_component"
                            }
                          },
                          "state": {
                            "data": {
                              "id": "1865",
                              "type": "proposal_state"
                            },
                            "meta": {
                              "token": "accepted"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "1845",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "1845",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://603.lvh.me/public/components/2399",
                            "title": "<script>alert(\"component_name\");</script> Quasi provident est. 43923",
                            "rel": "resource",
                            "meta": {
                              "space_id": "647",
                              "space_manifest": "participatory_processes",
                              "component_id": "2399",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://603.lvh.me/api/rest_full/v0.2/proposals/1251",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2399",
                              "component_manifest": "proposals",
                              "space_id": "647",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1251",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://603.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2399",
                              "component_manifest": "proposals",
                              "space_id": "647",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1251",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://603.lvh.me/api/rest_full/v0.2/proposals/1250",
                            "title": "Previous Proposal",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2399",
                              "component_manifest": "proposals",
                              "space_id": "647",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1250",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_item_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/metrics/health": {
      "get": {
        "summary": "Health",
        "tags": [
          "Metrics"
        ],
        "operationId": "health-metrics",
        "description": "Health metrics",
        "security": [],
        "responses": {
          "200": {
            "description": "Healthy services",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "message": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/health"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "503": {
            "description": "Unhealthy services",
            "content": {
              "application/json": {
                "examples": {
                  "error_db": {
                    "value": {
                      "message": "ERROR"
                    }
                  },
                  "error_referer": {
                    "value": {
                      "message": "ERROR"
                    }
                  },
                  "error_cache": {
                    "value": {
                      "message": "ERROR"
                    }
                  },
                  "error_public_assets": {
                    "value": {
                      "message": "ERROR"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/health"
                }
              }
            }
          }
        }
      }
    },
    "/draft_proposals/{id}/publish": {
      "post": {
        "summary": "Publish a draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "operationId": "publishDraftProposal",
        "description": "Publish a draft proposal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Draft Id"
            },
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Body cannot be blank"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Draft Proposal published",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "1264",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-06-25T06:19:33Z",
                          "updated_at": "2025-06-25T06:19:34Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Tenetur neque sit. 44633",
                            "fr": ""
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Ratione eligendi deserunt. 44635</p>",
                            "fr": ""
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "660",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "2412",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "1870",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "1870",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://628.lvh.me/public/components/2412",
                            "title": "<script>alert(\"component_name\");</script> Totam consequuntur laudantium. 44627",
                            "rel": "resource",
                            "meta": {
                              "space_id": "660",
                              "space_manifest": "participatory_processes",
                              "component_id": "2412",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://628.lvh.me/api/rest_full/v0.2/proposals/1264",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2412",
                              "component_manifest": "proposals",
                              "space_id": "660",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1264",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://628.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "2412",
                              "component_manifest": "proposals",
                              "space_id": "660",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1264",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "client_id": 628
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_item_response"
                }
              }
            }
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "summary": "List available organizations",
        "tags": [
          "System"
        ],
        "operationId": "organizations",
        "description": "List available organizations",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Organizations listed",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "2",
                          "type": "organization",
                          "attributes": {
                            "host": "localhost",
                            "secondary_hosts": [
                              "0.0.0.0",
                              "127.0.0.1"
                            ],
                            "default_locale": "en",
                            "available_locales": [
                              "en",
                              "fr"
                            ],
                            "name": {
                              "en": "Schowalter-Kuphal",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T05:51:20Z",
                            "updated_at": "2025-06-25T05:51:24Z"
                          },
                          "meta": {
                            "locales": [
                              "en",
                              "fr"
                            ]
                          }
                        },
                        {
                          "id": "662",
                          "type": "organization",
                          "attributes": {
                            "host": "646.lvh.me",
                            "secondary_hosts": [],
                            "default_locale": "en",
                            "available_locales": [
                              "en",
                              "fr"
                            ],
                            "name": {
                              "en": "Hegmann, Yundt and Johnson",
                              "fr": "Hartmann and Sons"
                            },
                            "created_at": "2025-06-25T06:19:41Z",
                            "updated_at": "2025-06-25T06:19:41Z"
                          },
                          "meta": {
                            "locales": [
                              "en",
                              "fr"
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/organization_index_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/components/blog_components": {
      "get": {
        "summary": "Blog Components",
        "tags": [
          "Components"
        ],
        "operationId": "blog_components",
        "description": "List or search blog components of the organization",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "participatory_space_id IN filter",
              "description": "match one of _participatory_space_id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id equal filter",
              "description": "_participatory_space_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id less than filter",
              "description": "_participatory_space_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id greater than filter",
              "description": "_participatory_space_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id present filter",
              "description": "_participatory_space_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id blank filter",
              "description": "_participatory_space_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "title": "participatory_space_type not IN filter",
              "description": "match none of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "title": "participatory_space_type IN filter",
              "description": "match one of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_participatory_space_type_ starts with",
              "title": "participatory_space_type starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Decidim::Assembly",
              "title": "participatory_space_type equal filter",
              "description": "_participatory_space_type_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Decidim::Assembly",
              "title": "participatory_space_type not equal filter",
              "description": "_participatory_space_type_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_type like filter",
              "description": "matches _participatory_space_type_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_type blank filter",
              "description": "_participatory_space_type_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name not IN filter",
              "description": "match none of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name IN filter",
              "description": "match one of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_name_ starts with",
              "title": "name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name equal filter",
              "description": "_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name not equal filter",
              "description": "_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name like filter",
              "description": "matches _name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "name blank filter",
              "description": "_name_ is null or empty"
            },
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "List of blog components",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blog_component_index_response"
                },
                "examples": {
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "2470",
                          "type": "blog_component",
                          "attributes": {
                            "manifest_name": "blogs",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "685",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Veritatis earum aspernatur. 46787",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:19:48Z",
                            "updated_at": "2025-06-25T06:19:48Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://663.lvh.me/components/blog_components/2470",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "685",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://663.lvh.me/spaces/participatory_processes/685",
                              "title": "<script>alert(\"participatory_process_title\");</script> Aspernatur sed omnis. 46731",
                              "rel": "resource",
                              "meta": {
                                "space_id": "685",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        },
                        {
                          "id": "2471",
                          "type": "blog_component",
                          "attributes": {
                            "manifest_name": "blogs",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "685",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Eius sequi aut. 46793",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:19:48Z",
                            "updated_at": "2025-06-25T06:19:48Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://663.lvh.me/components/blog_components/2471",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "685",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://663.lvh.me/spaces/participatory_processes/685",
                              "title": "<script>alert(\"participatory_process_title\");</script> Aspernatur sed omnis. 46731",
                              "rel": "resource",
                              "meta": {
                                "space_id": "685",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "components_in_Process": {
                    "value": {
                      "data": [
                        {
                          "id": "2476",
                          "type": "blog_component",
                          "attributes": {
                            "manifest_name": "blogs",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "687",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Consectetur tempore voluptates. 46993",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:19:49Z",
                            "updated_at": "2025-06-25T06:19:49Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://665.lvh.me/components/blog_components/2476",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "687",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://665.lvh.me/spaces/participatory_processes/687",
                              "title": "<script>alert(\"participatory_process_title\");</script> Ut qui ducimus. 46941",
                              "rel": "resource",
                              "meta": {
                                "space_id": "687",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "2478",
                          "type": "blog_component",
                          "attributes": {
                            "manifest_name": "blogs",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "688",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Unde consequatur dicta. 47089",
                              "fr": ""
                            },
                            "global_announcement": {
                              "en": "",
                              "fr": ""
                            },
                            "created_at": "2025-06-25T06:19:50Z",
                            "updated_at": "2025-06-25T06:19:50Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://666.lvh.me/components/blog_components/2478",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "688",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://666.lvh.me/spaces/participatory_processes/688",
                              "title": "<script>alert(\"participatory_process_title\");</script> Aut est magni. 47037",
                              "rel": "resource",
                              "meta": {
                                "space_id": "688",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blogs": {
      "get": {
        "summary": "Blog Post Lists",
        "tags": [
          "Blogs"
        ],
        "operationId": "blogs",
        "description": "Get blog post list",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "space_manifest",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "description": "Space type"
            },
            "required": false
          },
          {
            "name": "space_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Space Id"
            },
            "required": false
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Order by",
            "required": false
          },
          {
            "name": "order_direction",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "Order direction",
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "blogs"
            ]
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Blogs Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blog_index_response"
                },
                "examples": {
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "310",
                          "type": "blog",
                          "attributes": {
                            "created_at": "2025-06-25T06:19:57Z",
                            "updated_at": "2025-06-25T06:19:57Z",
                            "title": {
                              "en": "<script>alert(\"blog_title\");</script> Rerum eveniet nesciunt. 47985",
                              "fr": ""
                            },
                            "body": {
                              "en": "<p><script>alert(\"blog_body\");</script> Velit esse enim. 47987</p>",
                              "fr": ""
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "702",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "2492",
                                "type": "blog_component"
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://680.lvh.me/public/components/2492",
                              "title": "<script>alert(\"component_name\");</script> Officiis modi esse. 47957",
                              "rel": "resource",
                              "meta": {
                                "space_id": "702",
                                "space_manifest": "participatory_processes",
                                "component_id": "2492",
                                "component_manifest": "blogs",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://680.lvh.me/api/rest_full/v0.2/blogs/310",
                              "title": "Blogs Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "2492",
                                "component_manifest": "blogs",
                                "space_id": "702",
                                "space_manifest": "participatory_processes",
                                "resource_id": "310",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://680.lvh.me/api/rest_full/v0.2/blogs",
                              "title": "Blogs List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "2492",
                                "component_manifest": "blogs",
                                "space_id": "702",
                                "space_manifest": "participatory_processes",
                                "resource_id": "310",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "312",
                          "type": "blog",
                          "attributes": {
                            "created_at": "2025-06-25T06:19:57Z",
                            "updated_at": "2025-06-25T06:19:57Z",
                            "title": {
                              "en": "<script>alert(\"blog_title\");</script> Non iusto veritatis. 47997",
                              "fr": ""
                            },
                            "body": {
                              "en": "<p><script>alert(\"blog_body\");</script> Assumenda aut odio. 47999</p>",
                              "fr": ""
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "702",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "2492",
                                "type": "blog_component"
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://680.lvh.me/public/components/2492",
                              "title": "<script>alert(\"component_name\");</script> Officiis modi esse. 47957",
                              "rel": "resource",
                              "meta": {
                                "space_id": "702",
                                "space_manifest": "participatory_processes",
                                "component_id": "2492",
                                "component_manifest": "blogs",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://680.lvh.me/api/rest_full/v0.2/blogs/312",
                              "title": "Blogs Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "2492",
                                "component_manifest": "blogs",
                                "space_id": "702",
                                "space_manifest": "participatory_processes",
                                "resource_id": "312",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://680.lvh.me/api/rest_full/v0.2/blogs",
                              "title": "Blogs List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "2492",
                                "component_manifest": "blogs",
                                "space_id": "702",
                                "space_manifest": "participatory_processes",
                                "resource_id": "312",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    }
  }
}