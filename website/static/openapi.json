{
  "openapi": "3.0.1",
  "info": {
    "title": "API V1",
    "version": "v0.2",
    "description": "A RestFull API for Decidim, to be able to CRUD resources from Decidim.  \n_current version: 0.2.3_\n\n## Authentication\n[Get a token](https://octree-gva.github.io/decidim-rest-full/category/authentication) from our `/oauth/token` routes,\nfollowing OAuth specs on Credential Flows or Resource Owner Password Credentials Flow.\n\n### Permissions\nA permission system is attached to the created OAuth application, that is designed in two levels:\n\n- **scope**: a broad permission to access a collection of endpoints\n- **abilities**: a fine grained permission system that allow actions.\n\nThe scopes and abilities are manageable in your System Admin Panel.\n\n### Multi-tenant\nDecidim is multi-tenant, and this API supports it.\n- The **`system` scope** endpoints are available in any tenant\n- The tenant `host` attribute will be used to guess which tenant you are requesting.\n  For example, given a tenant `example.org` and `foobar.org`, the endpoint\n  * `example.org/oauth/token` will ask a token for the example.org organization\n  * `foobar.org/oauth/token` for foobar.org.\n"
  },
  "servers": [
    {
      "url": "https://{defaultHost}/api/rest_full/v0.2",
      "variables": {
        "defaultHost": {
          "default": "www.example.com"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "OAuth",
      "description": "Use OAuth to get tokens and interact with the API. You can use machine-to-machine tokens, or user token directly with the API.\n* **Machine-to-machine**: Client Credential Flow\n* **User**: Resource Owner Password Credential Flow, with **impersonation** or **login**",
      "externalDocs": {
        "description": "How to authenticate",
        "url": "https://octree-gva.github.io/decidim-rest-full/category/authentication"
      }
    },
    {
      "name": "Organizations",
      "description": "Organization controls the main configuration of the platform. \nAs you can host many Decidim in the same platform, organizations allows you to setup: \n\n- host: the domain name used by your decidim\n- secondary_hosts: other domain names, used for redirecting to the correct organizati\n\nThe current organization is guessed from the host of the request, you can thus query the API\non different hosts to gather organization's related data.\n"
    },
    {
      "name": "Organizations Extended Data",
      "description": "Metadata management for organizations.\n"
    },
    {
      "name": "Spaces",
      "description": "Search and vizualize spaces (eg. Assemblies, Participatory Processes)"
    },
    {
      "name": "Components",
      "description": "Search and vizualize components"
    },
    {
      "name": "Users",
      "description": "Get information about participants, and manage own data."
    },
    {
      "name": "Blogs",
      "description": "Get informations about blog posts"
    },
    {
      "name": "Proposals",
      "description": "Manipulate proposals and drafts"
    },
    {
      "name": "Metrics",
      "description": "Metrics of the organization"
    }
  ],
  "components": {
    "securitySchemes": {
      "credentialFlowBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Authorization via service-to-service credentials flow.\nUse this for machine clients.\n[Learn more here](https://octree-gva.github.io/decidim-rest-full/user_documentation/auth/client-credential-flow)\n"
      },
      "resourceOwnerFlowBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Authorization via resource owner flow.\nUse this for user-based authentication\n[Learn more here](https://octree-gva.github.io/decidim-rest-full/user_documentation/auth/user-credentials-flow)\n"
      }
    },
    "schemas": {
      "get_action_link": {
        "title": "GET Action URL",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Action Name"
          },
          "href": {
            "type": "string",
            "description": "Full URL"
          },
          "describedby": {
            "type": "string",
            "description": "JSONSchema URL describing the request"
          },
          "hreflang": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Available locales"
          },
          "rel": {
            "type": "string",
            "enum": [
              "action"
            ]
          },
          "meta": {
            "title": "Meta for read request",
            "type": "object",
            "properties": {
              "component_id": {
                "type": "string",
                "description": "Component ID"
              },
              "component_manifest": {
                "type": "string",
                "description": "Component manifest"
              },
              "space_id": {
                "type": "string",
                "description": "Space ID"
              },
              "space_manifest": {
                "type": "string",
                "description": "Space Manifest"
              },
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "action_method": {
                "type": "string",
                "enum": [
                  "GET"
                ],
                "description": "Action HTTP method"
              }
            },
            "required": [
              "action_method"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "href",
          "title",
          "meta",
          "rel"
        ]
      },
      "post_action_link": {
        "title": "POST/DELETE/PUT Action URL",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Action Name"
          },
          "href": {
            "type": "string",
            "description": "Full URL"
          },
          "describedby": {
            "type": "string",
            "description": "JSONSchema URL describing the request"
          },
          "hreflang": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Available locales"
          },
          "rel": {
            "type": "string",
            "enum": [
              "action"
            ]
          },
          "meta": {
            "title": "Meta for write request",
            "type": "object",
            "properties": {
              "component_id": {
                "type": "string",
                "description": "Component ID"
              },
              "component_manifest": {
                "type": "string",
                "description": "Component manifest"
              },
              "space_id": {
                "type": "string",
                "description": "Space ID"
              },
              "space_manifest": {
                "type": "string",
                "description": "Space Manifest"
              },
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "action_method": {
                "type": "string",
                "enum": [
                  "POST",
                  "DELETE",
                  "PUT"
                ],
                "description": "Action HTTP method"
              },
              "action_enctype": {
                "type": "string",
                "enum": [
                  "application/x-www-form-urlencoded",
                  "multipart/form-data"
                ],
                "description": "Encoding of the payload"
              },
              "action_target": {
                "type": "string",
                "description": "URL to goes after submitting a valid request"
              }
            },
            "required": [
              "action_method",
              "action_enctype"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "href",
          "title",
          "meta",
          "rel"
        ]
      },
      "resource_link": {
        "title": "Resource URL",
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "Full URL"
          },
          "title": {
            "type": "string",
            "description": "Page Title"
          },
          "hreflang": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Available locales"
          },
          "describedby": {
            "type": "string",
            "description": "JSONSchema URL describing the request"
          },
          "rel": {
            "type": "string",
            "enum": [
              "public_page",
              "resource"
            ]
          },
          "meta": {
            "type": "object",
            "title": "Resource URL Metadata",
            "properties": {
              "component_id": {
                "type": "string",
                "description": "Component ID"
              },
              "component_manifest": {
                "type": "string",
                "description": "Component manifest"
              },
              "space_id": {
                "type": "string",
                "description": "Space ID"
              },
              "space_manifest": {
                "type": "string",
                "description": "Space Manifest"
              },
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              }
            }
          }
        },
        "required": [
          "href",
          "title",
          "meta",
          "rel"
        ],
        "additionalProperties": false
      },
      "translated_prop": {
        "type": "object",
        "title": "Translated data",
        "description": "Hash with translated data, key=locale value=translation",
        "properties": {
          "en": {
            "type": "string",
            "description": "Translation in en"
          },
          "fr": {
            "type": "string",
            "description": "Translation in fr"
          }
        },
        "additionalProperties": false
      },
      "time_zone": {
        "type": "string",
        "title": "Time Zone",
        "description": "Time Zone identifier",
        "enum": [
          "Africa/Algiers",
          "Africa/Cairo",
          "Africa/Casablanca",
          "Africa/Harare",
          "Africa/Johannesburg",
          "Africa/Monrovia",
          "Africa/Nairobi",
          "America/Argentina/Buenos_Aires",
          "America/Bogota",
          "America/Caracas",
          "America/Chicago",
          "America/Chihuahua",
          "America/Denver",
          "America/Godthab",
          "America/Guatemala",
          "America/Guyana",
          "America/Halifax",
          "America/Indiana/Indianapolis",
          "America/Juneau",
          "America/La_Paz",
          "America/Lima",
          "America/Lima",
          "America/Los_Angeles",
          "America/Mazatlan",
          "America/Mexico_City",
          "America/Mexico_City",
          "America/Monterrey",
          "America/Montevideo",
          "America/New_York",
          "America/Phoenix",
          "America/Puerto_Rico",
          "America/Regina",
          "America/Santiago",
          "America/Sao_Paulo",
          "America/St_Johns",
          "America/Tijuana",
          "Asia/Almaty",
          "Asia/Baghdad",
          "Asia/Baku",
          "Asia/Bangkok",
          "Asia/Bangkok",
          "Asia/Chongqing",
          "Asia/Colombo",
          "Asia/Dhaka",
          "Asia/Dhaka",
          "Asia/Hong_Kong",
          "Asia/Irkutsk",
          "Asia/Jakarta",
          "Asia/Jerusalem",
          "Asia/Kabul",
          "Asia/Kamchatka",
          "Asia/Karachi",
          "Asia/Karachi",
          "Asia/Kathmandu",
          "Asia/Kolkata",
          "Asia/Kolkata",
          "Asia/Kolkata",
          "Asia/Kolkata",
          "Asia/Krasnoyarsk",
          "Asia/Kuala_Lumpur",
          "Asia/Kuwait",
          "Asia/Magadan",
          "Asia/Muscat",
          "Asia/Muscat",
          "Asia/Novosibirsk",
          "Asia/Rangoon",
          "Asia/Riyadh",
          "Asia/Seoul",
          "Asia/Shanghai",
          "Asia/Singapore",
          "Asia/Srednekolymsk",
          "Asia/Taipei",
          "Asia/Tashkent",
          "Asia/Tbilisi",
          "Asia/Tehran",
          "Asia/Tokyo",
          "Asia/Tokyo",
          "Asia/Tokyo",
          "Asia/Ulaanbaatar",
          "Asia/Urumqi",
          "Asia/Vladivostok",
          "Asia/Yakutsk",
          "Asia/Yekaterinburg",
          "Asia/Yerevan",
          "Atlantic/Azores",
          "Atlantic/Cape_Verde",
          "Atlantic/South_Georgia",
          "Australia/Adelaide",
          "Australia/Brisbane",
          "Australia/Darwin",
          "Australia/Hobart",
          "Australia/Melbourne",
          "Australia/Melbourne",
          "Australia/Perth",
          "Australia/Sydney",
          "Etc/GMT+12",
          "Etc/UTC",
          "Europe/Amsterdam",
          "Europe/Athens",
          "Europe/Belgrade",
          "Europe/Berlin",
          "Europe/Bratislava",
          "Europe/Brussels",
          "Europe/Bucharest",
          "Europe/Budapest",
          "Europe/Copenhagen",
          "Europe/Dublin",
          "Europe/Helsinki",
          "Europe/Istanbul",
          "Europe/Kaliningrad",
          "Europe/Kiev",
          "Europe/Lisbon",
          "Europe/Ljubljana",
          "Europe/London",
          "Europe/London",
          "Europe/Madrid",
          "Europe/Minsk",
          "Europe/Moscow",
          "Europe/Moscow",
          "Europe/Paris",
          "Europe/Prague",
          "Europe/Riga",
          "Europe/Rome",
          "Europe/Samara",
          "Europe/Sarajevo",
          "Europe/Skopje",
          "Europe/Sofia",
          "Europe/Stockholm",
          "Europe/Tallinn",
          "Europe/Vienna",
          "Europe/Vilnius",
          "Europe/Volgograd",
          "Europe/Warsaw",
          "Europe/Zagreb",
          "Europe/Zurich",
          "Europe/Zurich",
          "Pacific/Apia",
          "Pacific/Auckland",
          "Pacific/Auckland",
          "Pacific/Chatham",
          "Pacific/Fakaofo",
          "Pacific/Fiji",
          "Pacific/Guadalcanal",
          "Pacific/Guam",
          "Pacific/Honolulu",
          "Pacific/Majuro",
          "Pacific/Midway",
          "Pacific/Noumea",
          "Pacific/Pago_Pago",
          "Pacific/Port_Moresby",
          "Pacific/Tongatapu",
          "UTC"
        ]
      },
      "component_type": {
        "type": "string",
        "enum": [
          "page_component",
          "proposal_component",
          "meeting_component",
          "budget_component",
          "survey_component",
          "accountability_component",
          "debate_component",
          "sortition_component",
          "blog_component",
          "awesome_map_component",
          "awesome_iframe_component"
        ]
      },
      "creation_date": {
        "title": "Creation date",
        "description": "Creation date, in ISO8601 format.",
        "type": "string",
        "format": "date_time",
        "example": "2024-11-12T12:34:56Z"
      },
      "edition_date": {
        "title": "Last Update Date",
        "description": "Last update date, in ISO8601 format.",
        "type": "string",
        "format": "date_time",
        "example": "2024-12-12T20:34:56Z"
      },
      "space_manifest": {
        "title": "Space Manifest",
        "type": "string",
        "enum": [
          "participatory_processes",
          "assemblies"
        ]
      },
      "component_manifest": {
        "title": "Component Manifest",
        "type": "string",
        "enum": [
          "pages",
          "proposals",
          "meetings",
          "budgets",
          "surveys",
          "accountability",
          "debates",
          "sortitions",
          "blogs",
          "awesome_map",
          "awesome_iframe"
        ]
      },
      "resource_manifest": {
        "title": "Resource Type",
        "type": "string",
        "enum": [
          "page",
          "proposal",
          "meeting",
          "budget",
          "survey",
          "accountability",
          "debate",
          "sortition",
          "blog",
          "awesome_map",
          "awesome_iframe"
        ]
      },
      "space_type": {
        "type": "string",
        "enum": [
          "participatory_processes",
          "assemblies"
        ]
      },
      "space_classes": {
        "type": "string",
        "description": "space class name. Part of the polymorphic association (participatory_space_type,participatory_space_id)",
        "enum": [
          "Decidim::ParticipatoryProcess",
          "Decidim::Assembly"
        ]
      },
      "space": {
        "type": "object",
        "title": "Space",
        "properties": {
          "id": {
            "type": "string",
            "description": "Space Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "space"
            ]
          },
          "attributes": {
            "title": "Space Attributes",
            "type": "object",
            "properties": {
              "title": {
                "$ref": "#/components/schemas/translated_prop",
                "title": "Title translations",
                "description": "Space title"
              },
              "subtitle": {
                "$ref": "#/components/schemas/translated_prop",
                "title": "Subtitle translations",
                "description": "Space subtitle"
              },
              "short_description": {
                "$ref": "#/components/schemas/translated_prop",
                "title": "Short Description translations",
                "description": "Space short_description"
              },
              "description": {
                "$ref": "#/components/schemas/translated_prop",
                "title": "Description translations",
                "description": "Space description"
              },
              "manifest_name": {
                "$ref": "#/components/schemas/space_manifest"
              },
              "participatory_space_type": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "visibility": {
                "type": "string",
                "enum": [
                  "public",
                  "transparent",
                  "private"
                ],
                "description": "Space visibility"
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "required": [
              "title",
              "manifest_name",
              "visibility",
              "created_at",
              "updated_at"
            ],
            "additionalProperties": false
          },
          "relationships": {
            "type": "object",
            "title": "Space relationships",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "$ref": "#/components/schemas/component_type"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Space Component Relationships Data"
                  },
                  "meta": {
                    "title": "Space Component Metadata",
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count for components association"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "count"
                    ]
                  },
                  "links": {
                    "type": "object",
                    "title": "Space Component Links",
                    "properties": {
                      "self": {
                        "$ref": "#/components/schemas/resource_link"
                      },
                      "related": {
                        "$ref": "#/components/schemas/resource_link"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "self"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta",
                  "links"
                ],
                "title": "Space Component Relationships"
              }
            }
          },
          "links": {
            "type": "object",
            "title": "Space Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "required": [
              "self",
              "related"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "links",
          "relationships"
        ]
      },
      "space_index_response": {
        "type": "object",
        "title": "Space Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/space"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "space_item_response": {
        "type": "object",
        "title": "Space Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/space"
          }
        },
        "required": [
          "data"
        ]
      },
      "client_credential": {
        "type": "object",
        "title": "Client Credential",
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "client_credentials"
            ],
            "description": "Client Credential Flow, for **machine-to-machine**"
          },
          "client_id": {
            "type": "string",
            "description": "OAuth application Client Id"
          },
          "client_secret": {
            "type": "string",
            "description": "OAuth application Client Secret"
          },
          "scope": {
            "type": "string",
            "enum": [
              "public",
              "[:blogs, :system, :public, :proposals, :oauth]"
            ],
            "description": "Requested scopes"
          }
        },
        "required": [
          "grant_type",
          "client_id",
          "client_secret",
          "scope"
        ]
      },
      "password_grant_login": {
        "type": "object",
        "title": "Login",
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "password"
            ],
            "description": "Resource Owner Password Credentials (ROPC) Flow, for **user login**"
          },
          "auth_type": {
            "type": "string",
            "enum": [
              "login"
            ],
            "description": "Type of ROPC"
          },
          "username": {
            "type": "string",
            "description": "User nickname"
          },
          "password": {
            "type": "string",
            "description": "User password"
          },
          "client_id": {
            "type": "string",
            "description": "OAuth application Client Id"
          },
          "client_secret": {
            "type": "string",
            "description": "OAuth application Client Secret"
          },
          "scope": {
            "type": "string",
            "enum": [
              "public",
              "[:blogs, :system, :public, :proposals, :oauth]"
            ],
            "description": "Request scopes"
          }
        },
        "required": [
          "grant_type",
          "client_id",
          "client_secret",
          "scope",
          "username",
          "password",
          "auth_type"
        ]
      },
      "password_grant_impersonate": {
        "type": "object",
        "title": "Impersonation",
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "password"
            ],
            "description": "Resource Owner Password Credentials (ROPC) Flow, for **user impersonation**"
          },
          "auth_type": {
            "type": "string",
            "enum": [
              "impersonate"
            ],
            "description": "Type of ROPC"
          },
          "username": {
            "type": "string",
            "description": "User nickname, unique and at least 6 alphanumeric chars."
          },
          "id": {
            "type": "string",
            "description": "User id, will find over id and ignore username. Fails if register_on_missing=true."
          },
          "meta": {
            "type": "object",
            "title": "User impersonation settings",
            "description": "Impersonation Settings",
            "properties": {
              "register_on_missing": {
                "type": "boolean",
                "description": "Register the user if it does not exists. Default: false"
              },
              "accept_tos_on_register": {
                "type": "boolean",
                "description": "Accept the TOS on registration, used only if register_on_missing=true. Default: false"
              },
              "skip_confirmation_on_register": {
                "type": "boolean",
                "description": "Skip email confirmation on creation, used only if register_on_missing=true. Default: false"
              },
              "email": {
                "type": "string",
                "description": "User email to use on registration. used only if register_on_missing=true. Default to <username>@example.org"
              },
              "name": {
                "type": "string",
                "description": "User name. Used only if register_on_missing=true. Default to username"
              }
            },
            "additionalProperties": false
          },
          "client_id": {
            "type": "string",
            "description": "OAuth application Client Id"
          },
          "client_secret": {
            "type": "string",
            "description": "OAuth application Client Secret"
          },
          "scope": {
            "type": "string",
            "enum": [
              "public",
              "[:blogs, :system, :public, :proposals, :oauth]"
            ],
            "description": "Request scopes"
          }
        },
        "additionalProperties": false,
        "required": [
          "grant_type",
          "client_id",
          "client_secret",
          "scope",
          "auth_type"
        ]
      },
      "oauth_grant_param": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/client_credential"
          },
          {
            "$ref": "#/components/schemas/password_grant_impersonate"
          },
          {
            "$ref": "#/components/schemas/password_grant_login"
          }
        ]
      },
      "password_grant_param": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/password_grant_impersonate"
          },
          {
            "$ref": "#/components/schemas/password_grant_login"
          }
        ]
      },
      "blog": {
        "type": "object",
        "title": "Blog Post",
        "properties": {
          "id": {
            "type": "string",
            "description": "Blog Post Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "blog"
            ]
          },
          "attributes": {
            "type": "object",
            "title": "Blog Post Attributes",
            "properties": {
              "title": {
                "$ref": "#/components/schemas/translated_prop"
              },
              "body": {
                "$ref": "#/components/schemas/translated_prop"
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "title",
              "body"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Blog Post Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published blog post?"
              },
              "scope": {
                "type": "integer",
                "description": "Scope Id"
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published"
            ]
          },
          "links": {
            "type": "object",
            "title": "Blog Post Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "collection": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              },
              "prev": {
                "$ref": "#/components/schemas/resource_link"
              },
              "next": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self",
              "collection",
              "related"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Blog Post Relationships",
            "properties": {
              "space": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "participatory_processes",
                          "assemblies"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Linked Space Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Linked Space"
              },
              "component": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "blog_component"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Linked Blog Component Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Linked Blog Component"
              }
            },
            "required": [
              "component",
              "space"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta",
          "links"
        ]
      },
      "blog_index_response": {
        "type": "object",
        "title": "Blog Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/blog"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "blog_item_response": {
        "type": "object",
        "title": "Blog Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/blog"
          }
        },
        "required": [
          "data"
        ]
      },
      "generic_component": {
        "type": "object",
        "title": "Component",
        "properties": {
          "id": {
            "type": "string",
            "description": "Component Id"
          },
          "type": {
            "$ref": "#/components/schemas/component_type"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Component name"
              },
              "global_announcement": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Component annoucement (intro)"
              },
              "participatory_space_type": {
                "$ref": "#/components/schemas/space_classes"
              },
              "participatory_space_id": {
                "type": "string",
                "description": "Associate space id. Part of the polymorphic association (participatory_space_type,participatory_space_id)"
              },
              "created_at": {
                "type": "string",
                "description": "Creation date of the component"
              },
              "updated_at": {
                "type": "string",
                "description": "Last update date of the component"
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "name",
              "manifest_name",
              "participatory_space_type",
              "participatory_space_id"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Component Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published component?"
              },
              "scopes_enabled": {
                "type": "boolean",
                "description": "Component handle scopes?"
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published",
              "scopes_enabled"
            ]
          },
          "links": {
            "type": "object",
            "title": "Component Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Component Relationships",
            "properties": {
              "resources": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Component Linked Resources Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Component Linked Resources Metadata",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count of resources"
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Component Linked Resources"
              }
            }
          }
        }
      },
      "proposal_component": {
        "type": "object",
        "title": "Proposal Component",
        "properties": {
          "id": {
            "type": "string",
            "description": "Proposal Component Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "proposal_component"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Proposal Component name"
              },
              "global_announcement": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Proposal Component annoucement (intro)"
              },
              "participatory_space_type": {
                "$ref": "#/components/schemas/space_classes"
              },
              "participatory_space_id": {
                "type": "string",
                "description": "Associate space id. Part of the polymorphic association (participatory_space_type,participatory_space_id)"
              },
              "created_at": {
                "type": "string",
                "description": "Creation date of the component"
              },
              "updated_at": {
                "type": "string",
                "description": "Last update date of the component"
              },
              "manifest_name": {
                "type": "string",
                "enum": [
                  "proposals"
                ]
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "name",
              "manifest_name",
              "participatory_space_type",
              "participatory_space_id"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Proposal Component Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published component?"
              },
              "scopes_enabled": {
                "type": "boolean",
                "description": "Proposal Component handle scopes?"
              },
              "can_create_proposals": {
                "type": "boolean",
                "description": "If the current user can create proposal (component allows, and user did not reach publication limit)"
              },
              "can_vote": {
                "type": "boolean",
                "description": "If the current user can vote on the component"
              },
              "can_comment": {
                "type": "boolean",
                "description": "If the current user comment on the component"
              },
              "geocoding_enabled": {
                "type": "boolean",
                "description": "If the component needs a map to display its resources"
              },
              "attachments_allowed": {
                "type": "boolean",
                "description": "If the component allows to attach files to resources"
              },
              "collaborative_drafts_enabled": {
                "type": "boolean",
                "description": "If you can create collaborative draft for the proposal"
              },
              "comments_enabled": {
                "type": "boolean",
                "description": "If you can comment on proposals"
              },
              "comments_max_length": {
                "type": "integer",
                "description": "Characters limit for comment"
              },
              "default_sort_order": {
                "type": "string",
                "enum": [
                  "random",
                  "recent",
                  "most_voted",
                  "most_endorsed",
                  "most_commented",
                  "most_followed",
                  "with_more_authors",
                  "automatic",
                  "default"
                ],
                "description": "Default order of proposals"
              },
              "official_proposals_enabled": {
                "type": "boolean",
                "description": "If proposals can be official"
              },
              "participatory_texts_enabled": {
                "type": "boolean",
                "description": "If proposals are based on a text modification"
              },
              "proposal_edit_before_minutes": {
                "type": "integer",
                "description": "Time in minute participant can edit the proposal"
              },
              "proposal_edit_time": {
                "type": "string",
                "enum": [
                  "infinite",
                  "limited"
                ],
                "description": "Type of restriction for proposal edition"
              },
              "proposal_limit": {
                "type": "integer",
                "description": "Max proposal per participant. No maximum if value is 0"
              },
              "resources_permissions_enabled": {
                "type": "boolean",
                "description": "If authorizations can be defined per proposal"
              },
              "threshold_per_proposal": {
                "type": "integer",
                "description": "Threshold to compare similar proposals"
              },
              "vote_limit": {
                "type": "integer",
                "description": "Max Number of vote per participant. 0 if no limit"
              },
              "endorsements_enabled": {
                "type": "boolean",
                "description": "If endorsements are enabled"
              },
              "votes_enabled": {
                "type": "boolean",
                "description": "If votes on proposal are enabled"
              },
              "creation_enabled": {
                "type": "boolean",
                "description": "If participant can create proposal are enabled"
              },
              "proposal_answering_enabled": {
                "type": "boolean",
                "description": "If officials can answer proposals"
              },
              "amendment_creation_enabled": {
                "type": "boolean",
                "description": "If participant can propose an amendment to a proposal"
              },
              "amendment_reaction_enabled": {
                "type": "boolean",
                "description": "If participant can react to an amendment of a proposal"
              },
              "amendment_promotion_enabled": {
                "type": "boolean",
                "description": "If participant choose an amendment to replace their initial proposal"
              },
              "votes": {
                "title": "Proposal Vote Weights Options",
                "description": "Vote weight, if can_vote is true.",
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Proposal Vote Weight",
                  "properties": {
                    "label": {
                      "type": "string",
                      "description": "Label to voting button"
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Value to add to the vote. 0 for abstention"
                    }
                  },
                  "required": [
                    "label",
                    "weight"
                  ]
                }
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published",
              "scopes_enabled",
              "can_create_proposals",
              "can_vote",
              "can_comment",
              "geocoding_enabled",
              "attachments_allowed",
              "vote_limit"
            ]
          },
          "links": {
            "type": "object",
            "title": "Proposal Component Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              },
              "draft": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Proposal Component Relationships",
            "properties": {
              "resources": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Proposal Component Linked Resources Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Proposal Component Linked Resources Metadata",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count of resources"
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Proposal Component Linked Resources"
              }
            }
          }
        },
        "description": "A proposal component can host proposals from participants, and official proposals (proposals from the organization).\nThis component have many metadatas that explain what are the restrictions regarding proposing, voting, commenting, amending or endorsing. \n\nFeatures toggles: \n- `can_create_proposals`: If participants can create proposals\n- `can_vote`: If participants can vote\n- `can_comment`: If participants can comments\n- .... and some more\n\n\n"
      },
      "proposal_component_index_response": {
        "type": "object",
        "title": "Proposal Component Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/proposal_component"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "proposal_component_item_response": {
        "type": "object",
        "title": "Proposal Component Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/proposal_component"
          }
        },
        "required": [
          "data"
        ]
      },
      "blog_component": {
        "type": "object",
        "title": "Blog Post Component",
        "properties": {
          "id": {
            "type": "string",
            "description": "Blog Post Component Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "blog_component"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Blog Post Component name"
              },
              "global_announcement": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Blog Post Component annoucement (intro)"
              },
              "participatory_space_type": {
                "$ref": "#/components/schemas/space_classes"
              },
              "participatory_space_id": {
                "type": "string",
                "description": "Associate space id. Part of the polymorphic association (participatory_space_type,participatory_space_id)"
              },
              "created_at": {
                "type": "string",
                "description": "Creation date of the component"
              },
              "updated_at": {
                "type": "string",
                "description": "Last update date of the component"
              },
              "manifest_name": {
                "type": "string",
                "enum": [
                  "blogs"
                ]
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "name",
              "manifest_name",
              "participatory_space_type",
              "participatory_space_id"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Blog Post Component Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published component?"
              },
              "scopes_enabled": {
                "type": "boolean",
                "description": "Blog Post Component handle scopes?"
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published",
              "scopes_enabled"
            ]
          },
          "links": {
            "type": "object",
            "title": "Blog Post Component Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Blog Post Component Relationships",
            "properties": {
              "resources": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Blog Post Component Linked Resources Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Blog Post Component Linked Resources Metadata",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count of resources"
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Blog Post Component Linked Resources"
              }
            }
          }
        }
      },
      "blog_component_index_response": {
        "type": "object",
        "title": "Blog Component Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/blog_component"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "blog_component_item_response": {
        "type": "object",
        "title": "Blog Component Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/blog_component"
          }
        },
        "required": [
          "data"
        ]
      },
      "other_component": {
        "type": "object",
        "title": "Generic Component",
        "properties": {
          "id": {
            "type": "string",
            "description": "Generic Component Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "page_component",
              "meeting_component",
              "budget_component",
              "survey_component",
              "accountability_component",
              "debate_component",
              "sortition_component",
              "awesome_map_component",
              "awesome_iframe_component"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Generic Component name"
              },
              "global_announcement": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Generic Component annoucement (intro)"
              },
              "participatory_space_type": {
                "$ref": "#/components/schemas/space_classes"
              },
              "participatory_space_id": {
                "type": "string",
                "description": "Associate space id. Part of the polymorphic association (participatory_space_type,participatory_space_id)"
              },
              "created_at": {
                "type": "string",
                "description": "Creation date of the component"
              },
              "updated_at": {
                "type": "string",
                "description": "Last update date of the component"
              },
              "manifest_name": {
                "type": "string",
                "enum": [
                  "pages",
                  "meetings",
                  "budgets",
                  "surveys",
                  "accountability",
                  "debates",
                  "sortitions",
                  "awesome_map",
                  "awesome_iframe"
                ]
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "name",
              "manifest_name",
              "participatory_space_type",
              "participatory_space_id"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Generic Component Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published component?"
              },
              "scopes_enabled": {
                "type": "boolean",
                "description": "Generic Component handle scopes?"
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published",
              "scopes_enabled"
            ]
          },
          "links": {
            "type": "object",
            "title": "Generic Component Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Generic Component Relationships",
            "properties": {
              "resources": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Generic Component Linked Resources Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Generic Component Linked Resources Metadata",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count of resources"
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Generic Component Linked Resources"
              }
            }
          }
        }
      },
      "component": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/proposal_component"
          },
          {
            "$ref": "#/components/schemas/blog_component"
          },
          {
            "$ref": "#/components/schemas/other_component"
          }
        ]
      },
      "component_index_response": {
        "type": "object",
        "title": "Component Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/component"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "component_item_response": {
        "type": "object",
        "title": "Component Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/component"
          }
        },
        "required": [
          "data"
        ]
      },
      "error": {
        "type": "object",
        "title": "Api Error Payload",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error title, starting with HTTP Code, like 400: bad request"
          },
          "error_description": {
            "type": "string",
            "description": "Error detail, mostly validation error"
          },
          "state": {
            "type": "string",
            "description": "authentification state"
          }
        },
        "additionalProperties": false,
        "required": [
          "error",
          "error_description"
        ]
      },
      "error_response": {
        "$ref": "#/components/schemas/error"
      },
      "health": {
        "type": "object",
        "title": "Health Status",
        "properties": {
          "message": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          }
        }
      },
      "introspect_data": {
        "type": "object",
        "title": "Introspection Response",
        "properties": {
          "sub": {
            "type": "integer",
            "description": "Access token id"
          },
          "active": {
            "type": "boolean",
            "description": "If the token can be used"
          },
          "aud": {
            "type": "string",
            "description": "Where this token can be used (organization host)"
          },
          "resource": {
            "type": "object",
            "title": "Resource details",
            "properties": {
              "id": {
                "type": "string",
                "description": "resource id"
              },
              "type": {
                "type": "string",
                "enum": [
                  "user"
                ],
                "description": "resource type"
              },
              "attributes": {
                "type": "object",
                "title": "Resource Attributes",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Last update date"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Creation date"
                  },
                  "personal_url": {
                    "type": "string",
                    "description": "Personal url (social link, website, etc.)"
                  },
                  "locale": {
                    "type": "string",
                    "description": "Current prefered locale",
                    "enum": [
                      "en",
                      "fr"
                    ]
                  }
                },
                "required": [
                  "email",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "sub",
          "active",
          "aud",
          "exp"
        ]
      },
      "locale": {
        "title": "Current locale",
        "type": "string",
        "enum": [
          "en",
          "fr"
        ]
      },
      "locales": {
        "type": "array",
        "title": "Available locales",
        "items": {
          "$ref": "#/components/schemas/locale"
        }
      },
      "organization_attributes": {
        "title": "Organization Attributes",
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/translated_prop",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "$ref": "#/components/schemas/translated_prop",
            "additionalProperties": {
              "type": "string"
            }
          },
          "reference_prefix": {
            "type": "string",
            "description": "Prefix for the organization. Used to prefix uplodaded files and reference resources"
          },
          "host": {
            "type": "string"
          },
          "send_welcome_notification": {
            "type": "boolean",
            "description": "True if welcome email is sent to users"
          },
          "secondary_hosts": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Additional host, will redirect (301) to `host`"
            }
          },
          "available_locales": {
            "type": "array",
            "title": "Available locales",
            "items": {
              "$ref": "#/components/schemas/locale"
            }
          },
          "default_locale": {
            "type": "string",
            "description": "defaut locale for the organization"
          },
          "users_registration_mode": {
            "type": "string",
            "enum": [
              "enabled",
              "existing",
              "disabled"
            ],
            "description": "Define user registration mode: \n- `enabled`: Enable users registration\n- `existing`: Existing users will be able to login. Registration will be disabled.\n- `disabled`: No registration enabled\n"
          },
          "force_users_to_authenticate_before_access_organization": {
            "type": "boolean",
            "description": "Force users to authenticate before accessing the organization (disabled if users_registration_mode is `disabled`)"
          },
          "badges_enabled": {
            "type": "boolean",
            "description": "Enable badges for public views"
          },
          "enable_participatory_space_filters": {
            "type": "boolean",
            "description": "Display areas and scopes filter in public views."
          },
          "enable_machine_translations": {
            "type": "boolean",
            "description": "Enable machine translations (must be configured, see [Using machine translations](https://docs.decidim.org/en/develop/develop/machine_translations.html))"
          },
          "user_groups_enabled": {
            "type": "boolean",
            "description": "Enable user groups in public views"
          },
          "time_zone": {
            "$ref": "#/components/schemas/time_zone"
          },
          "comments_max_length": {
            "type": "integer",
            "description": "Default maximum length of comments"
          },
          "rich_text_editor_in_public_views": {
            "type": "boolean",
            "description": "Enable rich text editor in public views"
          },
          "created_at": {
            "$ref": "#/components/schemas/creation_date"
          },
          "updated_at": {
            "$ref": "#/components/schemas/edition_date"
          },
          "extended_data": {
            "type": "object",
            "description": "Extended data for the organization"
          }
        },
        "additionalProperties": false,
        "required": [
          "host",
          "name",
          "available_locales",
          "default_locale"
        ]
      },
      "organization": {
        "type": "object",
        "title": "Organization",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "organization"
            ]
          },
          "attributes": {
            "$ref": "#/components/schemas/organization_attributes"
          },
          "meta": {
            "title": "Organization Metadata",
            "type": "object",
            "properties": {
              "locales": {
                "type": "array",
                "title": "Available locales",
                "items": {
                  "$ref": "#/components/schemas/locale"
                }
              },
              "unconfirmed_host": {
                "type": "string",
                "description": "If host update is pending, unconfirmed host for the organization"
              }
            },
            "required": [
              "locales"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta"
        ]
      },
      "organization_index_response": {
        "type": "object",
        "title": "Organization Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/organization"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "organization_item_response": {
        "type": "object",
        "title": "Organization Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/organization"
          }
        },
        "required": [
          "data"
        ]
      },
      "organization_extended_data": {
        "type": "object",
        "title": "Organization extended data",
        "properties": {},
        "additionalProperties": true,
        "description": "Hash of values attached to an organization. These values won't be\ndisplayed to admins or users, consider this as an internal\ndata payload.\n"
      },
      "draft_proposal": {
        "type": "object",
        "title": "Draft Proposal",
        "properties": {
          "id": {
            "type": "string",
            "description": "Draft Proposal Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "draft_proposal"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Draft Proposal title"
              },
              "body": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Draft Proposal content"
              },
              "errors": {
                "type": "object",
                "title": "Draft Proposal Validation Errors",
                "properties": {
                  "title": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "body": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "title",
                  "body"
                ],
                "description": "Draft current errors"
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "title",
              "body"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Draft Proposition Metadata",
            "properties": {
              "publishable": {
                "type": "boolean",
                "description": "Draft is published as it is now?"
              },
              "client_id": {
                "type": "string",
                "description": "Attached client_id"
              },
              "scope": {
                "type": "integer",
                "description": "Scope Id"
              },
              "fields": {
                "type": "array",
                "description": "Editable field names",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "publishable",
              "client_id",
              "fields"
            ]
          },
          "links": {
            "type": "object",
            "title": "Proposal Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "collection": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self",
              "related",
              "collection"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Draft Proposal Relationships",
            "properties": {
              "space": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "$ref": "#/components/schemas/space_type"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Draft Proposal Related Space Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Draft Proposal Related Space"
              },
              "component": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "$ref": "#/components/schemas/component_type"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Draft Proposal Related Component Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Draft Proposal Related Component"
              },
              "author": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "user",
                          "user_group"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Draft Proposal Author Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Draft Proposal Author"
              },
              "coauthors": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user",
                            "user_group"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Draft Proposal Coauthors Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Draft Proposal Coauthors"
              }
            },
            "required": [
              "component",
              "space"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta",
          "links"
        ]
      },
      "draft_proposal_index_response": {
        "type": "object",
        "title": "Draft Proposal Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/draft_proposal"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "draft_proposal_item_response": {
        "type": "object",
        "title": "Draft Proposal Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/draft_proposal"
          }
        },
        "required": [
          "data"
        ]
      },
      "proposal": {
        "type": "object",
        "title": "Proposal",
        "properties": {
          "id": {
            "type": "string",
            "description": "Proposal Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "proposal"
            ]
          },
          "attributes": {
            "type": "object",
            "title": "Proposal Attributes",
            "properties": {
              "title": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Proposal title"
              },
              "body": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Proposal content"
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "title",
              "body"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Proposal Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published blog post?"
              },
              "scope": {
                "type": "integer",
                "description": "Scope Id"
              },
              "voted": {
                "type": "object",
                "title": "Current User Proposal Vote Metadata",
                "properties": {
                  "weight": {
                    "type": "integer",
                    "description": "Vote weight"
                  }
                },
                "required": [
                  "weight"
                ],
                "additionalProperties": false,
                "nullable": true
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published"
            ]
          },
          "links": {
            "type": "object",
            "title": "Proposal Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "collection": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              },
              "prev": {
                "$ref": "#/components/schemas/resource_link"
              },
              "next": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self",
              "collection",
              "related"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Proposal Relationships",
            "properties": {
              "state": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "proposal_state"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Proposal State Relationship Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Proposal State Relationship Metadata",
                    "properties": {
                      "token": {
                        "type": "string",
                        "description": "Proposal State token"
                      }
                    },
                    "required": [
                      "token"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Proposal State Relationship"
              },
              "space": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "$ref": "#/components/schemas/space_type"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Linked Space Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Linked Space"
              },
              "component": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "proposal_component"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Linked Proposal Component Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Linked Proposal Component"
              },
              "author": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "user",
                          "user_group"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Proposal's Author Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Proposal's Author"
              },
              "coauthors": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user",
                            "user_group"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Proposal's Coauthors Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Proposal's Coauthors"
              }
            },
            "required": [
              "component",
              "space"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta",
          "links"
        ]
      },
      "proposal_index_response": {
        "type": "object",
        "title": "Proposal Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/proposal"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "proposal_item_response": {
        "type": "object",
        "title": "Proposal Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/proposal"
          }
        },
        "required": [
          "data"
        ]
      },
      "user_extended_data": {
        "type": "object",
        "title": "User extended data",
        "properties": {},
        "additionalProperties": true,
        "description": "Hash of values attached to a user. These values won't be\ndisplayed to admins or users, consider this as an internal\ndata payload.\n"
      },
      "user": {
        "type": "object",
        "title": "User",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "user"
            ]
          },
          "meta": {
            "title": "User Metadata",
            "type": "object",
            "properties": {
              "blocked": {
                "type": "boolean",
                "description": "If the user is blocked, and need to be unblocked to signin"
              },
              "locked": {
                "type": "boolean",
                "description": "If the user is locked, and need to click on the mail link to unlock"
              }
            },
            "required": [
              "blocked",
              "locked"
            ],
            "additionalProperties": false
          },
          "relationships": {
            "type": "object",
            "title": "User Relationships",
            "properties": {
              "roles": {
                "type": "object",
                "title": "User Roles",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "title": "User Role",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user_role"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          },
          "attributes": {
            "type": "object",
            "title": "User Attributes",
            "properties": {
              "name": {
                "description": "User name, use to display the Profile identity. Public",
                "type": "string"
              },
              "nickname": {
                "description": "User nickname, unique identifier for the user. Public",
                "type": "string"
              },
              "personal_url": {
                "description": "Personal website URL or social link. Public",
                "type": "string"
              },
              "about": {
                "description": "Short bio of the user. Public",
                "type": "string"
              },
              "locale": {
                "$ref": "#/components/schemas/locale",
                "description": "User locale. Fallback to default locale of the organization. Private"
              },
              "email": {
                "description": "Email of the user. Private",
                "type": "string"
              },
              "extended_data": {
                "type": "object",
                "title": "User Extended Data",
                "description": "Additional data. Private",
                "properties": {},
                "additionalProperties": true
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "additionalProperties": false,
            "required": [
              "created_at",
              "updated_at",
              "name",
              "nickname",
              "locale",
              "extended_data"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "additionalProperties": false
      },
      "user_index_response": {
        "type": "object",
        "title": "User Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/user"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "user_item_response": {
        "type": "object",
        "title": "User Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/user"
          }
        },
        "required": [
          "data"
        ]
      },
      "magic_link": {
        "type": "object",
        "title": "Magic Link",
        "properties": {
          "id": {
            "type": "string",
            "description": "Magic Token ID"
          },
          "type": {
            "type": "string",
            "enum": [
              "magic_link"
            ]
          },
          "attributes": {
            "type": "object",
            "title": "Magic Link Attributes",
            "properties": {
              "token": {
                "type": "string",
                "description": "Magic Link Token"
              },
              "label": {
                "type": "string",
                "description": "Magic Link description"
              }
            },
            "required": [
              "token",
              "label"
            ]
          },
          "links": {
            "type": "object",
            "title": "Magic Link links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "sign_in": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "required": [
              "self",
              "sign_in"
            ]
          }
        },
        "required": [
          "attributes",
          "links",
          "id",
          "type"
        ],
        "additionalProperties": false
      },
      "magic_link_index_response": {
        "type": "object",
        "title": "Magic Link Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/magic_link"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "magic_link_item_response": {
        "type": "object",
        "title": "Magic Link Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/magic_link"
          }
        },
        "required": [
          "data"
        ]
      },
      "magic_link_redirect": {
        "type": "object",
        "title": "Magic Redirect",
        "properties": {
          "id": {
            "type": "string",
            "description": "Magic Token ID"
          },
          "type": {
            "type": "string",
            "enum": [
              "magic_link_redirect"
            ]
          },
          "attributes": {
            "type": "object",
            "title": "Magic Link Attributes",
            "properties": {
              "redirect_url": {
                "type": "string",
                "description": "Redirection destination"
              },
              "label": {
                "type": "string",
                "description": "Magic Link description"
              }
            },
            "required": [
              "redirect_url",
              "label"
            ]
          },
          "links": {
            "type": "object",
            "title": "Magic Link links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/get_action_link"
              },
              "magic_link": {
                "$ref": "#/components/schemas/get_action_link"
              }
            },
            "required": [
              "self",
              "magic_link"
            ]
          }
        },
        "required": [
          "attributes",
          "links",
          "id",
          "type"
        ],
        "additionalProperties": false
      }
    }
  },
  "paths": {
    "/organizations": {
      "get": {
        "summary": "Organizations",
        "tags": [
          "Organizations"
        ],
        "operationId": "organizations",
        "description": "List available organizations",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Organizations listed",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "2",
                          "type": "organization",
                          "attributes": {
                            "host": "localhost",
                            "secondary_hosts": [
                              "0.0.0.0",
                              "127.0.0.1"
                            ],
                            "default_locale": "en",
                            "available_locales": [
                              "en",
                              "fr"
                            ],
                            "enable_machine_translations": false,
                            "enable_participatory_space_filters": true,
                            "badges_enabled": true,
                            "rich_text_editor_in_public_views": true,
                            "comments_max_length": 1000,
                            "time_zone": "UTC",
                            "users_registration_mode": "enabled",
                            "user_groups_enabled": true,
                            "force_users_to_authenticate_before_access_organization": false,
                            "reference_prefix": "PhD",
                            "send_welcome_notification": true,
                            "name": {
                              "en": "Schowalter-Kuphal",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p>Ea quis aspernatur voluptatibus beatae maxime quis consequatur sit necessitatibus eos omnis blanditiis sed excepturi.</p>"
                            },
                            "extended_data": {},
                            "created_at": "2025-06-25T05:51:20Z",
                            "updated_at": "2025-06-28T06:23:54Z"
                          },
                          "meta": {
                            "locales": [
                              "en",
                              "fr"
                            ]
                          }
                        },
                        {
                          "id": "5195",
                          "type": "organization",
                          "attributes": {
                            "host": "4.lvh.me",
                            "secondary_hosts": [],
                            "default_locale": "en",
                            "available_locales": [
                              "en",
                              "fr"
                            ],
                            "enable_machine_translations": false,
                            "enable_participatory_space_filters": true,
                            "badges_enabled": true,
                            "rich_text_editor_in_public_views": false,
                            "comments_max_length": 1000,
                            "time_zone": "UTC",
                            "users_registration_mode": "enabled",
                            "user_groups_enabled": true,
                            "force_users_to_authenticate_before_access_organization": false,
                            "reference_prefix": "II",
                            "send_welcome_notification": true,
                            "name": {
                              "en": "Connelly, Hauck and Hackett",
                              "fr": "Yost-Lind"
                            },
                            "description": {
                              "en": "<p><script>alert(\"organization_description\");</script> Voluptas blanditiis nam. 25</p>"
                            },
                            "extended_data": {},
                            "created_at": "2025-07-15T06:02:49Z",
                            "updated_at": "2025-07-15T06:02:49Z"
                          },
                          "meta": {
                            "locales": [
                              "en",
                              "fr"
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/organization_index_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/components/blog_components": {
      "get": {
        "summary": "Blog Components",
        "tags": [
          "Components"
        ],
        "operationId": "blog_components",
        "description": "List or search blog components of the organization",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "participatory_space_id IN filter",
              "description": "match one of _participatory_space_id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id equal filter",
              "description": "_participatory_space_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id less than filter",
              "description": "_participatory_space_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id greater than filter",
              "description": "_participatory_space_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id present filter",
              "description": "_participatory_space_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id blank filter",
              "description": "_participatory_space_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "title": "participatory_space_type not IN filter",
              "description": "match none of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "title": "participatory_space_type IN filter",
              "description": "match one of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_participatory_space_type_ starts with",
              "title": "participatory_space_type starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Decidim::Assembly",
              "title": "participatory_space_type equal filter",
              "description": "_participatory_space_type_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Decidim::Assembly",
              "title": "participatory_space_type not equal filter",
              "description": "_participatory_space_type_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_type like filter",
              "description": "matches _participatory_space_type_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_type blank filter",
              "description": "_participatory_space_type_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name not IN filter",
              "description": "match none of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name IN filter",
              "description": "match one of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_name_ starts with",
              "title": "name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name equal filter",
              "description": "_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name not equal filter",
              "description": "_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name like filter",
              "description": "matches _name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "name blank filter",
              "description": "_name_ is null or empty"
            },
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "List of blog components",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "13523",
                          "type": "blog_component",
                          "attributes": {
                            "manifest_name": "blogs",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3897",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Nihil illum eos. 1521"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:02:56Z",
                            "updated_at": "2025-07-15T06:02:56Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://20.lvh.me/components/blog_components/13523",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3897",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://20.lvh.me/spaces/participatory_processes/3897",
                              "title": "<script>alert(\"participatory_process_title\");</script> Quia qui alias. 1469",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3897",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "components_in_Process": {
                    "value": {
                      "data": [
                        {
                          "id": "13521",
                          "type": "blog_component",
                          "attributes": {
                            "manifest_name": "blogs",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3896",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Dolorem aut quos. 1427"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:02:56Z",
                            "updated_at": "2025-07-15T06:02:56Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://19.lvh.me/components/blog_components/13521",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3896",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://19.lvh.me/spaces/participatory_processes/3896",
                              "title": "<script>alert(\"participatory_process_title\");</script> Temporibus ipsum est. 1375",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3896",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "13538",
                          "type": "blog_component",
                          "attributes": {
                            "manifest_name": "blogs",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3901",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Mollitia cupiditate doloribus. 1937"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:02:58Z",
                            "updated_at": "2025-07-15T06:02:58Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://24.lvh.me/components/blog_components/13538",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3901",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://24.lvh.me/spaces/participatory_processes/3901",
                              "title": "<script>alert(\"participatory_process_title\");</script> Doloremque animi alias. 1881",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3901",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        },
                        {
                          "id": "13539",
                          "type": "blog_component",
                          "attributes": {
                            "manifest_name": "blogs",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3901",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Quia ratione laborum. 1943"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:02:58Z",
                            "updated_at": "2025-07-15T06:02:58Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://24.lvh.me/components/blog_components/13539",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3901",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://24.lvh.me/spaces/participatory_processes/3901",
                              "title": "<script>alert(\"participatory_process_title\");</script> Doloremque animi alias. 1881",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3901",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/blog_component_index_response"
                }
              }
            }
          }
        }
      }
    },
    "/components/proposal_components": {
      "get": {
        "summary": "Proposal Components",
        "tags": [
          "Components"
        ],
        "operationId": "proposal_components",
        "description": "List or search proposal components of the organization",
        "parameters": [
          {
            "name": "filter[name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name not IN filter",
              "description": "match none of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name IN filter",
              "description": "match one of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_name_ starts with",
              "title": "name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name equal filter",
              "description": "_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name not equal filter",
              "description": "_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name like filter",
              "description": "matches _name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "name blank filter",
              "description": "_name_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "title": "participatory_space_type not IN filter",
              "description": "match none of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "title": "participatory_space_type IN filter",
              "description": "match one of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_participatory_space_type_ starts with",
              "title": "participatory_space_type starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Decidim::Assembly",
              "title": "participatory_space_type equal filter",
              "description": "_participatory_space_type_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Decidim::Assembly",
              "title": "participatory_space_type not equal filter",
              "description": "_participatory_space_type_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_type like filter",
              "description": "matches _participatory_space_type_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_type blank filter",
              "description": "_participatory_space_type_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "participatory_space_id IN filter",
              "description": "match one of _participatory_space_id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id equal filter",
              "description": "_participatory_space_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id less than filter",
              "description": "_participatory_space_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id greater than filter",
              "description": "_participatory_space_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id present filter",
              "description": "_participatory_space_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id blank filter",
              "description": "_participatory_space_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "List of proposal components",
            "content": {
              "application/json": {
                "examples": {
                  "ok_with_draft": {
                    "value": {
                      "data": [
                        {
                          "id": "13583",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3918",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Dolores unde cupiditate. 3735"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:03:06Z",
                            "updated_at": "2025-07-15T06:03:06Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "7240",
                                  "type": "proposal"
                                },
                                {
                                  "id": "7241",
                                  "type": "proposal"
                                },
                                {
                                  "id": "7242",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 3
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://41.lvh.me/components/proposal_components/13583",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3918",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://41.lvh.me/spaces/participatory_processes/3918",
                              "title": "<script>alert(\"participatory_process_title\");</script> Molestias accusamus laboriosam. 3709",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3918",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "draft": {
                              "href": "https://41.lvh.me/api/rest_full/v0.2/draft_proposals/7243",
                              "title": "Draft Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13585",
                                "component_manifest": "proposals",
                                "space_id": "3918",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7243",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "13584",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3918",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:03:06Z",
                            "updated_at": "2025-07-15T06:03:06Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://41.lvh.me/components/proposal_components/13584",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3918",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://41.lvh.me/spaces/participatory_processes/3918",
                              "title": "<script>alert(\"participatory_process_title\");</script> Molestias accusamus laboriosam. 3709",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3918",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "draft": {
                              "href": "https://41.lvh.me/api/rest_full/v0.2/draft_proposals/7243",
                              "title": "Draft Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13585",
                                "component_manifest": "proposals",
                                "space_id": "3918",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7243",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        },
                        {
                          "id": "13585",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3918",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Sed minus et. 3773"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:03:06Z",
                            "updated_at": "2025-07-15T06:03:06Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "7243",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://41.lvh.me/components/proposal_components/13585",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3918",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://41.lvh.me/spaces/participatory_processes/3918",
                              "title": "<script>alert(\"participatory_process_title\");</script> Molestias accusamus laboriosam. 3709",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3918",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "draft": {
                              "href": "https://41.lvh.me/api/rest_full/v0.2/draft_proposals/7243",
                              "title": "Draft Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13585",
                                "component_manifest": "proposals",
                                "space_id": "3918",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7243",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        }
                      ]
                    }
                  },
                  "components_in_Process": {
                    "value": {
                      "data": [
                        {
                          "id": "13603",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3923",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Et minus architecto. 4313"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:03:08Z",
                            "updated_at": "2025-07-15T06:03:08Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "7258",
                                  "type": "proposal"
                                },
                                {
                                  "id": "7257",
                                  "type": "proposal"
                                },
                                {
                                  "id": "7256",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 3
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://46.lvh.me/components/proposal_components/13603",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3923",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://46.lvh.me/spaces/participatory_processes/3923",
                              "title": "<script>alert(\"participatory_process_title\");</script> Hic sint voluptatibus. 4287",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3923",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "13604",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3923",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:03:08Z",
                            "updated_at": "2025-07-15T06:03:08Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://46.lvh.me/components/proposal_components/13604",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3923",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://46.lvh.me/spaces/participatory_processes/3923",
                              "title": "<script>alert(\"participatory_process_title\");</script> Hic sint voluptatibus. 4287",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3923",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "13600",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::Assembly",
                            "participatory_space_id": "2702",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Sit ut deserunt. 4231"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:03:08Z",
                            "updated_at": "2025-07-15T06:03:08Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://45.lvh.me/components/proposal_components/13600",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2702",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://45.lvh.me/spaces/assemblies/2702",
                              "title": "<script>alert(\"assembly_title\");</script> Ea illo fuga. 4137",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2702",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "13601",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::Assembly",
                            "participatory_space_id": "2702",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Occaecati rerum voluptatum. 4237"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:03:08Z",
                            "updated_at": "2025-07-15T06:03:08Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://45.lvh.me/components/proposal_components/13601",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2702",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://45.lvh.me/spaces/assemblies/2702",
                              "title": "<script>alert(\"assembly_title\");</script> Ea illo fuga. 4137",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2702",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        }
                      ]
                    }
                  },
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "13581",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3917",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Dolor asperiores maxime. 3631"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:03:06Z",
                            "updated_at": "2025-07-15T06:03:06Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "7237",
                                  "type": "proposal"
                                },
                                {
                                  "id": "7238",
                                  "type": "proposal"
                                },
                                {
                                  "id": "7239",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 3
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://40.lvh.me/components/proposal_components/13581",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3917",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://40.lvh.me/spaces/participatory_processes/3917",
                              "title": "<script>alert(\"participatory_process_title\");</script> Eius illum corporis. 3605",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3917",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "13582",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3917",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:03:06Z",
                            "updated_at": "2025-07-15T06:03:06Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://40.lvh.me/components/proposal_components/13582",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3917",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://40.lvh.me/spaces/participatory_processes/3917",
                              "title": "<script>alert(\"participatory_process_title\");</script> Eius illum corporis. 3605",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3917",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_component_index_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/proposals/{id}": {
      "get": {
        "summary": "Proposal Details",
        "tags": [
          "Proposals"
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "operationId": "proposal",
        "description": "Proposal detail",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "space_manifest",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "description": "Space type"
            },
            "required": false
          },
          {
            "name": "space_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Space Id"
            },
            "required": false
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "voted_weight not IN filter",
              "description": "match none of _voted_weight_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "voted_weight IN filter",
              "description": "match one of _voted_weight_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_voted_weight_ starts with",
              "title": "voted_weight starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight equal filter",
              "description": "_voted_weight_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight not equal filter",
              "description": "_voted_weight_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight like filter",
              "description": "matches _voted_weight_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "voted_weight blank filter",
              "description": "_voted_weight_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[state_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "state not IN filter",
              "description": "match none of _state_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[state_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "state IN filter",
              "description": "match one of _state_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[state_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_state_ starts with",
              "title": "state starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[state_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state equal filter",
              "description": "_state_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[state_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state not equal filter",
              "description": "_state_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[state_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state like filter",
              "description": "matches _state_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[state_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "state blank filter",
              "description": "_state_ is null or empty"
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Proposal Id"
            },
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Proposal Found",
            "content": {
              "application/json": {
                "examples": {
                  "accepted_proposal": {
                    "value": {
                      "data": {
                        "id": "7288",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-15T06:03:14Z",
                          "updated_at": "2025-07-15T06:03:14Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Minus explicabo esse. 5165"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Id qui nobis. 5167</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3937",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13619",
                              "type": "proposal_component"
                            }
                          },
                          "state": {
                            "data": {
                              "id": "11231",
                              "type": "proposal_state"
                            },
                            "meta": {
                              "token": "accepted"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "11089",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "11089",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://60.lvh.me/public/components/13619",
                            "title": "<script>alert(\"component_name\");</script> Animi repudiandae voluptatem. 5149",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3937",
                              "space_manifest": "participatory_processes",
                              "component_id": "13619",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://60.lvh.me/api/rest_full/v0.2/proposals/7288",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13619",
                              "component_manifest": "proposals",
                              "space_id": "3937",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7288",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://60.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13619",
                              "component_manifest": "proposals",
                              "space_id": "3937",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7288",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://60.lvh.me/api/rest_full/v0.2/proposals/7287",
                            "title": "Previous Proposal",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13619",
                              "component_manifest": "proposals",
                              "space_id": "3937",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7287",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  },
                  "navigation_non_rejected": {
                    "value": {
                      "data": {
                        "id": "7279",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-15T06:03:13Z",
                          "updated_at": "2025-07-15T06:03:13Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Sint odit aut. 4967"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Cupiditate qui velit. 4969</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3934",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13616",
                              "type": "proposal_component"
                            }
                          },
                          "state": {
                            "data": {
                              "id": "11222",
                              "type": "proposal_state"
                            },
                            "meta": {
                              "token": "accepted"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "11077",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "11077",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://57.lvh.me/public/components/13616",
                            "title": "<script>alert(\"component_name\");</script> Quaerat fuga assumenda. 4951",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3934",
                              "space_manifest": "participatory_processes",
                              "component_id": "13616",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://57.lvh.me/api/rest_full/v0.2/proposals/7279",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13616",
                              "component_manifest": "proposals",
                              "space_id": "3934",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7279",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://57.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13616",
                              "component_manifest": "proposals",
                              "space_id": "3934",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7279",
                              "action_method": "GET"
                            }
                          },
                          "next": {
                            "href": "https://57.lvh.me/api/rest_full/v0.2/proposals/7281",
                            "title": "Next Proposal",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13616",
                              "component_manifest": "proposals",
                              "space_id": "3934",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7281",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://57.lvh.me/api/rest_full/v0.2/proposals/7278",
                            "title": "Previous Proposal",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13616",
                              "component_manifest": "proposals",
                              "space_id": "3934",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7278",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  },
                  "navigation_last_accepted": {
                    "value": {
                      "data": {
                        "id": "7284",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-15T06:03:14Z",
                          "updated_at": "2025-07-15T06:03:14Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Dolores dolorum et. 5053"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> A quae nihil. 5055</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3935",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13617",
                              "type": "proposal_component"
                            }
                          },
                          "state": {
                            "data": {
                              "id": "11225",
                              "type": "proposal_state"
                            },
                            "meta": {
                              "token": "accepted"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "11083",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "11083",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://58.lvh.me/public/components/13617",
                            "title": "<script>alert(\"component_name\");</script> Neque veniam et. 5027",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3935",
                              "space_manifest": "participatory_processes",
                              "component_id": "13617",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://58.lvh.me/api/rest_full/v0.2/proposals/7284",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13617",
                              "component_manifest": "proposals",
                              "space_id": "3935",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7284",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://58.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13617",
                              "component_manifest": "proposals",
                              "space_id": "3935",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7284",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://58.lvh.me/api/rest_full/v0.2/proposals/7283",
                            "title": "Previous Proposal",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13617",
                              "component_manifest": "proposals",
                              "space_id": "3935",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7283",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  },
                  "ok": {
                    "value": {
                      "data": {
                        "id": "7286",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-15T06:03:14Z",
                          "updated_at": "2025-07-15T06:03:14Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Dignissimos sunt voluptas. 5109"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Recusandae molestiae quidem. 5111</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3936",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13618",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "11086",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "11086",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://59.lvh.me/public/components/13618",
                            "title": "<script>alert(\"component_name\");</script> Nulla totam distinctio. 5103",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3936",
                              "space_manifest": "participatory_processes",
                              "component_id": "13618",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://59.lvh.me/api/rest_full/v0.2/proposals/7286",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13618",
                              "component_manifest": "proposals",
                              "space_id": "3936",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7286",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://59.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13618",
                              "component_manifest": "proposals",
                              "space_id": "3936",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7286",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_item_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}": {
      "put": {
        "summary": "Update organization",
        "tags": [
          "Organizations"
        ],
        "operationId": "updateOrganization",
        "description": "This endpoint allows you to update an organization.\n\n### Update host\nTo update the host, send in your payload the `host` attribute. It will be saved as an `unconfirmed_host` extended data attribute. \nOnce saved, a job will be enqueued to reverse DNS the unconfirmed host before actually updating the host.\nThe `host` attribute must be unique across all organizations.\nMore information on this update process is documented in the [Safe host update](https://octree-gva.github.io/decidim-rest-full/dev/update-hosts) page.\n\n### Update name\nTo update the name, send in your payload the `name` attribute.\nThe `name` attribute must be unique across all organizations.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "404": {
            "description": "Organization Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Organization Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_name_taken": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Name en has already been taken"
                    }
                  },
                  "bad_request_host_taken": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Unconfirmed host has already been taken"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Organization updated",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "5265",
                        "type": "organization",
                        "attributes": {
                          "host": "74.lvh.me",
                          "secondary_hosts": [
                            "[]"
                          ],
                          "default_locale": "en",
                          "available_locales": [
                            "en",
                            "fr"
                          ],
                          "enable_machine_translations": false,
                          "enable_participatory_space_filters": true,
                          "badges_enabled": true,
                          "rich_text_editor_in_public_views": false,
                          "comments_max_length": 1000,
                          "time_zone": "UTC",
                          "users_registration_mode": "enabled",
                          "user_groups_enabled": true,
                          "force_users_to_authenticate_before_access_organization": false,
                          "reference_prefix": "Ret.",
                          "send_welcome_notification": true,
                          "name": {
                            "en": "New Name",
                            "fr": "Nom de l'organisation"
                          },
                          "description": {
                            "en": "<p><script>alert(\"organization_description\");</script> Dignissimos placeat laboriosam. 5393</p>"
                          },
                          "extended_data": {},
                          "created_at": "2025-07-15T06:03:19Z",
                          "updated_at": "2025-07-15T06:03:20Z"
                        },
                        "meta": {
                          "locales": [
                            "en",
                            "fr"
                          ],
                          "unconfirmed_host": "new-host.com"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/organization_item_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Update Organization Payload",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/organization_attributes"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      },
      "get": {
        "summary": "Organization",
        "tags": [
          "Organizations"
        ],
        "operationId": "organization",
        "description": "Show organization",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Organization shown",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "5426",
                        "type": "organization",
                        "attributes": {
                          "host": "523.lvh.me",
                          "secondary_hosts": [],
                          "default_locale": "en",
                          "available_locales": [
                            "en",
                            "fr"
                          ],
                          "enable_machine_translations": false,
                          "enable_participatory_space_filters": true,
                          "badges_enabled": true,
                          "rich_text_editor_in_public_views": false,
                          "comments_max_length": 1000,
                          "time_zone": "UTC",
                          "users_registration_mode": "enabled",
                          "user_groups_enabled": true,
                          "force_users_to_authenticate_before_access_organization": false,
                          "reference_prefix": "IV",
                          "send_welcome_notification": true,
                          "name": {
                            "en": "O'Reilly, Durgan and Rowe",
                            "fr": "Medhurst, Smith and Cronin"
                          },
                          "description": {
                            "en": "<p><script>alert(\"organization_description\");</script> Consectetur est commodi. 39627</p>"
                          },
                          "extended_data": {},
                          "created_at": "2025-07-15T06:04:52Z",
                          "updated_at": "2025-07-15T06:04:52Z"
                        },
                        "meta": {
                          "locales": [
                            "en",
                            "fr"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/organization_item_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Organization Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/proposals": {
      "get": {
        "summary": "Proposals",
        "tags": [
          "Proposals"
        ],
        "operationId": "proposals",
        "description": "Search proposals",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "space_manifest",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "description": "Space type"
            },
            "required": false
          },
          {
            "name": "space_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Space Id"
            },
            "required": false
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "published_at",
                "rand"
              ]
            },
            "description": "Order by",
            "required": false
          },
          {
            "name": "order_direction",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "Order direction",
            "required": false
          },
          {
            "name": "filter[voted_weight_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "voted_weight IN filter",
              "description": "match one of _voted_weight_'s values in array. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight equal filter",
              "description": "_voted_weight_ is equal to. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight less than filter",
              "description": "_voted_weight_ is less than. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight greater than filter",
              "description": "_voted_weight_ is greater than. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "voted_weight present filter",
              "description": "_voted_weight_ is not null and not empty. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "voted_weight blank filter",
              "description": "_voted_weight_ is null or empty. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[state_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "state not IN filter",
              "description": "match none of _state_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[state_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "state IN filter",
              "description": "match one of _state_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[state_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_state_ starts with",
              "title": "state starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[state_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state equal filter",
              "description": "_state_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[state_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state not equal filter",
              "description": "_state_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[state_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state like filter",
              "description": "matches _state_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[state_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "state blank filter",
              "description": "_state_ is null or empty"
            },
            "required": false
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Proposal List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/proposal_index_response"
                },
                "examples": {
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "7328",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-15T06:03:26Z",
                            "updated_at": "2025-07-15T06:03:26Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> In harum ut. 6257"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Et nisi aspernatur. 6259</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3953",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13635",
                                "type": "proposal_component"
                              }
                            },
                            "state": {
                              "data": {
                                "id": "11279",
                                "type": "proposal_state"
                              },
                              "meta": {
                                "token": "accepted"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "11135",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "11135",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://87.lvh.me/public/components/13635",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3953",
                                "space_manifest": "participatory_processes",
                                "component_id": "13635",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://87.lvh.me/api/rest_full/v0.2/proposals/7328",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13635",
                                "component_manifest": "proposals",
                                "space_id": "3953",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7328",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://87.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13635",
                                "component_manifest": "proposals",
                                "space_id": "3953",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7328",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "7329",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-15T06:03:26Z",
                            "updated_at": "2025-07-15T06:03:26Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Illo dolores ut. 6267"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Quia incidunt quasi. 6269</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3953",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13635",
                                "type": "proposal_component"
                              }
                            },
                            "state": {
                              "data": {
                                "id": "11279",
                                "type": "proposal_state"
                              },
                              "meta": {
                                "token": "accepted"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "11136",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "11136",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://87.lvh.me/public/components/13635",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3953",
                                "space_manifest": "participatory_processes",
                                "component_id": "13635",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://87.lvh.me/api/rest_full/v0.2/proposals/7329",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13635",
                                "component_manifest": "proposals",
                                "space_id": "3953",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7329",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://87.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13635",
                                "component_manifest": "proposals",
                                "space_id": "3953",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7329",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        }
                      ]
                    }
                  },
                  "state_non_rejected": {
                    "value": {
                      "data": [
                        {
                          "id": "7340",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-15T06:03:28Z",
                            "updated_at": "2025-07-15T06:03:28Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Officiis libero inventore. 6535"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> In odio aperiam. 6537</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3957",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13639",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "11151",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "11151",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://91.lvh.me/public/components/13639",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://91.lvh.me/api/rest_full/v0.2/proposals/7340",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7340",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://91.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7340",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "7341",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-15T06:03:28Z",
                            "updated_at": "2025-07-15T06:03:28Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Vero sequi voluptas. 6545"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Magni rerum voluptas. 6547</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3957",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13639",
                                "type": "proposal_component"
                              }
                            },
                            "state": {
                              "data": {
                                "id": "11291",
                                "type": "proposal_state"
                              },
                              "meta": {
                                "token": "accepted"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "11152",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "11152",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://91.lvh.me/public/components/13639",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://91.lvh.me/api/rest_full/v0.2/proposals/7341",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7341",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://91.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7341",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "7343",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-15T06:03:28Z",
                            "updated_at": "2025-07-15T06:03:28Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Molestiae quia vel. 6565"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Beatae reprehenderit labore. 6567</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3957",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13639",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "11154",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "11154",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://91.lvh.me/public/components/13639",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://91.lvh.me/api/rest_full/v0.2/proposals/7343",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7343",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://91.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7343",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "7344",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-15T06:03:28Z",
                            "updated_at": "2025-07-15T06:03:28Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Delectus voluptatibus cum. 6575"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Dignissimos sint praesentium. 6577</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3957",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13639",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "11155",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "11155",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://91.lvh.me/public/components/13639",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://91.lvh.me/api/rest_full/v0.2/proposals/7344",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7344",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://91.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7344",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "7345",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-15T06:03:28Z",
                            "updated_at": "2025-07-15T06:03:28Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Minus rerum enim. 6585"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Aut exercitationem voluptatibus. 6587</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3957",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13639",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "11156",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "11156",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://91.lvh.me/public/components/13639",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://91.lvh.me/api/rest_full/v0.2/proposals/7345",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7345",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://91.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7345",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "7346",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-15T06:03:28Z",
                            "updated_at": "2025-07-15T06:03:28Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Magnam illum officia. 6595"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Voluptas quo in. 6597</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3957",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13639",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "11157",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "11157",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://91.lvh.me/public/components/13639",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://91.lvh.me/api/rest_full/v0.2/proposals/7346",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7346",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://91.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7346",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "7347",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-15T06:03:28Z",
                            "updated_at": "2025-07-15T06:03:28Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Est harum quia. 6605"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Est atque nihil. 6607</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3957",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13639",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "11158",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "11158",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://91.lvh.me/public/components/13639",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://91.lvh.me/api/rest_full/v0.2/proposals/7347",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7347",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://91.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13639",
                                "component_manifest": "proposals",
                                "space_id": "3957",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7347",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        }
                      ]
                    }
                  },
                  "state_accepted": {
                    "value": {
                      "data": [
                        {
                          "id": "7349",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-15T06:03:28Z",
                            "updated_at": "2025-07-15T06:03:28Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Minima quae facilis. 6663"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Culpa atque dolorem. 6665</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3958",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13640",
                                "type": "proposal_component"
                              }
                            },
                            "state": {
                              "data": {
                                "id": "11294",
                                "type": "proposal_state"
                              },
                              "meta": {
                                "token": "accepted"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "11161",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "11161",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://92.lvh.me/public/components/13640",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3958",
                                "space_manifest": "participatory_processes",
                                "component_id": "13640",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://92.lvh.me/api/rest_full/v0.2/proposals/7349",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13640",
                                "component_manifest": "proposals",
                                "space_id": "3958",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7349",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://92.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13640",
                                "component_manifest": "proposals",
                                "space_id": "3958",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7349",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List available Users",
        "tags": [
          "Users"
        ],
        "operationId": "users",
        "description": "List or search users of the organization",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[nickname_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "nickname not IN filter",
              "description": "match none of _nickname_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[nickname_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "nickname IN filter",
              "description": "match one of _nickname_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[nickname_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_nickname_ starts with",
              "title": "nickname starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[nickname_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "nickname equal filter",
              "description": "_nickname_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[nickname_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "nickname not equal filter",
              "description": "_nickname_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[nickname_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "nickname like filter",
              "description": "matches _nickname_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[nickname_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "nickname blank filter",
              "description": "_nickname_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "title": "id IN filter",
              "description": "match one of _id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[id_eq]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id equal filter",
              "description": "_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[id_lt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id less than filter",
              "description": "_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[id_gt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id greater than filter",
              "description": "_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id present filter",
              "description": "_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id blank filter",
              "description": "_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[extended_data_cont]",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "example": "\"foo\": \"bar\"",
            "description": "Search on user extended_data. use the format: `\"<key>\":<space>\"<value>\"`"
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "oauth"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Users listed",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "11179",
                          "type": "user",
                          "attributes": {
                            "name": "Ms. Ethan Konopelski",
                            "nickname": "or_249",
                            "personal_url": "http://harvey-stracke.test/mellie_stroman",
                            "email": "user250@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Ut consequatur et. 6863\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Ducimus totam libero. 6864\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-15T06:03:31Z",
                            "updated_at": "2025-07-15T06:03:31Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "11180",
                          "type": "user",
                          "attributes": {
                            "name": "Angle Monahan",
                            "nickname": "99cdd8gaa_250",
                            "personal_url": "http://friesen-wilkinson.example/lyda_stark",
                            "email": "user251@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Est ut quis. 6865\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Ad labore asperiores. 6866\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-15T06:03:31Z",
                            "updated_at": "2025-07-15T06:03:31Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "11181",
                          "type": "user",
                          "attributes": {
                            "name": "Bryan Dooley",
                            "nickname": "tlor91_251",
                            "personal_url": "http://block.example/celena_barrows",
                            "email": "user252@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Non voluptatem enim. 6867\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Tempore magnam qui. 6868\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-15T06:03:31Z",
                            "updated_at": "2025-07-15T06:03:31Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "11178",
                          "type": "user",
                          "attributes": {
                            "name": "Guillermo Leuschke",
                            "nickname": "fa506a2ku_248",
                            "personal_url": "http://hyatt-little.example/mickie_bergnaum",
                            "email": "user249@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Perferendis est iure. 6861\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Veniam itaque ipsam. 6862\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-15T06:03:31Z",
                            "updated_at": "2025-07-15T06:03:31Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "11182",
                          "type": "user",
                          "attributes": {
                            "name": "Wade Braun I",
                            "nickname": "3fxxscqpd_252",
                            "personal_url": "http://windler-okeefe.test/morgan_weimann",
                            "email": "user253@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Velit atque et. 6869\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Repellendus voluptas qui. 6870\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-15T06:03:31Z",
                            "updated_at": "2025-07-15T06:03:31Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "11183",
                          "type": "user",
                          "attributes": {
                            "name": "Eda McCullough",
                            "nickname": "b_253",
                            "personal_url": "http://bruen.test/natalya",
                            "email": "user254@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Veniam qui suscipit. 6871\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Omnis corrupti reiciendis. 6872\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-15T06:03:31Z",
                            "updated_at": "2025-07-15T06:03:31Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "user_fr": {
                    "value": {
                      "data": [
                        {
                          "id": "11190",
                          "type": "user",
                          "attributes": {
                            "name": "Mallory Morar",
                            "nickname": "c15sb_259",
                            "personal_url": "http://lowe-schimmel.test/christoper_hagenes",
                            "email": "user261@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Qui porro quia. 6901\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Occaecati quibusdam harum. 6902\"}}",
                            "extended_data": {},
                            "locale": "fr",
                            "created_at": "2025-07-15T06:03:32Z",
                            "updated_at": "2025-07-15T06:03:32Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "filter_by_id_in": {
                    "value": {
                      "data": [
                        {
                          "id": "11191",
                          "type": "user",
                          "attributes": {
                            "name": "Meredith Padberg",
                            "nickname": "u6hqo_260",
                            "personal_url": "http://rosenbaum-feest.test/lesley",
                            "email": "user262@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Quibusdam nulla impedit. 6911\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Sint nobis est. 6912\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-15T06:03:32Z",
                            "updated_at": "2025-07-15T06:03:32Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "11192",
                          "type": "user",
                          "attributes": {
                            "name": "Milton Roberts",
                            "nickname": "nz_261",
                            "personal_url": "http://considine.example/issac",
                            "email": "user263@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Quas incidunt et. 6913\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Consectetur et voluptatem. 6914\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-15T06:03:32Z",
                            "updated_at": "2025-07-15T06:03:32Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "11193",
                          "type": "user",
                          "attributes": {
                            "name": "Daina Strosin I",
                            "nickname": "0_262",
                            "personal_url": "http://harber.example/rob_schultz",
                            "email": "user264@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Cumque occaecati magni. 6915\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Aut eaque repudiandae. 6916\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-15T06:03:32Z",
                            "updated_at": "2025-07-15T06:03:32Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "11194",
                          "type": "user",
                          "attributes": {
                            "name": "Sen. Quincy Quigley",
                            "nickname": "hacqqdsa43_263",
                            "personal_url": "http://hilpert-zieme.test/rickie.mueller",
                            "email": "user265@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Quis tempore recusandae. 6917\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Non ea aut. 6918\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-15T06:03:32Z",
                            "updated_at": "2025-07-15T06:03:32Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "11195",
                          "type": "user",
                          "attributes": {
                            "name": "Georgia Wuckert",
                            "nickname": "gjv119ih8_264",
                            "personal_url": "http://bednar.example/lizeth_brown",
                            "email": "user266@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Necessitatibus eum iure. 6919\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Vero fugit exercitationem. 6920\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-15T06:03:32Z",
                            "updated_at": "2025-07-15T06:03:32Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "filter_by_extended_data": {
                    "value": {
                      "data": [
                        {
                          "id": "11202",
                          "type": "user",
                          "attributes": {
                            "name": "Shaquana Marvin",
                            "nickname": "specific-data",
                            "personal_url": "http://swaniawski-bruen.test/suzann",
                            "email": "user273@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Tenetur molestiae ut. 6949\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Sequi et itaque. 6950\"}}",
                            "extended_data": {
                              "key": {
                                "is": "awesome"
                              }
                            },
                            "locale": "en",
                            "created_at": "2025-07-15T06:03:33Z",
                            "updated_at": "2025-07-15T06:03:33Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "filter_by_nickname": {
                    "value": {
                      "data": [
                        {
                          "id": "11208",
                          "type": "user",
                          "attributes": {
                            "name": "Houston Stokes",
                            "nickname": "blue-panda-218",
                            "personal_url": "http://wiza.test/jung.bergnaum",
                            "email": "user279@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Vel eos iure. 6969\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Eos vero ea. 6970\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-15T06:03:33Z",
                            "updated_at": "2025-07-15T06:03:33Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "11220",
                          "type": "user",
                          "attributes": {
                            "name": "Keiko Heidenreich",
                            "nickname": "zvshe7nkjc_286",
                            "personal_url": "http://bayer.example/omar",
                            "email": "user291@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Ipsum consequuntur veritatis. 7025\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Omnis excepturi et. 7026\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-15T06:03:35Z",
                            "updated_at": "2025-07-15T06:03:35Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "11221",
                          "type": "user",
                          "attributes": {
                            "name": "Landon Pacocha Ret.",
                            "nickname": "t_287",
                            "personal_url": "http://hirthe.example/elwood",
                            "email": "user292@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Ex repellat est. 7027\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Perferendis debitis hic. 7028\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-15T06:03:35Z",
                            "updated_at": "2025-07-15T06:03:35Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user_index_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/oauth/token": {
      "post": {
        "summary": "Request a OAuth token throught ROPC",
        "tags": [
          "OAuth"
        ],
        "security": [],
        "operationId": "createToken",
        "description": "Create a oauth token for the given scopes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Token returned",
            "content": {
              "application/json": {
                "examples": {
                  "ok_ropc_impersonate": {
                    "value": {
                      "access_token": "Hk9QVCD4xWr_wTPUi21EmPupvUtbipvCAWfg88w4O0s",
                      "token_type": "Bearer",
                      "expires_in": 7200,
                      "scope": "public",
                      "created_at": 1752559430
                    }
                  },
                  "ok_ropc_login": {
                    "value": {
                      "access_token": "T_wcuN5e5iFV6X2OjO4IwlxTGpcY72m6JAaQo-YEy84",
                      "token_type": "Bearer",
                      "expires_in": 7200,
                      "scope": "public proposals",
                      "created_at": 1752559430
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "invalid_username_on_register": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "User not found. To create one, user meta.register_on_missing"
                    }
                  },
                  "user_not_found": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "User not found. To create one, user meta.register_on_missing"
                    }
                  },
                  "bad_request": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Invalid Api Client, check credentials"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/oauth_grant_param"
              }
            }
          },
          "required": true
        }
      }
    },
    "/me/magic_links": {
      "post": {
        "summary": "Create a magic-lick",
        "tags": [
          "Users"
        ],
        "operationId": "generateMagicLink",
        "description": "Generates a uniq magic link, valid for 5minutes. If the user follow this link, it will be signed in automatically\n",
        "parameters": [],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "oauth"
            ]
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "bad_blocked": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "User blocked"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "201": {
            "description": "Magick link created",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "68",
                        "type": "magic_link",
                        "attributes": {
                          "token": "QVQ3aHlLTlFGM1ExUGhxWXVTZXI=",
                          "label": "My label"
                        },
                        "links": {
                          "self": {
                            "href": "https://114.lvh.me/api/rest_full/v0.2/me/magic_links",
                            "title": "Generates a magic link",
                            "rel": "resource",
                            "meta": {
                              "action_method": "POST",
                              "action_enctype": "application/x-www-form-urlencoded"
                            }
                          },
                          "sign_in": {
                            "href": "https://114.lvh.me/api/rest_full/v0.2/me/magic_links/QVQ3aHlLTlFGM1ExUGhxWXVTZXI=",
                            "title": "Sign in with magic link",
                            "rel": "resource",
                            "meta": {
                              "action_method": "GET"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/magic_link_item_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Generate Magic Link Payload",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "redirect_url": {
                        "type": "string",
                        "description": "Redirect url after sign-in"
                      }
                    },
                    "required": [
                      "redirect_url"
                    ],
                    "description": "Optional payload to configure the magic link"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/draft_proposals/{id}": {
      "delete": {
        "summary": "Withdrawn a draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "operationId": "withdrawnDraftProposal",
        "description": "Withdrawn a draft proposal. This action cannot be undone.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Draft Id"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Draft proposal Removed",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "7362",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-07-15T06:03:43Z",
                          "updated_at": "2025-07-15T06:03:43Z",
                          "title": {},
                          "body": {},
                          "errors": {
                            "title": [],
                            "body": []
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3965",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13647",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "11233",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "11233",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://120.lvh.me/public/components/13647",
                            "title": "<script>alert(\"component_name\");</script> Sed ut architecto. 7321",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3965",
                              "space_manifest": "participatory_processes",
                              "component_id": "13647",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://120.lvh.me/api/rest_full/v0.2/proposals/7362",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13647",
                              "component_manifest": "proposals",
                              "space_id": "3965",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7362",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://120.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13647",
                              "component_manifest": "proposals",
                              "space_id": "3965",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7362",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "PtAc-WVv9a4LcbX_ChXQJEAkcSDt_rSjldHWvjA7wlQ",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/draft_proposal_item_response"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "operationId": "updateDraftProposal",
        "description": "This endpoint allows you to  update a draft proposal associated with your application ID.\nDrafts updated via this API are not visible in the Decidim front-end, and drafts created from the Decidim application are not editable through the API.\nTherefore, any draft you create here is new and tied to your application's credentials.\n\n### Example Request\n\n```http\nPUT /public/assemblies/12/2319/proposals/draft\nContent-Type: application/json\nAuthorization: Bearer YOUR_bearer_token\n\n{\n  \"title\": \"My valid title\"\n}\n```\n## Access Requirements\n\n* Authentication: This endpoint requires an impersonation token. You must create drafts on behalf of a participant; drafts cannot be created using a service token (credential_token).\n\n## Error Handling\n\n* Field Errors: Only errors related to the fields you're updating will be returned.\n* Publishable Status: To determine if the draft is publishable, check the data.meta.publishable field in the response.\n\n### Example response\n```json\n{\n  \"data\": {\n    \"id\": \"12345\",\n    \"type\": \"proposal\",\n    \"attributes\": {\n      \"title\": \"My valid title\",\n      \"body\": null\n    },\n    \"meta\": {\n      \"publishable\": false\n    }\n  }\n}\n```\nIn this example, the title is valid, so the server returns a 200 OK status.\nHowever, since the body is blank, meta.publishable is false, indicating that the draft is not yet ready for publication.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Draft Id"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Draft updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/draft_proposal_item_response"
                },
                "examples": {
                  "ok_empty": {
                    "value": {
                      "data": {
                        "id": "7373",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-07-15T06:03:56Z",
                          "updated_at": "2025-07-15T06:03:56Z",
                          "title": {},
                          "body": {},
                          "errors": {
                            "title": [
                              "Title cannot be blank"
                            ],
                            "body": [
                              "Body cannot be blank"
                            ]
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3975",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13657",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "11270",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "11270",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://147.lvh.me/public/components/13657",
                            "title": "<script>alert(\"component_name\");</script> Laborum sit accusantium. 7979",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3975",
                              "space_manifest": "participatory_processes",
                              "component_id": "13657",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://147.lvh.me/api/rest_full/v0.2/proposals/7373",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13657",
                              "component_manifest": "proposals",
                              "space_id": "3975",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7373",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://147.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13657",
                              "component_manifest": "proposals",
                              "space_id": "3975",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7373",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "ncLU5J0cdsB-nv1YPWcYU0uK-wfunIDbqOdqI2K6CRo",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  },
                  "ok": {
                    "value": {
                      "data": {
                        "id": "7374",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-07-15T06:03:57Z",
                          "updated_at": "2025-07-15T06:03:57Z",
                          "title": {
                            "fr": "This is a valid proposal title sample"
                          },
                          "body": {
                            "fr": ""
                          },
                          "errors": {
                            "title": [],
                            "body": [
                              "Body cannot be blank"
                            ]
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3976",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13658",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "11271",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "11271",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://148.lvh.me/public/components/13658",
                            "title": "<script>alert(\"component_name\");</script> Consequatur est enim. 8023",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3976",
                              "space_manifest": "participatory_processes",
                              "component_id": "13658",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://148.lvh.me/api/rest_full/v0.2/proposals/7374",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13658",
                              "component_manifest": "proposals",
                              "space_id": "3976",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7374",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://148.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13658",
                              "component_manifest": "proposals",
                              "space_id": "3976",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7374",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "QJuXKwsJnYCF1LSRFmpX8-dskRlMrYFq5W5B-VhmvFE",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Update Draft Proposal Payload",
                "properties": {
                  "data": {
                    "type": "object",
                    "title": "Update Draft Proposal Payload Data",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Title of the draft"
                      },
                      "body": {
                        "type": "string",
                        "description": "Content of the draft"
                      },
                      "locale": {
                        "type": "string",
                        "enum": [
                          "en",
                          "fr"
                        ],
                        "description": "Locale of the draft. default to user locale"
                      }
                    },
                    "description": "Payload to update in the proposal"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      },
      "get": {
        "summary": "Display a draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "operationId": "draftProposal",
        "description": "Detail a draft proposal. Raise HTTP 404 error if no draft is created for now.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Draft Id"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Draft Found",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "7740",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-07-15T06:04:49Z",
                          "updated_at": "2025-07-15T06:04:49Z",
                          "title": {},
                          "body": {},
                          "errors": {
                            "title": [],
                            "body": [
                              "Body cannot be blank"
                            ]
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "4146",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "14500",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "11677",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "11677",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://518.lvh.me/public/components/14500",
                            "title": "<script>alert(\"component_name\");</script> Consectetur quia corrupti. 39467",
                            "rel": "resource",
                            "meta": {
                              "space_id": "4146",
                              "space_manifest": "participatory_processes",
                              "component_id": "14500",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://518.lvh.me/api/rest_full/v0.2/proposals/7740",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "14500",
                              "component_manifest": "proposals",
                              "space_id": "4146",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7740",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://518.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "14500",
                              "component_manifest": "proposals",
                              "space_id": "4146",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7740",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "0pyQn6uBpF2ibiPhOqEIYvEcXoD-FDYFniy0Xidfcj8",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/draft_proposal_item_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/me/magic_links/{magic_token}": {
      "get": {
        "summary": "Use a magic-lick",
        "tags": [
          "Users"
        ],
        "operationId": "magicLinkSignin",
        "description": "Challenge given token, open and a session and redirect. Publically accessible by HTTP.\n",
        "parameters": [
          {
            "name": "magic_token",
            "in": "path",
            "schema": {
              "type": "string",
              "description": "A token received for magic link"
            },
            "required": true
          }
        ],
        "security": [],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "bad_token_expired": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Invalid Token"
                    }
                  },
                  "bad_token": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Token not found"
                    }
                  },
                  "bad_blocked": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "User blocked"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "302": {
            "description": "Signed in",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/proposal_votes": {
      "post": {
        "summary": "Vote",
        "tags": [
          "Proposals Vote"
        ],
        "operationId": "voteProposal",
        "description": "Vote on a proposal",
        "parameters": [],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Vote created",
            "content": {
              "application/json": {
                "examples": {
                  "voting_cards": {
                    "value": {
                      "data": {
                        "id": "7368",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-15T06:03:53Z",
                          "updated_at": "2025-07-15T06:03:53Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Dolores occaecati quam. 7749"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Et magnam suscipit. 7751</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3970",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13652",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "11262",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "11262",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://142.lvh.me/public/components/13652",
                            "title": "<script>alert(\"proposals\");</script> Proposals",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3970",
                              "space_manifest": "participatory_processes",
                              "component_id": "13652",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://142.lvh.me/api/rest_full/v0.2/proposals/7368",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13652",
                              "component_manifest": "proposals",
                              "space_id": "3970",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7368",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://142.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13652",
                              "component_manifest": "proposals",
                              "space_id": "3970",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7368",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "voted": {
                            "weight": 2
                          }
                        }
                      }
                    }
                  },
                  "default": {
                    "value": {
                      "data": {
                        "id": "7369",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-15T06:03:54Z",
                          "updated_at": "2025-07-15T06:03:54Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Saepe ex distinctio. 7799"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Sunt et doloremque. 7801</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3971",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13653",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "11264",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "11264",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://143.lvh.me/public/components/13653",
                            "title": "<script>alert(\"proposals\");</script> Proposals",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3971",
                              "space_manifest": "participatory_processes",
                              "component_id": "13653",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://143.lvh.me/api/rest_full/v0.2/proposals/7369",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13653",
                              "component_manifest": "proposals",
                              "space_id": "3971",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7369",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://143.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13653",
                              "component_manifest": "proposals",
                              "space_id": "3971",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7369",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "voted": {
                            "weight": 1
                          }
                        }
                      }
                    }
                  },
                  "default_with_abstention": {
                    "value": {
                      "data": {
                        "id": "7370",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-15T06:03:54Z",
                          "updated_at": "2025-07-15T06:03:54Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Nihil quibusdam consequuntur. 7847"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Iste quia ut. 7849</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3972",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13654",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "11266",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "11266",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://144.lvh.me/public/components/13654",
                            "title": "<script>alert(\"proposals\");</script> Proposals",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3972",
                              "space_manifest": "participatory_processes",
                              "component_id": "13654",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://144.lvh.me/api/rest_full/v0.2/proposals/7370",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13654",
                              "component_manifest": "proposals",
                              "space_id": "3972",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7370",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://144.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13654",
                              "component_manifest": "proposals",
                              "space_id": "3972",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7370",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "voted": {
                            "weight": 0
                          }
                        }
                      }
                    }
                  },
                  "voting_cards_with_abstention": {
                    "value": {
                      "data": {
                        "id": "7371",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-15T06:03:54Z",
                          "updated_at": "2025-07-15T06:03:54Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Aut quas possimus. 7895"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Quia optio aliquid. 7897</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3973",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13655",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "11268",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "11268",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://145.lvh.me/public/components/13655",
                            "title": "<script>alert(\"proposals\");</script> Proposals",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3973",
                              "space_manifest": "participatory_processes",
                              "component_id": "13655",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://145.lvh.me/api/rest_full/v0.2/proposals/7371",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13655",
                              "component_manifest": "proposals",
                              "space_id": "3973",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7371",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://145.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13655",
                              "component_manifest": "proposals",
                              "space_id": "3973",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7371",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "voted": {
                            "weight": 0
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_item_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Vote A Proposal Payload",
                "properties": {
                  "proposal_id": {
                    "type": "integer",
                    "description": "Proposal Id"
                  },
                  "data": {
                    "type": "object",
                    "title": "Vote A Proposal Data",
                    "properties": {
                      "weight": {
                        "type": "integer",
                        "description": "Weight for your vote"
                      }
                    },
                    "required": [
                      "weight"
                    ],
                    "description": "Payload to send your vote"
                  }
                },
                "required": [
                  "data",
                  "proposal_id"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/spaces/participatory_processes/{id}": {
      "get": {
        "summary": "Participatory Processes Details",
        "tags": [
          "Spaces"
        ],
        "operationId": "ParticipatoryProcesses",
        "description": "Get detail of a Participatory Processes given its id",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Id of the space"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Participatory Processes Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/space_item_response"
                },
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "6",
                        "type": "space",
                        "attributes": {
                          "manifest_name": "participatory_processes",
                          "participatory_space_type": "Decidim::ParticipatoryProcess",
                          "title": {
                            "en": "My participatory_process for testing purpose",
                            "fr": "c'est une concertation"
                          },
                          "subtitle": {
                            "en": "<script>alert(\"participatory_process_subtitle\");</script> Autem neque explicabo. 15229"
                          },
                          "short_description": {
                            "en": "<p><script>alert(\"participatory_process_short_description\");</script> Aspernatur velit quia. 15231</p>"
                          },
                          "description": {
                            "en": "<p><script>alert(\"participatory_process_description\");</script> Eaque commodi vel. 15233</p>"
                          },
                          "visibility": "public",
                          "created_at": "2025-07-15T06:04:08Z",
                          "updated_at": "2025-07-15T06:04:08Z"
                        },
                        "relationships": {
                          "components": {
                            "data": [],
                            "meta": {
                              "count": 0
                            },
                            "links": {
                              "self": {
                                "href": "https://230.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=6",
                                "title": "Component list for this space",
                                "rel": "resource",
                                "meta": {
                                  "space_manifest": "participatory_processes",
                                  "space_id": "6",
                                  "action_method": "GET"
                                }
                              }
                            }
                          }
                        },
                        "links": {
                          "self": {
                            "href": "https://230.lvh.me/public/participatory_processes/6",
                            "title": "My participatory_process for testing purpose",
                            "rel": "resource",
                            "meta": {
                              "space_id": "6",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          },
                          "related": {
                            "href": "https://230.lvh.me/system/organizations/5355",
                            "title": "Kemmer, Volkman and Welch",
                            "rel": "resource",
                            "meta": {
                              "action_method": "GET"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/spaces/assemblies/{id}": {
      "get": {
        "summary": "Assemblies Details",
        "tags": [
          "Spaces"
        ],
        "operationId": "Assemblies",
        "description": "Get detail of a Assemblies given its id",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Id of the space"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Assemblies Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/space_item_response"
                },
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "6",
                        "type": "space",
                        "attributes": {
                          "manifest_name": "assemblies",
                          "participatory_space_type": "Decidim::Assembly",
                          "title": {
                            "en": "My assembly for testing purpose",
                            "fr": "c'est une assemblée"
                          },
                          "subtitle": {
                            "en": "<script>alert(\"assembly_subtitle\");</script> Maiores sequi qui. 20347"
                          },
                          "short_description": {
                            "en": "<p><script>alert(\"assembly_short_description\");</script> Esse sint voluptatem. 20349</p>"
                          },
                          "description": {
                            "en": "<p><script>alert(\"assembly_description\");</script> Quidem eos eaque. 20351</p>"
                          },
                          "visibility": "public",
                          "created_at": "2025-07-15T06:04:14Z",
                          "updated_at": "2025-07-15T06:04:14Z"
                        },
                        "relationships": {
                          "components": {
                            "data": [
                              {
                                "id": "13997",
                                "type": "accountability_component"
                              },
                              {
                                "id": "14002",
                                "type": "awesome_iframe_component"
                              },
                              {
                                "id": "14001",
                                "type": "awesome_map_component"
                              },
                              {
                                "id": "14000",
                                "type": "blog_component"
                              },
                              {
                                "id": "13995",
                                "type": "budget_component"
                              },
                              {
                                "id": "13998",
                                "type": "debate_component"
                              },
                              {
                                "id": "13987",
                                "type": "meeting_component"
                              },
                              {
                                "id": "13991",
                                "type": "meeting_component"
                              },
                              {
                                "id": "13989",
                                "type": "meeting_component"
                              },
                              {
                                "id": "13994",
                                "type": "meeting_component"
                              },
                              {
                                "id": "13992",
                                "type": "page_component"
                              },
                              {
                                "id": "13990",
                                "type": "proposal_component"
                              },
                              {
                                "id": "13986",
                                "type": "proposal_component"
                              },
                              {
                                "id": "13988",
                                "type": "proposal_component"
                              },
                              {
                                "id": "13993",
                                "type": "proposal_component"
                              },
                              {
                                "id": "13999",
                                "type": "sortition_component"
                              },
                              {
                                "id": "13996",
                                "type": "survey_component"
                              }
                            ],
                            "meta": {
                              "count": 17
                            },
                            "links": {
                              "self": {
                                "href": "https://286.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=6",
                                "title": "Component list for this space",
                                "rel": "resource",
                                "meta": {
                                  "space_manifest": "assemblies",
                                  "space_id": "6",
                                  "action_method": "GET"
                                }
                              }
                            }
                          }
                        },
                        "links": {
                          "self": {
                            "href": "https://286.lvh.me/public/assemblies/6",
                            "title": "My assembly for testing purpose",
                            "rel": "resource",
                            "meta": {
                              "space_id": "6",
                              "space_manifest": "assemblies",
                              "action_method": "GET"
                            }
                          },
                          "related": {
                            "href": "https://286.lvh.me/system/organizations/5363",
                            "title": "Lebsack Group",
                            "rel": "resource",
                            "meta": {
                              "action_method": "GET"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/components/blog_components/{id}": {
      "get": {
        "summary": "Blog Component Details",
        "tags": [
          "Components"
        ],
        "operationId": "blog_component",
        "description": "Blog component details",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          },
          {
            "name": "space_manifest",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "description": "Space type"
            },
            "required": false
          },
          {
            "name": "space_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Space Id"
            },
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Blog Component",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "14084",
                        "type": "blog_component",
                        "attributes": {
                          "manifest_name": "blogs",
                          "participatory_space_type": "Decidim::ParticipatoryProcess",
                          "participatory_space_id": "4066",
                          "name": {
                            "en": "<script>alert(\"component_name\");</script> Voluptatibus pariatur autem. 24283"
                          },
                          "global_announcement": {},
                          "created_at": "2025-07-15T06:04:24Z",
                          "updated_at": "2025-07-15T06:04:24Z"
                        },
                        "relationships": {
                          "resources": {
                            "data": [],
                            "meta": {
                              "count": 0
                            }
                          }
                        },
                        "links": {
                          "self": {
                            "href": "https://333.lvh.me/components/blog_components/14084",
                            "title": "<script>alert(\"component_name\");</script> Voluptatibus pariatur autem. 24283",
                            "rel": "resource",
                            "meta": {
                              "space_id": "4066",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          },
                          "related": {
                            "href": "https://333.lvh.me/spaces/participatory_processes/4066",
                            "title": "<script>alert(\"participatory_process_title\");</script> Qui magnam tenetur. 24293",
                            "rel": "resource",
                            "meta": {
                              "space_id": "4066",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "scopes_enabled": false
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/blog_component_item_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}/extended_data": {
      "put": {
        "summary": "Update organization extended data",
        "tags": [
          "Organizations Extended Data"
        ],
        "operationId": "setOrganizationExtendedData",
        "description": "The extended_data feature allows you to update a hash with recursive merging. Use the body payload with these keys:\n\n1. `data`: The value or hash you want to update.\n2. `object_path`: The dot-style path to the key (e.g., access.this.key).\n\n**Root path**<br />\nTo update data from root of the hash, use `object_path=\".\"`.\n\nExample:\n```\n  body={\"data\": {\"name\": \"Jane\"}, \"object_path\": \"personnal\"}\n```\nThis recursively merges data into the hash without removing existing keys.\n\n**Merge some data**<br />\nInitial hash:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\"}\n  }\n```\nPatch payload:\n```json\n  {\n    \"data\": {\n      \"name\": \"Jane\"\n    },\n    \"object_path\": \"personnal\"\n  }\n```\nResult:\n```\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\", \"name\": \"Jane\"}\n  }\n```\n\n**Create new Paths**<br />\nPaths are created as needed.\nExemple:\n```json\n  body = {\"data\": {\"external_user_id\": 12}, \"object_path\": \"data-store.my-app.foo\"}\n```\nResult:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\"},\n    \"data-store\": {\"my-app\": {\"foo\": {\"external_user_id\": 12}}}\n  }\n```\nAlternatively:\n```\n  body = {\"data\": 12, \"object_path\": \"data-store.my-app.foo.external_user_id\"}\n```\n\n**Remove a key**<br />\nSet a key to null or an empty value to remove it.\n\nExample: Initial hash:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\", \"name\": \"Jane\"}\n  }\n```\nPatch:\n```json\n  body = {\"data\": {\"birthday\": \"\"}, \"object_path\": \"personnal\"}\n```\n\nResult:\n```\n{\n  \"personnal\": {\"name\": \"Jane\"}\n}\n```\n\n**Return Value**<br />\nThe update request returns the updated value at the specified path.\n\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Id of the organization"
            },
            "required": true
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Update extended data value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organization_extended_data"
                },
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "foo": "bar"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "User Extended Data Payload",
                "properties": {
                  "data": {
                    "type": "object",
                    "title": "User Extended Data Data",
                    "description": "New value for the extended data at the given path"
                  },
                  "object_path": {
                    "type": "string",
                    "description": "object path, in dot style, like foo.bar. use '.' to update the whole user data"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      },
      "get": {
        "summary": "Organization extended data",
        "tags": [
          "Organizations Extended Data"
        ],
        "operationId": "organizationData",
        "description": "Fetch organization extended data",
        "parameters": [
          {
            "name": "object_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "object path, in dot style, like foo.bar"
            }
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Id of the organization"
            },
            "required": true
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Extended Data for a given object_path given",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "personal": {
                          "birthday": "1989-01-28"
                        },
                        "birthday": "1989-01-28"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/organization_extended_data"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Resource not found",
                      "error_description": "Resource not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/spaces/search": {
      "get": {
        "summary": "Search Participatory Spaces",
        "tags": [
          "Spaces"
        ],
        "operationId": "searchSpaces",
        "description": "List or search spaces of the organization. Can be processes, assemblies, or any other registred participatory space.",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[manifest_name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "participatory_processes",
                  "assemblies"
                ]
              },
              "title": "manifest_name not IN filter",
              "description": "match none of _manifest_name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "participatory_processes",
                  "assemblies"
                ]
              },
              "title": "manifest_name IN filter",
              "description": "match one of _manifest_name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_manifest_name_ starts with",
              "title": "manifest_name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "title": "manifest_name equal filter",
              "description": "_manifest_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "title": "manifest_name not equal filter",
              "description": "_manifest_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "manifest_name like filter",
              "description": "matches _manifest_name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "manifest_name blank filter",
              "description": "_manifest_name_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "title": "id IN filter",
              "description": "match one of _id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[id_eq]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id equal filter",
              "description": "_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[id_lt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id less than filter",
              "description": "_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[id_gt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id greater than filter",
              "description": "_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id present filter",
              "description": "_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id blank filter",
              "description": "_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[title_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "title not IN filter",
              "description": "match none of _title_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[title_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "title IN filter",
              "description": "match one of _title_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[title_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_title_ starts with",
              "title": "title starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[title_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "title equal filter",
              "description": "_title_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[title_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "title not equal filter",
              "description": "_title_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[title_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "title like filter",
              "description": "matches _title_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[title_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "title blank filter",
              "description": "_title_ is null or empty"
            },
            "required": false
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Search Results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/space_index_response"
                },
                "examples": {
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "2852",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Quos reiciendis facilis. 34653"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Consequatur provident quia. 34655"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Incidunt quidem minima. 34657</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Vero aut magnam. 34659</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-15T06:04:42Z",
                            "updated_at": "2025-07-15T06:04:42Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://454.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=2852",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "2852",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://454.lvh.me/public/assemblies/2852",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2852",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://454.lvh.me/system/organizations/5411",
                              "title": "Wolff, Hansen and Huels",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "2851",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Facere perferendis quis. 34623"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Dolores id et. 34625"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Sint accusantium natus. 34627</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Itaque omnis harum. 34629</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-15T06:04:42Z",
                            "updated_at": "2025-07-15T06:04:42Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://454.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=2851",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "2851",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://454.lvh.me/public/assemblies/2851",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2851",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://454.lvh.me/system/organizations/5411",
                              "title": "Wolff, Hansen and Huels",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "2860",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Aut est aut. 36281"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Reprehenderit officiis non. 36283"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Nisi et voluptas. 36285</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Facilis consectetur et. 36287</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-15T06:04:44Z",
                            "updated_at": "2025-07-15T06:04:44Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://475.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=2860",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "2860",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://475.lvh.me/public/assemblies/2860",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2860",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://475.lvh.me/system/organizations/5414",
                              "title": "Rath Group",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "6",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "My assembly for testing purpose",
                              "fr": "c'est une assemblée"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Iste laboriosam non. 35867"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Sed architecto laudantium. 35869</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Error hic et. 35871</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-15T06:04:43Z",
                            "updated_at": "2025-07-15T06:04:43Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [
                                {
                                  "id": "14408",
                                  "type": "accountability_component"
                                },
                                {
                                  "id": "14413",
                                  "type": "awesome_iframe_component"
                                },
                                {
                                  "id": "14412",
                                  "type": "awesome_map_component"
                                },
                                {
                                  "id": "14411",
                                  "type": "blog_component"
                                },
                                {
                                  "id": "14406",
                                  "type": "budget_component"
                                },
                                {
                                  "id": "14409",
                                  "type": "debate_component"
                                },
                                {
                                  "id": "14405",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "14398",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "14400",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "14402",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "14403",
                                  "type": "page_component"
                                },
                                {
                                  "id": "14401",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "14397",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "14404",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "14399",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "14410",
                                  "type": "sortition_component"
                                },
                                {
                                  "id": "14407",
                                  "type": "survey_component"
                                }
                              ],
                              "meta": {
                                "count": 17
                              },
                              "links": {
                                "self": {
                                  "href": "https://475.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=6",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "6",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://475.lvh.me/public/assemblies/6",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "6",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://475.lvh.me/system/organizations/5414",
                              "title": "Rath Group",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "4128",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Voluptatem est mollitia. 36311"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Perferendis est molestias. 36313"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Culpa iure repudiandae. 36315</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Ipsam nesciunt iure. 36317</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-15T06:04:44Z",
                            "updated_at": "2025-07-15T06:04:44Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://475.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=4128",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "4128",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://475.lvh.me/public/participatory_processes/4128",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4128",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://475.lvh.me/system/organizations/5414",
                              "title": "Rath Group",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "4129",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Sed deserunt blanditiis. 36361"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Sunt officia corrupti. 36363"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Quibusdam non magnam. 36365</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Dolor autem sequi. 36367</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-15T06:04:44Z",
                            "updated_at": "2025-07-15T06:04:44Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://475.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=4129",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "4129",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://475.lvh.me/public/participatory_processes/4129",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4129",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://475.lvh.me/system/organizations/5414",
                              "title": "Rath Group",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "2861",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Id earum velit. 36331"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Quod dolor quam. 36333"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Rerum voluptas autem. 36335</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Dolorem numquam sit. 36337</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-15T06:04:44Z",
                            "updated_at": "2025-07-15T06:04:44Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://475.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=2861",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "2861",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://475.lvh.me/public/assemblies/2861",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2861",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://475.lvh.me/system/organizations/5414",
                              "title": "Rath Group",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "2859",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Eum libero doloribus. 36231"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Quaerat omnis aut. 36233"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Optio labore sint. 36235</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Odio architecto a. 36237</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-15T06:04:44Z",
                            "updated_at": "2025-07-15T06:04:44Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://475.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=2859",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "2859",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://475.lvh.me/public/assemblies/2859",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2859",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://475.lvh.me/system/organizations/5414",
                              "title": "Rath Group",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "4127",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Vitae doloremque dicta. 36261"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Qui quo autem. 36263"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Pariatur in corrupti. 36265</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Rerum voluptatem rerum. 36267</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-15T06:04:44Z",
                            "updated_at": "2025-07-15T06:04:44Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://475.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=4127",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "4127",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://475.lvh.me/public/participatory_processes/4127",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4127",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://475.lvh.me/system/organizations/5414",
                              "title": "Rath Group",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "filter_by_id_in": {
                    "value": {
                      "data": [
                        {
                          "id": "4130",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Delectus ratione pariatur. 36849"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Aut eos quia. 36851"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Placeat vitae eaque. 36853</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Quas voluptatem praesentium. 36855</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-15T06:04:44Z",
                            "updated_at": "2025-07-15T06:04:44Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://482.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=4130",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "4130",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://482.lvh.me/public/participatory_processes/4130",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4130",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://482.lvh.me/system/organizations/5415",
                              "title": "Swift, Steuber and Schuppe",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "4131",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Voluptas dignissimos eos. 36899"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Exercitationem expedita totam. 36901"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Ad velit libero. 36903</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Accusantium voluptas et. 36905</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-15T06:04:44Z",
                            "updated_at": "2025-07-15T06:04:44Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://482.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=4131",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "4131",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://482.lvh.me/public/participatory_processes/4131",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4131",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://482.lvh.me/system/organizations/5415",
                              "title": "Swift, Steuber and Schuppe",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "4132",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Cum beatae corporis. 36949"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Repudiandae omnis reiciendis. 36951"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Omnis minima quasi. 36953</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Optio amet perferendis. 36955</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-15T06:04:44Z",
                            "updated_at": "2025-07-15T06:04:44Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://482.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=4132",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "4132",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://482.lvh.me/public/participatory_processes/4132",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4132",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://482.lvh.me/system/organizations/5415",
                              "title": "Swift, Steuber and Schuppe",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "search_translatable_text": {
                    "value": {
                      "data": [
                        {
                          "id": "6",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "My assembly for testing purpose",
                              "fr": "c'est une assemblée"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Adipisci et laborum. 35279"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Consequuntur repellendus animi. 35281</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Molestiae omnis perspiciatis. 35283</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-15T06:04:43Z",
                            "updated_at": "2025-07-15T06:04:43Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [
                                {
                                  "id": "14391",
                                  "type": "accountability_component"
                                },
                                {
                                  "id": "14396",
                                  "type": "awesome_iframe_component"
                                },
                                {
                                  "id": "14395",
                                  "type": "awesome_map_component"
                                },
                                {
                                  "id": "14394",
                                  "type": "blog_component"
                                },
                                {
                                  "id": "14389",
                                  "type": "budget_component"
                                },
                                {
                                  "id": "14392",
                                  "type": "debate_component"
                                },
                                {
                                  "id": "14388",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "14381",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "14383",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "14385",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "14386",
                                  "type": "page_component"
                                },
                                {
                                  "id": "14384",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "14380",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "14387",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "14382",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "14393",
                                  "type": "sortition_component"
                                },
                                {
                                  "id": "14390",
                                  "type": "survey_component"
                                }
                              ],
                              "meta": {
                                "count": 17
                              },
                              "links": {
                                "self": {
                                  "href": "https://468.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=6",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "6",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://468.lvh.me/public/assemblies/6",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "6",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://468.lvh.me/system/organizations/5413",
                              "title": "Bartoletti-Ward",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "manifest_name_in_Assemblies": {
                    "value": {
                      "data": [
                        {
                          "id": "2867",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Ratione quod cumque. 37507"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Minus molestiae reiciendis. 37509"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Eum accusantium quo. 37511</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Laudantium ullam ea. 37513</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-15T06:04:45Z",
                            "updated_at": "2025-07-15T06:04:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://489.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=2867",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "2867",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://489.lvh.me/public/assemblies/2867",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2867",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://489.lvh.me/system/organizations/5416",
                              "title": "Hills LLC",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "2865",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Et aut eum. 37407"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Distinctio pariatur minima. 37409"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Sed quisquam non. 37411</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Corrupti omnis eum. 37413</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-15T06:04:45Z",
                            "updated_at": "2025-07-15T06:04:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://489.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=2865",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "2865",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://489.lvh.me/public/assemblies/2865",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2865",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://489.lvh.me/system/organizations/5416",
                              "title": "Hills LLC",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "6",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "My assembly for testing purpose",
                              "fr": "c'est une assemblée"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Aspernatur at blanditiis. 37043"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Consequuntur iusto at. 37045</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Sint dolores magnam. 37047</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-15T06:04:45Z",
                            "updated_at": "2025-07-15T06:04:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [
                                {
                                  "id": "14442",
                                  "type": "accountability_component"
                                },
                                {
                                  "id": "14447",
                                  "type": "awesome_iframe_component"
                                },
                                {
                                  "id": "14446",
                                  "type": "awesome_map_component"
                                },
                                {
                                  "id": "14445",
                                  "type": "blog_component"
                                },
                                {
                                  "id": "14440",
                                  "type": "budget_component"
                                },
                                {
                                  "id": "14443",
                                  "type": "debate_component"
                                },
                                {
                                  "id": "14439",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "14432",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "14434",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "14436",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "14437",
                                  "type": "page_component"
                                },
                                {
                                  "id": "14435",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "14431",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "14438",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "14433",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "14444",
                                  "type": "sortition_component"
                                },
                                {
                                  "id": "14441",
                                  "type": "survey_component"
                                }
                              ],
                              "meta": {
                                "count": 17
                              },
                              "links": {
                                "self": {
                                  "href": "https://489.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=6",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "6",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://489.lvh.me/public/assemblies/6",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "6",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://489.lvh.me/system/organizations/5416",
                              "title": "Hills LLC",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "2866",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Et saepe inventore. 37457"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Non officiis similique. 37459"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Illum ipsa aliquid. 37461</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Sint eum iusto. 37463</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-15T06:04:45Z",
                            "updated_at": "2025-07-15T06:04:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://489.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=2866",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "2866",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://489.lvh.me/public/assemblies/2866",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2866",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://489.lvh.me/system/organizations/5416",
                              "title": "Hills LLC",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/components/proposal_components/{id}": {
      "get": {
        "summary": "Proposal Component Details",
        "tags": [
          "Components"
        ],
        "operationId": "proposal_component",
        "description": "Find on proposal",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "title": "id IN filter",
              "description": "match one of _id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[id_eq]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id equal filter",
              "description": "_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[id_lt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id less than filter",
              "description": "_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[id_gt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id greater than filter",
              "description": "_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id present filter",
              "description": "_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id blank filter",
              "description": "_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Proposal Component",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "14512",
                        "type": "proposal_component",
                        "attributes": {
                          "manifest_name": "proposals",
                          "participatory_space_type": "Decidim::ParticipatoryProcess",
                          "participatory_space_id": "4158",
                          "name": {
                            "en": "<script>alert(\"component_name\");</script> Animi sit eius. 40309"
                          },
                          "global_announcement": {},
                          "created_at": "2025-07-15T06:04:58Z",
                          "updated_at": "2025-07-15T06:04:58Z"
                        },
                        "relationships": {
                          "resources": {
                            "data": [],
                            "meta": {
                              "count": 0
                            }
                          }
                        },
                        "links": {
                          "self": {
                            "href": "https://537.lvh.me/components/proposal_components/14512",
                            "title": "<script>alert(\"component_name\");</script> Animi sit eius. 40309",
                            "rel": "resource",
                            "meta": {
                              "space_id": "4158",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          },
                          "related": {
                            "href": "https://537.lvh.me/spaces/participatory_processes/4158",
                            "title": "<script>alert(\"participatory_process_title\");</script> Eligendi voluptas aliquid. 40283",
                            "rel": "resource",
                            "meta": {
                              "space_id": "4158",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "scopes_enabled": false,
                          "amendments_enabled": false,
                          "attachments_allowed": false,
                          "collaborative_drafts_enabled": false,
                          "comments_enabled": true,
                          "comments_max_length": 1000,
                          "default_sort_order": "default",
                          "geocoding_enabled": false,
                          "minimum_votes_per_user": 0,
                          "official_proposals_enabled": true,
                          "participatory_texts_enabled": false,
                          "proposal_edit_before_minutes": 5,
                          "proposal_edit_time": "limited",
                          "proposal_limit": 0,
                          "resources_permissions_enabled": true,
                          "threshold_per_proposal": 0,
                          "vote_limit": 0,
                          "endorsements_enabled": true,
                          "votes_enabled": false,
                          "creation_enabled": false,
                          "proposal_answering_enabled": true,
                          "amendment_creation_enabled": true,
                          "amendment_reaction_enabled": true,
                          "amendment_promotion_enabled": true,
                          "can_create_proposals": false,
                          "can_vote": false,
                          "can_endorse": true,
                          "can_comment": true
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_component_item_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/oauth/introspect": {
      "post": {
        "summary": "Introspect a OAuth token",
        "tags": [
          "OAuth"
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          },
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "operationId": "introspectToken",
        "description": "Get given oauth token details",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User details returned",
            "content": {
              "application/json": {
                "examples": {
                  "bearer_ropc": {
                    "value": {
                      "active": true,
                      "scope": "public",
                      "client_id": "cUe2oBx3zfOoQspp0_IFKhKqC0Y-yPe06gw-GR-kSZ4",
                      "token_type": "Bearer",
                      "exp": 3507797398,
                      "iat": 1752559499,
                      "sub": 5125,
                      "aud": "https://539.lvh.me",
                      "resource": {
                        "id": "11689",
                        "type": "user",
                        "attributes": {
                          "email": "user757@example.org",
                          "name": "Caryl Dietrich",
                          "created_at": "2025-07-15T06:04:59Z",
                          "updated_at": "2025-07-15T06:04:59Z",
                          "personal_url": "http://fisher.test/glennis_kihn",
                          "locale": "en"
                        },
                        "relationships": {},
                        "meta": {
                          "blocked": false,
                          "locked": false
                        }
                      }
                    }
                  },
                  "bearer_client_credential": {
                    "value": {
                      "active": true,
                      "scope": "public",
                      "client_id": "E6IAjeAfAQunD55FJA7tz-IGhjq2OxFsbDH8Qp_f3Dw",
                      "token_type": "Bearer",
                      "exp": 3507797400,
                      "iat": 1752559500,
                      "sub": 5128,
                      "aud": "https://540.lvh.me"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/introspect_data"
                }
              }
            }
          },
          "401": {
            "description": "When the token is invalid",
            "content": {
              "application/json": {
                "examples": {
                  "expired_token": {
                    "value": {
                      "error": "invalid_token",
                      "error_description": "The access token expired",
                      "state": "unauthorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/me/extended_data": {
      "get": {
        "summary": "Get user extended data",
        "tags": [
          "Users"
        ],
        "operationId": "userData",
        "description": "Fetch user extended data",
        "parameters": [
          {
            "name": "object_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "object path, in dot style, like foo.bar"
            }
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "oauth"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Extended Data for a given object_path given",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "personal": {
                          "birthday": "1989-01-28"
                        },
                        "birthday": "1989-01-28"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user_extended_data"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Resource not found",
                      "error_description": "Resource not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user extended data",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "oauth"
            ]
          }
        ],
        "operationId": "setUserData",
        "description": "The extended_data feature allows you to update a hash with recursive merging. Use the body payload with these keys:\n\n1. `data`: The value or hash you want to update.\n2. `object_path`: The dot-style path to the key (e.g., access.this.key).\n\n**Root path**<br />\nTo update data from root of the hash, use `object_path=\".\"`.\n\nExample:\n```\n  body={\"data\": {\"name\": \"Jane\"}, \"object_path\": \"personnal\"}\n```\nThis recursively merges data into the hash without removing existing keys.\n\n**Merge some data**<br />\nInitial hash:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\"}\n  }\n```\nPatch payload:\n```json\n  {\n    \"data\": {\n      \"name\": \"Jane\"\n    },\n    \"object_path\": \"personnal\"\n  }\n```\nResult:\n```\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\", \"name\": \"Jane\"}\n  }\n```\n\n**Create new Paths**<br />\nPaths are created as needed.\nExemple:\n```json\n  body = {\"data\": {\"external_user_id\": 12}, \"object_path\": \"data-store.my-app.foo\"}\n```\nResult:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\"},\n    \"data-store\": {\"my-app\": {\"foo\": {\"external_user_id\": 12}}}\n  }\n```\nAlternatively:\n```\n  body = {\"data\": 12, \"object_path\": \"data-store.my-app.foo.external_user_id\"}\n```\n\n**Remove a key**<br />\nSet a key to null or an empty value to remove it.\n\nExample: Initial hash:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\", \"name\": \"Jane\"}\n  }\n```\nPatch:\n```json\n  body = {\"data\": {\"birthday\": \"\"}, \"object_path\": \"personnal\"}\n```\n\nResult:\n```\n{\n  \"personnal\": {\"name\": \"Jane\"}\n}\n```\n\n**Return Value**<br />\nThe update request returns the updated value at the specified path.\n\n",
        "parameters": [],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Update extended data value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_extended_data"
                },
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "foo": "bar"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "User Extended Data Payload",
                "properties": {
                  "data": {
                    "type": "object",
                    "title": "User Extended Data Data",
                    "description": "New value for the extended data at the given path"
                  },
                  "object_path": {
                    "type": "string",
                    "description": "object path, in dot style, like foo.bar. use '.' to update the whole user data"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/draft_proposals/{id}/publish": {
      "post": {
        "summary": "Publish a draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "operationId": "publishDraftProposal",
        "description": "Publish a draft proposal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Draft Id"
            },
            "required": true
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Body cannot be blank"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Draft Proposal published",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "7748",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-15T06:05:06Z",
                          "updated_at": "2025-07-15T06:05:06Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Voluptatibus suscipit laboriosam. 40703"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Ea rem hic. 40705</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "4164",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "14518",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "11706",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "11706",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://553.lvh.me/public/components/14518",
                            "title": "<script>alert(\"component_name\");</script> Et mollitia eaque. 40697",
                            "rel": "resource",
                            "meta": {
                              "space_id": "4164",
                              "space_manifest": "participatory_processes",
                              "component_id": "14518",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://553.lvh.me/api/rest_full/v0.2/proposals/7748",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "14518",
                              "component_manifest": "proposals",
                              "space_id": "4164",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7748",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://553.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "14518",
                              "component_manifest": "proposals",
                              "space_id": "4164",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7748",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "client_id": 5217
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_item_response"
                }
              }
            }
          }
        }
      }
    },
    "/components/search": {
      "get": {
        "summary": "Search components",
        "tags": [
          "Components"
        ],
        "operationId": "searchComponents",
        "description": "List or search components of the organization",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/component_manifest"
              },
              "title": "manifest_name not IN filter",
              "description": "match none of _manifest_name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/component_manifest"
              },
              "title": "manifest_name IN filter",
              "description": "match one of _manifest_name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_manifest_name_ starts with",
              "title": "manifest_name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_eq]",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/component_manifest",
              "title": "manifest_name equal filter",
              "description": "_manifest_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_eq]",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/component_manifest",
              "title": "manifest_name not equal filter",
              "description": "_manifest_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "manifest_name like filter",
              "description": "matches _manifest_name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "manifest_name blank filter",
              "description": "_manifest_name_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "title": "id IN filter",
              "description": "match one of _id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[id_eq]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id equal filter",
              "description": "_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[id_lt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id less than filter",
              "description": "_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[id_gt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id greater than filter",
              "description": "_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id present filter",
              "description": "_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id blank filter",
              "description": "_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "participatory_space_id IN filter",
              "description": "match one of _participatory_space_id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id equal filter",
              "description": "_participatory_space_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id less than filter",
              "description": "_participatory_space_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id greater than filter",
              "description": "_participatory_space_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id present filter",
              "description": "_participatory_space_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id blank filter",
              "description": "_participatory_space_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/space_type"
              },
              "title": "participatory_space_type not IN filter",
              "description": "match none of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/space_type"
              },
              "title": "participatory_space_type IN filter",
              "description": "match one of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_participatory_space_type_ starts with",
              "title": "participatory_space_type starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_eq]",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/space_type",
              "title": "participatory_space_type equal filter",
              "description": "_participatory_space_type_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_eq]",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/space_type",
              "title": "participatory_space_type not equal filter",
              "description": "_participatory_space_type_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_type like filter",
              "description": "matches _participatory_space_type_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_type blank filter",
              "description": "_participatory_space_type_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name not IN filter",
              "description": "match none of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name IN filter",
              "description": "match one of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_name_ starts with",
              "title": "name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name equal filter",
              "description": "_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name not equal filter",
              "description": "_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name like filter",
              "description": "matches _name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "name blank filter",
              "description": "_name_ is null or empty"
            },
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "List of components",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "14609",
                          "type": "meeting_component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "4180",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Nesciunt reprehenderit molestias. 43741"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:05:18Z",
                            "updated_at": "2025-07-15T06:05:18Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://604.lvh.me/components/meeting_components/14609",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4180",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://604.lvh.me/spaces/participatory_processes/4180",
                              "title": "<script>alert(\"participatory_process_title\");</script> Aspernatur eveniet consequatur. 43715",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4180",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "default_registration_terms": false,
                            "comments_enabled": false,
                            "comments_max_length": false,
                            "registration_code_enabled": false,
                            "creation_enabled_for_participants": false
                          }
                        },
                        {
                          "id": "14610",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "4180",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Magnam quo hic. 43827"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:05:18Z",
                            "updated_at": "2025-07-15T06:05:18Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "7778",
                                  "type": "proposal"
                                },
                                {
                                  "id": "7779",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://604.lvh.me/components/proposal_components/14610",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4180",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://604.lvh.me/spaces/participatory_processes/4180",
                              "title": "<script>alert(\"participatory_process_title\");</script> Aspernatur eveniet consequatur. 43715",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4180",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "14611",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "4180",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:05:18Z",
                            "updated_at": "2025-07-15T06:05:18Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://604.lvh.me/components/proposal_components/14611",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4180",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://604.lvh.me/spaces/participatory_processes/4180",
                              "title": "<script>alert(\"participatory_process_title\");</script> Aspernatur eveniet consequatur. 43715",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4180",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        },
                        {
                          "id": "14612",
                          "type": "accountability_component",
                          "attributes": {
                            "manifest_name": "accountability",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "4180",
                            "name": {
                              "en": "<script>alert(\"accountability\");</script> Accountability",
                              "fr": "<script>alert(\"accountability\");</script> Suivi"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:05:18Z",
                            "updated_at": "2025-07-15T06:05:18Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "643",
                                  "type": "result"
                                },
                                {
                                  "id": "644",
                                  "type": "result"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://604.lvh.me/components/accountability_components/14612",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4180",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://604.lvh.me/spaces/participatory_processes/4180",
                              "title": "<script>alert(\"participatory_process_title\");</script> Aspernatur eveniet consequatur. 43715",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4180",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "manifest_name_in_Meetings": {
                    "value": {
                      "data": [
                        {
                          "id": "14662",
                          "type": "meeting_component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "4185",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Voluptas error possimus. 44899"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:05:20Z",
                            "updated_at": "2025-07-15T06:05:20Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://619.lvh.me/components/meeting_components/14662",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4185",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://619.lvh.me/spaces/participatory_processes/4185",
                              "title": "<script>alert(\"participatory_process_title\");</script> Quia illo voluptatem. 44873",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4185",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "default_registration_terms": false,
                            "comments_enabled": false,
                            "comments_max_length": false,
                            "registration_code_enabled": false,
                            "creation_enabled_for_participants": false
                          }
                        }
                      ]
                    }
                  },
                  "filter_byId": {
                    "value": {
                      "data": [
                        {
                          "id": "14601",
                          "type": "meeting_component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "4178",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Cumque maxime ut. 43357"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:05:17Z",
                            "updated_at": "2025-07-15T06:05:17Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://598.lvh.me/components/meeting_components/14601",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4178",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://598.lvh.me/spaces/participatory_processes/4178",
                              "title": "<script>alert(\"participatory_process_title\");</script> Vel molestiae quis. 43331",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4178",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "default_registration_terms": false,
                            "comments_enabled": false,
                            "comments_max_length": false,
                            "registration_code_enabled": false,
                            "creation_enabled_for_participants": false
                          }
                        },
                        {
                          "id": "14604",
                          "type": "accountability_component",
                          "attributes": {
                            "manifest_name": "accountability",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "4178",
                            "name": {
                              "en": "<script>alert(\"accountability\");</script> Accountability",
                              "fr": "<script>alert(\"accountability\");</script> Suivi"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:05:17Z",
                            "updated_at": "2025-07-15T06:05:17Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "639",
                                  "type": "result"
                                },
                                {
                                  "id": "640",
                                  "type": "result"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://598.lvh.me/components/accountability_components/14604",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4178",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://598.lvh.me/spaces/participatory_processes/4178",
                              "title": "<script>alert(\"participatory_process_title\");</script> Vel molestiae quis. 43331",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4178",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "components_in_Process": {
                    "value": {
                      "data": [
                        {
                          "id": "14605",
                          "type": "meeting_component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "4179",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Laborum fugit molestias. 43549"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:05:17Z",
                            "updated_at": "2025-07-15T06:05:17Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://601.lvh.me/components/meeting_components/14605",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4179",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://601.lvh.me/spaces/participatory_processes/4179",
                              "title": "<script>alert(\"participatory_process_title\");</script> Expedita iste quo. 43523",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4179",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "default_registration_terms": false,
                            "comments_enabled": false,
                            "comments_max_length": false,
                            "registration_code_enabled": false,
                            "creation_enabled_for_participants": false
                          }
                        },
                        {
                          "id": "14606",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "4179",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Rerum eius deleniti. 43635"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:05:17Z",
                            "updated_at": "2025-07-15T06:05:17Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "7776",
                                  "type": "proposal"
                                },
                                {
                                  "id": "7777",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://601.lvh.me/components/proposal_components/14606",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4179",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://601.lvh.me/spaces/participatory_processes/4179",
                              "title": "<script>alert(\"participatory_process_title\");</script> Expedita iste quo. 43523",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4179",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "14607",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "4179",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:05:17Z",
                            "updated_at": "2025-07-15T06:05:17Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://601.lvh.me/components/proposal_components/14607",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4179",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://601.lvh.me/spaces/participatory_processes/4179",
                              "title": "<script>alert(\"participatory_process_title\");</script> Expedita iste quo. 43523",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4179",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        },
                        {
                          "id": "14608",
                          "type": "accountability_component",
                          "attributes": {
                            "manifest_name": "accountability",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "4179",
                            "name": {
                              "en": "<script>alert(\"accountability\");</script> Accountability",
                              "fr": "<script>alert(\"accountability\");</script> Suivi"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:05:17Z",
                            "updated_at": "2025-07-15T06:05:18Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "642",
                                  "type": "result"
                                },
                                {
                                  "id": "641",
                                  "type": "result"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://601.lvh.me/components/accountability_components/14608",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4179",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://601.lvh.me/spaces/participatory_processes/4179",
                              "title": "<script>alert(\"participatory_process_title\");</script> Expedita iste quo. 43523",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4179",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "14632",
                          "type": "sortition_component",
                          "attributes": {
                            "manifest_name": "sortitions",
                            "participatory_space_type": "Decidim::Assembly",
                            "participatory_space_id": "2903",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Amet odio quos. 44317"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:05:19Z",
                            "updated_at": "2025-07-15T06:05:19Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://610.lvh.me/components/sortition_components/14632",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2903",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://610.lvh.me/spaces/assemblies/2903",
                              "title": "<script>alert(\"assembly_title\");</script> Doloremque voluptate atque. 44135",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2903",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        },
                        {
                          "id": "14633",
                          "type": "debate_component",
                          "attributes": {
                            "manifest_name": "debates",
                            "participatory_space_type": "Decidim::Assembly",
                            "participatory_space_id": "2903",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Quasi repellat consequuntur. 44323"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-15T06:05:19Z",
                            "updated_at": "2025-07-15T06:05:19Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://610.lvh.me/components/debate_components/14633",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2903",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://610.lvh.me/spaces/assemblies/2903",
                              "title": "<script>alert(\"assembly_title\");</script> Doloremque voluptate atque. 44135",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2903",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/component_index_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/metrics/health": {
      "get": {
        "summary": "Health",
        "tags": [
          "Metrics"
        ],
        "operationId": "health-metrics",
        "description": "Health metrics",
        "security": [],
        "responses": {
          "200": {
            "description": "Healthy services",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "message": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/health"
                }
              }
            }
          },
          "503": {
            "description": "Unhealthy services",
            "content": {
              "application/json": {
                "examples": {
                  "error_public_assets": {
                    "value": {
                      "message": "ERROR"
                    }
                  },
                  "error_db": {
                    "value": {
                      "message": "ERROR"
                    }
                  },
                  "error_cache": {
                    "value": {
                      "message": "ERROR"
                    }
                  },
                  "error_referer": {
                    "value": {
                      "message": "ERROR"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/health"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/blogs": {
      "get": {
        "summary": "Blog Post Lists",
        "tags": [
          "Blogs"
        ],
        "operationId": "blogs",
        "description": "Get blog post list",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "space_manifest",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "description": "Space type"
            },
            "required": false
          },
          {
            "name": "space_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Space Id"
            },
            "required": false
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Order by",
            "required": false
          },
          {
            "name": "order_direction",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "Order direction",
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "blogs"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Blogs Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blog_index_response"
                },
                "examples": {
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "1945",
                          "type": "blog",
                          "attributes": {
                            "created_at": "2025-07-15T06:05:39Z",
                            "updated_at": "2025-07-15T06:05:39Z",
                            "title": {
                              "en": "<script>alert(\"blog_title\");</script> Vel distinctio fuga. 46829"
                            },
                            "body": {
                              "en": "<p><script>alert(\"blog_body\");</script> Est natus deleniti. 46831</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "4202",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "14694",
                                "type": "blog_component"
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://666.lvh.me/public/components/14694",
                              "title": "<script>alert(\"component_name\");</script> Fuga quo iusto. 46789",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4202",
                                "space_manifest": "participatory_processes",
                                "component_id": "14694",
                                "component_manifest": "blogs",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://666.lvh.me/api/rest_full/v0.2/blogs/1945",
                              "title": "Blogs Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "14694",
                                "component_manifest": "blogs",
                                "space_id": "4202",
                                "space_manifest": "participatory_processes",
                                "resource_id": "1945",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://666.lvh.me/api/rest_full/v0.2/blogs",
                              "title": "Blogs List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "14694",
                                "component_manifest": "blogs",
                                "space_id": "4202",
                                "space_manifest": "participatory_processes",
                                "resource_id": "1945",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "1944",
                          "type": "blog",
                          "attributes": {
                            "created_at": "2025-07-15T06:05:39Z",
                            "updated_at": "2025-07-15T06:05:39Z",
                            "title": {
                              "en": "<script>alert(\"blog_title\");</script> Praesentium et consectetur. 46823"
                            },
                            "body": {
                              "en": "<p><script>alert(\"blog_body\");</script> Voluptatibus neque dolorum. 46825</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "4202",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "14694",
                                "type": "blog_component"
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://666.lvh.me/public/components/14694",
                              "title": "<script>alert(\"component_name\");</script> Fuga quo iusto. 46789",
                              "rel": "resource",
                              "meta": {
                                "space_id": "4202",
                                "space_manifest": "participatory_processes",
                                "component_id": "14694",
                                "component_manifest": "blogs",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://666.lvh.me/api/rest_full/v0.2/blogs/1944",
                              "title": "Blogs Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "14694",
                                "component_manifest": "blogs",
                                "space_id": "4202",
                                "space_manifest": "participatory_processes",
                                "resource_id": "1944",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://666.lvh.me/api/rest_full/v0.2/blogs",
                              "title": "Blogs List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "14694",
                                "component_manifest": "blogs",
                                "space_id": "4202",
                                "space_manifest": "participatory_processes",
                                "resource_id": "1944",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/draft_proposals": {
      "post": {
        "summary": "Create draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "operationId": "createDraftProposal",
        "description": "Create a draft\n",
        "parameters": [],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Draft updated",
            "content": {
              "application/json": {
                "examples": {
                  "ok_empty": {
                    "value": {
                      "data": {
                        "id": "7802",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-07-15T06:05:44Z",
                          "updated_at": "2025-07-15T06:05:44Z",
                          "title": {},
                          "body": {},
                          "errors": {
                            "title": [
                              "Title cannot be blank"
                            ],
                            "body": [
                              "Body cannot be blank"
                            ]
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "4211",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "14703",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "11864",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "11864",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://675.lvh.me/public/components/14703",
                            "title": "<script>alert(\"component_name\");</script> Molestiae sed et. 47349",
                            "rel": "resource",
                            "meta": {
                              "space_id": "4211",
                              "space_manifest": "participatory_processes",
                              "component_id": "14703",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://675.lvh.me/api/rest_full/v0.2/proposals/7802",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "14703",
                              "component_manifest": "proposals",
                              "space_id": "4211",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7802",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://675.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "14703",
                              "component_manifest": "proposals",
                              "space_id": "4211",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7802",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "Pmi5Deaw54nFbZQKvR6dI8gXt6M9G5FIQ6WpxdeHm98",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/draft_proposal_item_response"
                }
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Create Draft Proposal Payload",
                "properties": {
                  "data": {
                    "type": "object",
                    "title": "Draft Proposal Data",
                    "properties": {
                      "component_id": {
                        "type": "integer",
                        "description": "Component ID"
                      }
                    },
                    "required": [
                      "component_id"
                    ],
                    "description": "Payload to update in the proposal"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/blogs/{id}": {
      "get": {
        "summary": "Show a blog detail",
        "tags": [
          "Blogs"
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "blogs"
            ]
          }
        ],
        "operationId": "blog",
        "description": "Get blog post details",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Blog Post Id"
            },
            "required": true
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Blog Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Blog Found",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "2013",
                        "type": "blog",
                        "attributes": {
                          "created_at": "2025-07-15T06:05:53Z",
                          "updated_at": "2025-07-15T06:05:53Z",
                          "title": {
                            "en": "<script>alert(\"blog_title\");</script> Dolore animi voluptatem. 48303"
                          },
                          "body": {
                            "en": "<p><script>alert(\"blog_body\");</script> Laudantium et qui. 48305</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "4231",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "14723",
                              "type": "blog_component"
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://695.lvh.me/public/components/14723",
                            "title": "<script>alert(\"component_name\");</script> Soluta tempore sed. 48277",
                            "rel": "resource",
                            "meta": {
                              "space_id": "4231",
                              "space_manifest": "participatory_processes",
                              "component_id": "14723",
                              "component_manifest": "blogs",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://695.lvh.me/api/rest_full/v0.2/blogs/2013",
                            "title": "Blogs Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "14723",
                              "component_manifest": "blogs",
                              "space_id": "4231",
                              "space_manifest": "participatory_processes",
                              "resource_id": "2013",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://695.lvh.me/api/rest_full/v0.2/blogs",
                            "title": "Blogs List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "14723",
                              "component_manifest": "blogs",
                              "space_id": "4231",
                              "space_manifest": "participatory_processes",
                              "resource_id": "2013",
                              "action_method": "GET"
                            }
                          },
                          "next": {
                            "href": "https://695.lvh.me/api/rest_full/v0.2/blogs/2012",
                            "title": "Next Blog Post",
                            "rel": "resource",
                            "meta": {
                              "component_id": "14723",
                              "component_manifest": "blogs",
                              "space_id": "4231",
                              "space_manifest": "participatory_processes",
                              "resource_id": "2012",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://693.lvh.me/api/rest_full/v0.2/blogs/2005",
                            "title": "Previous Blog Post",
                            "rel": "resource",
                            "meta": {
                              "component_id": "14721",
                              "component_manifest": "blogs",
                              "space_id": "4229",
                              "space_manifest": "participatory_processes",
                              "resource_id": "2005",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  },
                  "ok_no_more": {
                    "value": {
                      "data": {
                        "id": "2006",
                        "type": "blog",
                        "attributes": {
                          "created_at": "2025-07-15T06:05:52Z",
                          "updated_at": "2025-07-15T06:05:52Z",
                          "title": {
                            "en": "<script>alert(\"blog_title\");</script> Molestias sint autem. 48227"
                          },
                          "body": {
                            "en": "<p><script>alert(\"blog_body\");</script> In non eos. 48229</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "4230",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "14722",
                              "type": "blog_component"
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://694.lvh.me/public/components/14722",
                            "title": "<script>alert(\"component_name\");</script> Velit voluptates consectetur. 48219",
                            "rel": "resource",
                            "meta": {
                              "space_id": "4230",
                              "space_manifest": "participatory_processes",
                              "component_id": "14722",
                              "component_manifest": "blogs",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://694.lvh.me/api/rest_full/v0.2/blogs/2006",
                            "title": "Blogs Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "14722",
                              "component_manifest": "blogs",
                              "space_id": "4230",
                              "space_manifest": "participatory_processes",
                              "resource_id": "2006",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://694.lvh.me/api/rest_full/v0.2/blogs",
                            "title": "Blogs List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "14722",
                              "component_manifest": "blogs",
                              "space_id": "4230",
                              "space_manifest": "participatory_processes",
                              "resource_id": "2006",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://694.lvh.me/api/rest_full/v0.2/blogs/2007",
                            "title": "Previous Blog Post",
                            "rel": "resource",
                            "meta": {
                              "component_id": "14722",
                              "component_manifest": "blogs",
                              "space_id": "4230",
                              "space_manifest": "participatory_processes",
                              "resource_id": "2007",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/blog_item_response"
                }
              }
            }
          }
        }
      }
    }
  }
}