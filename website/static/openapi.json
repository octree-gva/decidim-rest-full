{
  "openapi": "3.0.1",
  "info": {
    "title": "API V1",
    "version": "v0.2",
    "description": "A RestFull API for Decidim, to be able to CRUD resources from Decidim.\n\n## Authentication\n[Get a token](https://octree-gva.github.io/decidim-rest-full/category/authentication) from our `/oauth/token` routes,\nfollowing OAuth specs on Credential Flows or Resource Owner Password Credentials Flow.\n\n### Permissions\nA permission system is attached to the created OAuth application, that is designed in two levels:\n\n- **scope**: a broad permission to access a collection of endpoints\n- **abilities**: a fine grained permission system that allow actions.\n\nThe scopes and abilities are manageable in your System Admin Panel.\n\n### Multi-tenant\nDecidim is multi-tenant, and this API supports it.\n- The **`system` scope** endpoints are available in any tenant\n- The tenant `host` attribute will be used to guess which tenant you are requesting.\n  For example, given a tenant `example.org` and `foobar.org`, the endpoint\n  * `example.org/oauth/token` will ask a token for the example.org organization\n  * `foobar.org/oauth/token` for foobar.org.\n"
  },
  "servers": [
    {
      "url": "https://{defaultHost}/api/rest_full/v0.2",
      "variables": {
        "defaultHost": {
          "default": "www.example.com"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "OAuth",
      "description": "Use OAuth to get tokens and interact with the API. You can use machine-to-machine tokens, or user token directly with the API.\n* **Machine-to-machine**: Client Credential Flow\n* **User**: Resource Owner Password Credential Flow, with **impersonation** or **login**",
      "externalDocs": {
        "description": "How to authenticate",
        "url": "https://octree-gva.github.io/decidim-rest-full/category/authentication"
      }
    },
    {
      "name": "Organizations",
      "description": "Organization controls the main configuration of the platform. \nAs you can host many Decidim in the same platform, organizations allows you to setup: \n\n- host: the domain name used by your decidim\n- secondary_hosts: other domain names, used for redirecting to the correct organizati\n\nThe current organization is guessed from the host of the request, you can thus query the API\non different hosts to gather organization's related data.\n"
    },
    {
      "name": "Organizations Extended Data",
      "description": "Metadata management for organizations.\n"
    },
    {
      "name": "Spaces",
      "description": "Search and vizualize spaces (eg. Assemblies, Participatory Processes)"
    },
    {
      "name": "Components",
      "description": "Search and vizualize components"
    },
    {
      "name": "Users",
      "description": "Get information about participants, and manage own data."
    },
    {
      "name": "Blogs",
      "description": "Get informations about blog posts"
    },
    {
      "name": "Proposals",
      "description": "Manipulate proposals and drafts"
    },
    {
      "name": "Metrics",
      "description": "Metrics of the organization"
    }
  ],
  "components": {
    "securitySchemes": {
      "credentialFlowBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Authorization via service-to-service credentials flow.\nUse this for machine clients.\n[Learn more here](https://octree-gva.github.io/decidim-rest-full/user_documentation/auth/client-credential-flow)\n"
      },
      "resourceOwnerFlowBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Authorization via resource owner flow.\nUse this for user-based authentication\n[Learn more here](https://octree-gva.github.io/decidim-rest-full/user_documentation/auth/user-credentials-flow)\n"
      }
    },
    "schemas": {
      "get_action_link": {
        "title": "GET Action URL",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Action Name"
          },
          "href": {
            "type": "string",
            "description": "Full URL"
          },
          "describedby": {
            "type": "string",
            "description": "JSONSchema URL describing the request"
          },
          "hreflang": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Available locales"
          },
          "rel": {
            "type": "string",
            "enum": [
              "action"
            ]
          },
          "meta": {
            "title": "Meta for read request",
            "type": "object",
            "properties": {
              "component_id": {
                "type": "string",
                "description": "Component ID"
              },
              "component_manifest": {
                "type": "string",
                "description": "Component manifest"
              },
              "space_id": {
                "type": "string",
                "description": "Space ID"
              },
              "space_manifest": {
                "type": "string",
                "description": "Space Manifest"
              },
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "action_method": {
                "type": "string",
                "enum": [
                  "GET"
                ],
                "description": "Action HTTP method"
              }
            },
            "required": [
              "action_method"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "href",
          "title",
          "meta",
          "rel"
        ]
      },
      "post_action_link": {
        "title": "POST/DELETE/PUT Action URL",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Action Name"
          },
          "href": {
            "type": "string",
            "description": "Full URL"
          },
          "describedby": {
            "type": "string",
            "description": "JSONSchema URL describing the request"
          },
          "hreflang": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Available locales"
          },
          "rel": {
            "type": "string",
            "enum": [
              "action"
            ]
          },
          "meta": {
            "title": "Meta for write request",
            "type": "object",
            "properties": {
              "component_id": {
                "type": "string",
                "description": "Component ID"
              },
              "component_manifest": {
                "type": "string",
                "description": "Component manifest"
              },
              "space_id": {
                "type": "string",
                "description": "Space ID"
              },
              "space_manifest": {
                "type": "string",
                "description": "Space Manifest"
              },
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "action_method": {
                "type": "string",
                "enum": [
                  "POST",
                  "DELETE",
                  "PUT"
                ],
                "description": "Action HTTP method"
              },
              "action_enctype": {
                "type": "string",
                "enum": [
                  "application/x-www-form-urlencoded",
                  "multipart/form-data"
                ],
                "description": "Encoding of the payload"
              },
              "action_target": {
                "type": "string",
                "description": "URL to goes after submitting a valid request"
              }
            },
            "required": [
              "action_method",
              "action_enctype"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "href",
          "title",
          "meta",
          "rel"
        ]
      },
      "resource_link": {
        "title": "Resource URL",
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "Full URL"
          },
          "title": {
            "type": "string",
            "description": "Page Title"
          },
          "hreflang": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Available locales"
          },
          "describedby": {
            "type": "string",
            "description": "JSONSchema URL describing the request"
          },
          "rel": {
            "type": "string",
            "enum": [
              "public_page",
              "resource"
            ]
          },
          "meta": {
            "type": "object",
            "title": "Resource URL Metadata",
            "properties": {
              "component_id": {
                "type": "string",
                "description": "Component ID"
              },
              "component_manifest": {
                "type": "string",
                "description": "Component manifest"
              },
              "space_id": {
                "type": "string",
                "description": "Space ID"
              },
              "space_manifest": {
                "type": "string",
                "description": "Space Manifest"
              },
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              }
            }
          }
        },
        "required": [
          "href",
          "title",
          "meta",
          "rel"
        ],
        "additionalProperties": false
      },
      "translated_prop": {
        "type": "object",
        "title": "Translated data",
        "description": "Hash with translated data, key=locale value=translation",
        "properties": {
          "en": {
            "type": "string",
            "description": "Translation in en"
          },
          "fr": {
            "type": "string",
            "description": "Translation in fr"
          }
        },
        "additionalProperties": false
      },
      "time_zone": {
        "type": "string",
        "title": "Time Zone",
        "description": "Time Zone identifier",
        "enum": [
          "Africa/Algiers",
          "Africa/Cairo",
          "Africa/Casablanca",
          "Africa/Harare",
          "Africa/Johannesburg",
          "Africa/Monrovia",
          "Africa/Nairobi",
          "America/Argentina/Buenos_Aires",
          "America/Bogota",
          "America/Caracas",
          "America/Chicago",
          "America/Chihuahua",
          "America/Denver",
          "America/Godthab",
          "America/Guatemala",
          "America/Guyana",
          "America/Halifax",
          "America/Indiana/Indianapolis",
          "America/Juneau",
          "America/La_Paz",
          "America/Lima",
          "America/Lima",
          "America/Los_Angeles",
          "America/Mazatlan",
          "America/Mexico_City",
          "America/Mexico_City",
          "America/Monterrey",
          "America/Montevideo",
          "America/New_York",
          "America/Phoenix",
          "America/Puerto_Rico",
          "America/Regina",
          "America/Santiago",
          "America/Sao_Paulo",
          "America/St_Johns",
          "America/Tijuana",
          "Asia/Almaty",
          "Asia/Baghdad",
          "Asia/Baku",
          "Asia/Bangkok",
          "Asia/Bangkok",
          "Asia/Chongqing",
          "Asia/Colombo",
          "Asia/Dhaka",
          "Asia/Dhaka",
          "Asia/Hong_Kong",
          "Asia/Irkutsk",
          "Asia/Jakarta",
          "Asia/Jerusalem",
          "Asia/Kabul",
          "Asia/Kamchatka",
          "Asia/Karachi",
          "Asia/Karachi",
          "Asia/Kathmandu",
          "Asia/Kolkata",
          "Asia/Kolkata",
          "Asia/Kolkata",
          "Asia/Kolkata",
          "Asia/Krasnoyarsk",
          "Asia/Kuala_Lumpur",
          "Asia/Kuwait",
          "Asia/Magadan",
          "Asia/Muscat",
          "Asia/Muscat",
          "Asia/Novosibirsk",
          "Asia/Rangoon",
          "Asia/Riyadh",
          "Asia/Seoul",
          "Asia/Shanghai",
          "Asia/Singapore",
          "Asia/Srednekolymsk",
          "Asia/Taipei",
          "Asia/Tashkent",
          "Asia/Tbilisi",
          "Asia/Tehran",
          "Asia/Tokyo",
          "Asia/Tokyo",
          "Asia/Tokyo",
          "Asia/Ulaanbaatar",
          "Asia/Urumqi",
          "Asia/Vladivostok",
          "Asia/Yakutsk",
          "Asia/Yekaterinburg",
          "Asia/Yerevan",
          "Atlantic/Azores",
          "Atlantic/Cape_Verde",
          "Atlantic/South_Georgia",
          "Australia/Adelaide",
          "Australia/Brisbane",
          "Australia/Darwin",
          "Australia/Hobart",
          "Australia/Melbourne",
          "Australia/Melbourne",
          "Australia/Perth",
          "Australia/Sydney",
          "Etc/GMT+12",
          "Etc/UTC",
          "Europe/Amsterdam",
          "Europe/Athens",
          "Europe/Belgrade",
          "Europe/Berlin",
          "Europe/Bratislava",
          "Europe/Brussels",
          "Europe/Bucharest",
          "Europe/Budapest",
          "Europe/Copenhagen",
          "Europe/Dublin",
          "Europe/Helsinki",
          "Europe/Istanbul",
          "Europe/Kaliningrad",
          "Europe/Kiev",
          "Europe/Lisbon",
          "Europe/Ljubljana",
          "Europe/London",
          "Europe/London",
          "Europe/Madrid",
          "Europe/Minsk",
          "Europe/Moscow",
          "Europe/Moscow",
          "Europe/Paris",
          "Europe/Prague",
          "Europe/Riga",
          "Europe/Rome",
          "Europe/Samara",
          "Europe/Sarajevo",
          "Europe/Skopje",
          "Europe/Sofia",
          "Europe/Stockholm",
          "Europe/Tallinn",
          "Europe/Vienna",
          "Europe/Vilnius",
          "Europe/Volgograd",
          "Europe/Warsaw",
          "Europe/Zagreb",
          "Europe/Zurich",
          "Europe/Zurich",
          "Pacific/Apia",
          "Pacific/Auckland",
          "Pacific/Auckland",
          "Pacific/Chatham",
          "Pacific/Fakaofo",
          "Pacific/Fiji",
          "Pacific/Guadalcanal",
          "Pacific/Guam",
          "Pacific/Honolulu",
          "Pacific/Majuro",
          "Pacific/Midway",
          "Pacific/Noumea",
          "Pacific/Pago_Pago",
          "Pacific/Port_Moresby",
          "Pacific/Tongatapu",
          "UTC"
        ]
      },
      "component_type": {
        "type": "string",
        "enum": [
          "page_component",
          "proposal_component",
          "meeting_component",
          "budget_component",
          "survey_component",
          "accountability_component",
          "debate_component",
          "sortition_component",
          "blog_component",
          "awesome_map_component",
          "awesome_iframe_component"
        ]
      },
      "creation_date": {
        "title": "Creation date",
        "description": "Creation date, in ISO8601 format.",
        "type": "string",
        "format": "date_time",
        "example": "2024-11-12T12:34:56Z"
      },
      "edition_date": {
        "title": "Last Update Date",
        "description": "Last update date, in ISO8601 format.",
        "type": "string",
        "format": "date_time",
        "example": "2024-12-12T20:34:56Z"
      },
      "space_manifest": {
        "title": "Space Manifest",
        "type": "string",
        "enum": [
          "participatory_processes",
          "assemblies"
        ]
      },
      "component_manifest": {
        "title": "Component Manifest",
        "type": "string",
        "enum": [
          "pages",
          "proposals",
          "meetings",
          "budgets",
          "surveys",
          "accountability",
          "debates",
          "sortitions",
          "blogs",
          "awesome_map",
          "awesome_iframe"
        ]
      },
      "resource_manifest": {
        "title": "Resource Type",
        "type": "string",
        "enum": [
          "page",
          "proposal",
          "meeting",
          "budget",
          "survey",
          "accountability",
          "debate",
          "sortition",
          "blog",
          "awesome_map",
          "awesome_iframe"
        ]
      },
      "space_type": {
        "type": "string",
        "enum": [
          "participatory_processes",
          "assemblies"
        ]
      },
      "space_classes": {
        "type": "string",
        "description": "space class name. Part of the polymorphic association (participatory_space_type,participatory_space_id)",
        "enum": [
          "Decidim::ParticipatoryProcess",
          "Decidim::Assembly"
        ]
      },
      "space": {
        "type": "object",
        "title": "Space",
        "properties": {
          "id": {
            "type": "string",
            "description": "Space Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "space"
            ]
          },
          "attributes": {
            "title": "Space Attributes",
            "type": "object",
            "properties": {
              "title": {
                "$ref": "#/components/schemas/translated_prop",
                "title": "Title translations",
                "description": "Space title"
              },
              "subtitle": {
                "$ref": "#/components/schemas/translated_prop",
                "title": "Subtitle translations",
                "description": "Space subtitle"
              },
              "short_description": {
                "$ref": "#/components/schemas/translated_prop",
                "title": "Short Description translations",
                "description": "Space short_description"
              },
              "description": {
                "$ref": "#/components/schemas/translated_prop",
                "title": "Description translations",
                "description": "Space description"
              },
              "manifest_name": {
                "$ref": "#/components/schemas/space_manifest"
              },
              "participatory_space_type": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "visibility": {
                "type": "string",
                "enum": [
                  "public",
                  "transparent",
                  "private"
                ],
                "description": "Space visibility"
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "required": [
              "title",
              "manifest_name",
              "visibility",
              "created_at",
              "updated_at"
            ],
            "additionalProperties": false
          },
          "relationships": {
            "type": "object",
            "title": "Space relationships",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "$ref": "#/components/schemas/component_type"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Space Component Relationships Data"
                  },
                  "meta": {
                    "title": "Space Component Metadata",
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count for components association"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "count"
                    ]
                  },
                  "links": {
                    "type": "object",
                    "title": "Space Component Links",
                    "properties": {
                      "self": {
                        "$ref": "#/components/schemas/resource_link"
                      },
                      "related": {
                        "$ref": "#/components/schemas/resource_link"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "self"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta",
                  "links"
                ],
                "title": "Space Component Relationships"
              }
            }
          },
          "links": {
            "type": "object",
            "title": "Space Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "required": [
              "self",
              "related"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "links",
          "relationships"
        ]
      },
      "space_index_response": {
        "type": "object",
        "title": "Space Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/space"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "space_item_response": {
        "type": "object",
        "title": "Space Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/space"
          }
        },
        "required": [
          "data"
        ]
      },
      "client_credential": {
        "type": "object",
        "title": "Client Credential",
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "client_credentials"
            ],
            "description": "Client Credential Flow, for **machine-to-machine**"
          },
          "client_id": {
            "type": "string",
            "description": "OAuth application Client Id"
          },
          "client_secret": {
            "type": "string",
            "description": "OAuth application Client Secret"
          },
          "scope": {
            "type": "string",
            "enum": [
              "public",
              "spaces",
              "system",
              "proposals",
              "meetings",
              "debates",
              "pages",
              "blogs",
              "oauth"
            ],
            "description": "Requested scopes"
          }
        },
        "required": [
          "grant_type",
          "client_id",
          "client_secret",
          "scope"
        ]
      },
      "password_grant_login": {
        "type": "object",
        "title": "Login",
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "password"
            ],
            "description": "Resource Owner Password Credentials (ROPC) Flow, for **user login**"
          },
          "auth_type": {
            "type": "string",
            "enum": [
              "login"
            ],
            "description": "Type of ROPC"
          },
          "username": {
            "type": "string",
            "description": "User nickname"
          },
          "password": {
            "type": "string",
            "description": "User password"
          },
          "client_id": {
            "type": "string",
            "description": "OAuth application Client Id"
          },
          "client_secret": {
            "type": "string",
            "description": "OAuth application Client Secret"
          },
          "scope": {
            "type": "string",
            "enum": [
              "public",
              "spaces",
              "proposals",
              "meetings",
              "debates",
              "pages",
              "blogs",
              "oauth"
            ],
            "description": "Request scopes"
          }
        },
        "required": [
          "grant_type",
          "client_id",
          "client_secret",
          "scope",
          "username",
          "password",
          "auth_type"
        ]
      },
      "password_grant_impersonate": {
        "type": "object",
        "title": "Impersonation",
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "password"
            ],
            "description": "Resource Owner Password Credentials (ROPC) Flow, for **user impersonation**"
          },
          "auth_type": {
            "type": "string",
            "enum": [
              "impersonate"
            ],
            "description": "Type of ROPC"
          },
          "username": {
            "type": "string",
            "description": "User nickname, unique and at least 6 alphanumeric chars."
          },
          "id": {
            "type": "string",
            "description": "User id, will find over id and ignore username. Fails if register_on_missing=true."
          },
          "meta": {
            "type": "object",
            "title": "User impersonation settings",
            "description": "Impersonation Settings",
            "properties": {
              "register_on_missing": {
                "type": "boolean",
                "description": "Register the user if it does not exists. Default: false"
              },
              "accept_tos_on_register": {
                "type": "boolean",
                "description": "Accept the TOS on registration, used only if register_on_missing=true. Default: false"
              },
              "skip_confirmation_on_register": {
                "type": "boolean",
                "description": "Skip email confirmation on creation, used only if register_on_missing=true. Default: false"
              },
              "email": {
                "type": "string",
                "description": "User email to use on registration. used only if register_on_missing=true. Default to <username>@example.org"
              },
              "name": {
                "type": "string",
                "description": "User name. Used only if register_on_missing=true. Default to username"
              }
            },
            "additionalProperties": false
          },
          "client_id": {
            "type": "string",
            "description": "OAuth application Client Id"
          },
          "client_secret": {
            "type": "string",
            "description": "OAuth application Client Secret"
          },
          "scope": {
            "type": "string",
            "enum": [
              "public",
              "spaces",
              "proposals",
              "meetings",
              "debates",
              "pages",
              "blogs",
              "oauth"
            ],
            "description": "Request scopes"
          }
        },
        "additionalProperties": false,
        "required": [
          "grant_type",
          "client_id",
          "client_secret",
          "scope",
          "auth_type"
        ]
      },
      "oauth_grant_param": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/client_credential"
          },
          {
            "$ref": "#/components/schemas/password_grant_impersonate"
          },
          {
            "$ref": "#/components/schemas/password_grant_login"
          }
        ]
      },
      "password_grant_param": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/password_grant_impersonate"
          },
          {
            "$ref": "#/components/schemas/password_grant_login"
          }
        ]
      },
      "blog": {
        "type": "object",
        "title": "Blog Post",
        "properties": {
          "id": {
            "type": "string",
            "description": "Blog Post Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "blog"
            ]
          },
          "attributes": {
            "type": "object",
            "title": "Blog Post Attributes",
            "properties": {
              "title": {
                "$ref": "#/components/schemas/translated_prop"
              },
              "body": {
                "$ref": "#/components/schemas/translated_prop"
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "title",
              "body"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Blog Post Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published blog post?"
              },
              "scope": {
                "type": "integer",
                "description": "Scope Id"
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published"
            ]
          },
          "links": {
            "type": "object",
            "title": "Blog Post Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "collection": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              },
              "prev": {
                "$ref": "#/components/schemas/resource_link"
              },
              "next": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self",
              "collection",
              "related"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Blog Post Relationships",
            "properties": {
              "space": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "participatory_processes",
                          "assemblies"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Linked Space Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Linked Space"
              },
              "component": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "blog_component"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Linked Blog Component Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Linked Blog Component"
              }
            },
            "required": [
              "component",
              "space"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta",
          "links"
        ]
      },
      "blog_index_response": {
        "type": "object",
        "title": "Blog Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/blog"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "blog_item_response": {
        "type": "object",
        "title": "Blog Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/blog"
          }
        },
        "required": [
          "data"
        ]
      },
      "generic_component": {
        "type": "object",
        "title": "Component",
        "properties": {
          "id": {
            "type": "string",
            "description": "Component Id"
          },
          "type": {
            "$ref": "#/components/schemas/component_type"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Component name"
              },
              "global_announcement": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Component annoucement (intro)"
              },
              "participatory_space_type": {
                "$ref": "#/components/schemas/space_classes"
              },
              "participatory_space_id": {
                "type": "string",
                "description": "Associate space id. Part of the polymorphic association (participatory_space_type,participatory_space_id)"
              },
              "created_at": {
                "type": "string",
                "description": "Creation date of the component"
              },
              "updated_at": {
                "type": "string",
                "description": "Last update date of the component"
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "name",
              "manifest_name",
              "participatory_space_type",
              "participatory_space_id"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Component Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published component?"
              },
              "scopes_enabled": {
                "type": "boolean",
                "description": "Component handle scopes?"
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published",
              "scopes_enabled"
            ]
          },
          "links": {
            "type": "object",
            "title": "Component Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Component Relationships",
            "properties": {
              "resources": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Component Linked Resources Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Component Linked Resources Metadata",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count of resources"
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Component Linked Resources"
              }
            }
          }
        }
      },
      "proposal_component": {
        "type": "object",
        "title": "Proposal Component",
        "properties": {
          "id": {
            "type": "string",
            "description": "Proposal Component Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "proposal_component"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Proposal Component name"
              },
              "global_announcement": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Proposal Component annoucement (intro)"
              },
              "participatory_space_type": {
                "$ref": "#/components/schemas/space_classes"
              },
              "participatory_space_id": {
                "type": "string",
                "description": "Associate space id. Part of the polymorphic association (participatory_space_type,participatory_space_id)"
              },
              "created_at": {
                "type": "string",
                "description": "Creation date of the component"
              },
              "updated_at": {
                "type": "string",
                "description": "Last update date of the component"
              },
              "manifest_name": {
                "type": "string",
                "enum": [
                  "proposals"
                ]
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "name",
              "manifest_name",
              "participatory_space_type",
              "participatory_space_id"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Proposal Component Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published component?"
              },
              "scopes_enabled": {
                "type": "boolean",
                "description": "Proposal Component handle scopes?"
              },
              "can_create_proposals": {
                "type": "boolean",
                "description": "If the current user can create proposal (component allows, and user did not reach publication limit)"
              },
              "can_vote": {
                "type": "boolean",
                "description": "If the current user can vote on the component"
              },
              "can_comment": {
                "type": "boolean",
                "description": "If the current user comment on the component"
              },
              "geocoding_enabled": {
                "type": "boolean",
                "description": "If the component needs a map to display its resources"
              },
              "attachments_allowed": {
                "type": "boolean",
                "description": "If the component allows to attach files to resources"
              },
              "collaborative_drafts_enabled": {
                "type": "boolean",
                "description": "If you can create collaborative draft for the proposal"
              },
              "comments_enabled": {
                "type": "boolean",
                "description": "If you can comment on proposals"
              },
              "comments_max_length": {
                "type": "integer",
                "description": "Characters limit for comment"
              },
              "default_sort_order": {
                "type": "string",
                "enum": [
                  "random",
                  "recent",
                  "most_voted",
                  "most_endorsed",
                  "most_commented",
                  "most_followed",
                  "with_more_authors",
                  "automatic",
                  "default"
                ],
                "description": "Default order of proposals"
              },
              "official_proposals_enabled": {
                "type": "boolean",
                "description": "If proposals can be official"
              },
              "participatory_texts_enabled": {
                "type": "boolean",
                "description": "If proposals are based on a text modification"
              },
              "proposal_edit_before_minutes": {
                "type": "integer",
                "description": "Time in minute participant can edit the proposal"
              },
              "proposal_edit_time": {
                "type": "string",
                "enum": [
                  "infinite",
                  "limited"
                ],
                "description": "Type of restriction for proposal edition"
              },
              "proposal_limit": {
                "type": "integer",
                "description": "Max proposal per participant. No maximum if value is 0"
              },
              "resources_permissions_enabled": {
                "type": "boolean",
                "description": "If authorizations can be defined per proposal"
              },
              "threshold_per_proposal": {
                "type": "integer",
                "description": "Threshold to compare similar proposals"
              },
              "vote_limit": {
                "type": "integer",
                "description": "Max Number of vote per participant. 0 if no limit"
              },
              "endorsements_enabled": {
                "type": "boolean",
                "description": "If endorsements are enabled"
              },
              "votes_enabled": {
                "type": "boolean",
                "description": "If votes on proposal are enabled"
              },
              "creation_enabled": {
                "type": "boolean",
                "description": "If participant can create proposal are enabled"
              },
              "proposal_answering_enabled": {
                "type": "boolean",
                "description": "If officials can answer proposals"
              },
              "amendment_creation_enabled": {
                "type": "boolean",
                "description": "If participant can propose an amendment to a proposal"
              },
              "amendment_reaction_enabled": {
                "type": "boolean",
                "description": "If participant can react to an amendment of a proposal"
              },
              "amendment_promotion_enabled": {
                "type": "boolean",
                "description": "If participant choose an amendment to replace their initial proposal"
              },
              "votes": {
                "title": "Proposal Vote Weights Options",
                "description": "Vote weight, if can_vote is true.",
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Proposal Vote Weight",
                  "properties": {
                    "label": {
                      "type": "string",
                      "description": "Label to voting button"
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Value to add to the vote. 0 for abstention"
                    }
                  },
                  "required": [
                    "label",
                    "weight"
                  ]
                }
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published",
              "scopes_enabled",
              "can_create_proposals",
              "can_vote",
              "can_comment",
              "geocoding_enabled",
              "attachments_allowed",
              "vote_limit"
            ]
          },
          "links": {
            "type": "object",
            "title": "Proposal Component Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              },
              "draft": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Proposal Component Relationships",
            "properties": {
              "resources": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Proposal Component Linked Resources Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Proposal Component Linked Resources Metadata",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count of resources"
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Proposal Component Linked Resources"
              }
            }
          }
        },
        "description": "A proposal component can host proposals from participants, and official proposals (proposals from the organization).\nThis component have many metadatas that explain what are the restrictions regarding proposing, voting, commenting, amending or endorsing. \n\nFeatures toggles: \n- `can_create_proposals`: If participants can create proposals\n- `can_vote`: If participants can vote\n- `can_comment`: If participants can comments\n- .... and some more\n\n\n"
      },
      "proposal_component_index_response": {
        "type": "object",
        "title": "Proposal Component Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/proposal_component"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "proposal_component_item_response": {
        "type": "object",
        "title": "Proposal Component Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/proposal_component"
          }
        },
        "required": [
          "data"
        ]
      },
      "blog_component": {
        "type": "object",
        "title": "Blog Post Component",
        "properties": {
          "id": {
            "type": "string",
            "description": "Blog Post Component Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "blog_component"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Blog Post Component name"
              },
              "global_announcement": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Blog Post Component annoucement (intro)"
              },
              "participatory_space_type": {
                "$ref": "#/components/schemas/space_classes"
              },
              "participatory_space_id": {
                "type": "string",
                "description": "Associate space id. Part of the polymorphic association (participatory_space_type,participatory_space_id)"
              },
              "created_at": {
                "type": "string",
                "description": "Creation date of the component"
              },
              "updated_at": {
                "type": "string",
                "description": "Last update date of the component"
              },
              "manifest_name": {
                "type": "string",
                "enum": [
                  "blogs"
                ]
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "name",
              "manifest_name",
              "participatory_space_type",
              "participatory_space_id"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Blog Post Component Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published component?"
              },
              "scopes_enabled": {
                "type": "boolean",
                "description": "Blog Post Component handle scopes?"
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published",
              "scopes_enabled"
            ]
          },
          "links": {
            "type": "object",
            "title": "Blog Post Component Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Blog Post Component Relationships",
            "properties": {
              "resources": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Blog Post Component Linked Resources Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Blog Post Component Linked Resources Metadata",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count of resources"
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Blog Post Component Linked Resources"
              }
            }
          }
        }
      },
      "blog_component_index_response": {
        "type": "object",
        "title": "Blog Component Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/blog_component"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "blog_component_item_response": {
        "type": "object",
        "title": "Blog Component Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/blog_component"
          }
        },
        "required": [
          "data"
        ]
      },
      "other_component": {
        "type": "object",
        "title": "Generic Component",
        "properties": {
          "id": {
            "type": "string",
            "description": "Generic Component Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "page_component",
              "meeting_component",
              "budget_component",
              "survey_component",
              "accountability_component",
              "debate_component",
              "sortition_component",
              "awesome_map_component",
              "awesome_iframe_component"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Generic Component name"
              },
              "global_announcement": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Generic Component annoucement (intro)"
              },
              "participatory_space_type": {
                "$ref": "#/components/schemas/space_classes"
              },
              "participatory_space_id": {
                "type": "string",
                "description": "Associate space id. Part of the polymorphic association (participatory_space_type,participatory_space_id)"
              },
              "created_at": {
                "type": "string",
                "description": "Creation date of the component"
              },
              "updated_at": {
                "type": "string",
                "description": "Last update date of the component"
              },
              "manifest_name": {
                "type": "string",
                "enum": [
                  "pages",
                  "meetings",
                  "budgets",
                  "surveys",
                  "accountability",
                  "debates",
                  "sortitions",
                  "awesome_map",
                  "awesome_iframe"
                ]
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "name",
              "manifest_name",
              "participatory_space_type",
              "participatory_space_id"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Generic Component Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published component?"
              },
              "scopes_enabled": {
                "type": "boolean",
                "description": "Generic Component handle scopes?"
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published",
              "scopes_enabled"
            ]
          },
          "links": {
            "type": "object",
            "title": "Generic Component Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Generic Component Relationships",
            "properties": {
              "resources": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Generic Component Linked Resources Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Generic Component Linked Resources Metadata",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count of resources"
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Generic Component Linked Resources"
              }
            }
          }
        }
      },
      "component": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/proposal_component"
          },
          {
            "$ref": "#/components/schemas/blog_component"
          },
          {
            "$ref": "#/components/schemas/other_component"
          }
        ]
      },
      "component_index_response": {
        "type": "object",
        "title": "Component Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/component"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "component_item_response": {
        "type": "object",
        "title": "Component Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/component"
          }
        },
        "required": [
          "data"
        ]
      },
      "error": {
        "type": "object",
        "title": "Api Error Payload",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error title, starting with HTTP Code, like 400: bad request"
          },
          "error_description": {
            "type": "string",
            "description": "Error detail, mostly validation error"
          },
          "state": {
            "type": "string",
            "description": "authentification state"
          }
        },
        "additionalProperties": false,
        "required": [
          "error",
          "error_description"
        ]
      },
      "error_response": {
        "$ref": "#/components/schemas/error"
      },
      "health": {
        "type": "object",
        "title": "Health Status",
        "properties": {
          "message": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          }
        }
      },
      "introspect_data": {
        "type": "object",
        "title": "Introspection Response",
        "properties": {
          "sub": {
            "type": "integer",
            "description": "Access token id"
          },
          "active": {
            "type": "boolean",
            "description": "If the token can be used"
          },
          "aud": {
            "type": "string",
            "description": "Where this token can be used (organization host)"
          },
          "resource": {
            "type": "object",
            "title": "Resource details",
            "properties": {
              "id": {
                "type": "string",
                "description": "resource id"
              },
              "type": {
                "type": "string",
                "enum": [
                  "user"
                ],
                "description": "resource type"
              },
              "attributes": {
                "type": "object",
                "title": "Resource Attributes",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Last update date"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Creation date"
                  },
                  "personal_url": {
                    "type": "string",
                    "description": "Personal url (social link, website, etc.)"
                  },
                  "locale": {
                    "type": "string",
                    "description": "Current prefered locale",
                    "enum": [
                      "en",
                      "fr"
                    ]
                  }
                },
                "required": [
                  "email",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "sub",
          "active",
          "aud",
          "exp"
        ]
      },
      "locale": {
        "title": "Current locale",
        "type": "string",
        "enum": [
          "en",
          "fr"
        ]
      },
      "locales": {
        "type": "array",
        "title": "Available locales",
        "items": {
          "$ref": "#/components/schemas/locale"
        }
      },
      "organization_attributes": {
        "title": "Organization Attributes",
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/translated_prop",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "$ref": "#/components/schemas/translated_prop",
            "additionalProperties": {
              "type": "string"
            }
          },
          "reference_prefix": {
            "type": "string",
            "description": "Prefix for the organization. Used to prefix uplodaded files and reference resources"
          },
          "host": {
            "type": "string"
          },
          "send_welcome_notification": {
            "type": "boolean",
            "description": "True if welcome email is sent to users"
          },
          "secondary_hosts": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Additional host, will redirect (301) to `host`"
            }
          },
          "available_locales": {
            "type": "array",
            "title": "Available locales",
            "items": {
              "$ref": "#/components/schemas/locale"
            }
          },
          "default_locale": {
            "type": "string",
            "description": "defaut locale for the organization"
          },
          "users_registration_mode": {
            "type": "string",
            "enum": [
              "enabled",
              "existing",
              "disabled"
            ],
            "description": "Define user registration mode: \n- `enabled`: Enable users registration\n- `existing`: Existing users will be able to login. Registration will be disabled.\n- `disabled`: No registration enabled\n"
          },
          "force_users_to_authenticate_before_access_organization": {
            "type": "boolean",
            "description": "Force users to authenticate before accessing the organization (disabled if users_registration_mode is `disabled`)"
          },
          "badges_enabled": {
            "type": "boolean",
            "description": "Enable badges for public views"
          },
          "enable_participatory_space_filters": {
            "type": "boolean",
            "description": "Display areas and scopes filter in public views."
          },
          "enable_machine_translations": {
            "type": "boolean",
            "description": "Enable machine translations (must be configured, see [Using machine translations](https://docs.decidim.org/en/develop/develop/machine_translations.html))"
          },
          "user_groups_enabled": {
            "type": "boolean",
            "description": "Enable user groups in public views"
          },
          "time_zone": {
            "$ref": "#/components/schemas/time_zone"
          },
          "comments_max_length": {
            "type": "integer",
            "description": "Default maximum length of comments"
          },
          "rich_text_editor_in_public_views": {
            "type": "boolean",
            "description": "Enable rich text editor in public views"
          },
          "created_at": {
            "$ref": "#/components/schemas/creation_date"
          },
          "updated_at": {
            "$ref": "#/components/schemas/edition_date"
          },
          "extended_data": {
            "type": "object",
            "description": "Extended data for the organization"
          }
        },
        "additionalProperties": false,
        "required": [
          "host",
          "name",
          "available_locales",
          "default_locale"
        ]
      },
      "organization": {
        "type": "object",
        "title": "Organization",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "organization"
            ]
          },
          "attributes": {
            "$ref": "#/components/schemas/organization_attributes"
          },
          "meta": {
            "title": "Organization Metadata",
            "type": "object",
            "properties": {
              "locales": {
                "type": "array",
                "title": "Available locales",
                "items": {
                  "$ref": "#/components/schemas/locale"
                }
              },
              "unconfirmed_host": {
                "type": "string",
                "description": "If host update is pending, unconfirmed host for the organization"
              }
            },
            "required": [
              "locales"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta"
        ]
      },
      "organization_index_response": {
        "type": "object",
        "title": "Organization Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/organization"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "organization_item_response": {
        "type": "object",
        "title": "Organization Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/organization"
          }
        },
        "required": [
          "data"
        ]
      },
      "organization_extended_data": {
        "type": "object",
        "title": "Organization extended data",
        "properties": {},
        "additionalProperties": true,
        "description": "Hash of values attached to an organization. These values won't be\ndisplayed to admins or users, consider this as an internal\ndata payload.\n"
      },
      "draft_proposal": {
        "type": "object",
        "title": "Draft Proposal",
        "properties": {
          "id": {
            "type": "string",
            "description": "Draft Proposal Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "draft_proposal"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Draft Proposal title"
              },
              "body": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Draft Proposal content"
              },
              "errors": {
                "type": "object",
                "title": "Draft Proposal Validation Errors",
                "properties": {
                  "title": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "body": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "title",
                  "body"
                ],
                "description": "Draft current errors"
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "title",
              "body"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Draft Proposition Metadata",
            "properties": {
              "publishable": {
                "type": "boolean",
                "description": "Draft is published as it is now?"
              },
              "client_id": {
                "type": "string",
                "description": "Attached client_id"
              },
              "scope": {
                "type": "integer",
                "description": "Scope Id"
              },
              "fields": {
                "type": "array",
                "description": "Editable field names",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "publishable",
              "client_id",
              "fields"
            ]
          },
          "links": {
            "type": "object",
            "title": "Proposal Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "collection": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self",
              "related",
              "collection"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Draft Proposal Relationships",
            "properties": {
              "space": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "$ref": "#/components/schemas/space_type"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Draft Proposal Related Space Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Draft Proposal Related Space"
              },
              "component": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "$ref": "#/components/schemas/component_type"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Draft Proposal Related Component Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Draft Proposal Related Component"
              },
              "author": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "user",
                          "user_group"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Draft Proposal Author Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Draft Proposal Author"
              },
              "coauthors": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user",
                            "user_group"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Draft Proposal Coauthors Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Draft Proposal Coauthors"
              }
            },
            "required": [
              "component",
              "space"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta",
          "links"
        ]
      },
      "draft_proposal_index_response": {
        "type": "object",
        "title": "Draft Proposal Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/draft_proposal"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "draft_proposal_item_response": {
        "type": "object",
        "title": "Draft Proposal Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/draft_proposal"
          }
        },
        "required": [
          "data"
        ]
      },
      "proposal": {
        "type": "object",
        "title": "Proposal",
        "properties": {
          "id": {
            "type": "string",
            "description": "Proposal Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "proposal"
            ]
          },
          "attributes": {
            "type": "object",
            "title": "Proposal Attributes",
            "properties": {
              "title": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Proposal title"
              },
              "body": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Proposal content"
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "title",
              "body"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Proposal Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published blog post?"
              },
              "scope": {
                "type": "integer",
                "description": "Scope Id"
              },
              "voted": {
                "type": "object",
                "title": "Current User Proposal Vote Metadata",
                "properties": {
                  "weight": {
                    "type": "integer",
                    "description": "Vote weight"
                  }
                },
                "required": [
                  "weight"
                ],
                "additionalProperties": false,
                "nullable": true
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published"
            ]
          },
          "links": {
            "type": "object",
            "title": "Proposal Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "collection": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              },
              "prev": {
                "$ref": "#/components/schemas/resource_link"
              },
              "next": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self",
              "collection",
              "related"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Proposal Relationships",
            "properties": {
              "state": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "proposal_state"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Proposal State Relationship Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Proposal State Relationship Metadata",
                    "properties": {
                      "token": {
                        "type": "string",
                        "description": "Proposal State token"
                      }
                    },
                    "required": [
                      "token"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Proposal State Relationship"
              },
              "space": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "$ref": "#/components/schemas/space_type"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Linked Space Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Linked Space"
              },
              "component": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "proposal_component"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Linked Proposal Component Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Linked Proposal Component"
              },
              "author": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "user",
                          "user_group"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Proposal's Author Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Proposal's Author"
              },
              "coauthors": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user",
                            "user_group"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Proposal's Coauthors Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Proposal's Coauthors"
              }
            },
            "required": [
              "component",
              "space"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta",
          "links"
        ]
      },
      "proposal_index_response": {
        "type": "object",
        "title": "Proposal Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/proposal"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "proposal_item_response": {
        "type": "object",
        "title": "Proposal Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/proposal"
          }
        },
        "required": [
          "data"
        ]
      },
      "user_extended_data": {
        "type": "object",
        "title": "User extended data",
        "properties": {},
        "additionalProperties": true,
        "description": "Hash of values attached to a user. These values won't be\ndisplayed to admins or users, consider this as an internal\ndata payload.\n"
      },
      "user": {
        "type": "object",
        "title": "User",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "user"
            ]
          },
          "meta": {
            "title": "User Metadata",
            "type": "object",
            "properties": {
              "blocked": {
                "type": "boolean",
                "description": "If the user is blocked, and need to be unblocked to signin"
              },
              "locked": {
                "type": "boolean",
                "description": "If the user is locked, and need to click on the mail link to unlock"
              }
            },
            "required": [
              "blocked",
              "locked"
            ],
            "additionalProperties": false
          },
          "relationships": {
            "type": "object",
            "title": "User Relationships",
            "properties": {
              "roles": {
                "type": "object",
                "title": "User Roles",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "title": "User Role",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user_role"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          },
          "attributes": {
            "type": "object",
            "title": "User Attributes",
            "properties": {
              "name": {
                "description": "User name, use to display the Profile identity. Public",
                "type": "string"
              },
              "nickname": {
                "description": "User nickname, unique identifier for the user. Public",
                "type": "string"
              },
              "personal_url": {
                "description": "Personal website URL or social link. Public",
                "type": "string"
              },
              "about": {
                "description": "Short bio of the user. Public",
                "type": "string"
              },
              "locale": {
                "$ref": "#/components/schemas/locale",
                "description": "User locale. Fallback to default locale of the organization. Private"
              },
              "email": {
                "description": "Email of the user. Private",
                "type": "string"
              },
              "extended_data": {
                "type": "object",
                "title": "User Extended Data",
                "description": "Additional data. Private",
                "properties": {},
                "additionalProperties": true
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "additionalProperties": false,
            "required": [
              "created_at",
              "updated_at",
              "name",
              "nickname",
              "locale",
              "extended_data"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "additionalProperties": false
      },
      "user_index_response": {
        "type": "object",
        "title": "User Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/user"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "user_item_response": {
        "type": "object",
        "title": "User Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/user"
          }
        },
        "required": [
          "data"
        ]
      },
      "magic_link": {
        "type": "object",
        "title": "Magic Link",
        "properties": {
          "id": {
            "type": "string",
            "description": "Magic Token ID"
          },
          "type": {
            "type": "string",
            "enum": [
              "magic_link"
            ]
          },
          "attributes": {
            "type": "object",
            "title": "Magic Link Attributes",
            "properties": {
              "token": {
                "type": "string",
                "description": "Magic Link Token"
              },
              "label": {
                "type": "string",
                "description": "Magic Link description"
              }
            },
            "required": [
              "token",
              "label"
            ]
          },
          "links": {
            "type": "object",
            "title": "Magic Link links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "sign_in": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "required": [
              "self",
              "sign_in"
            ]
          }
        },
        "required": [
          "attributes",
          "links",
          "id",
          "type"
        ],
        "additionalProperties": false
      },
      "magic_link_index_response": {
        "type": "object",
        "title": "Magic Link Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/magic_link"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "magic_link_item_response": {
        "type": "object",
        "title": "Magic Link Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/magic_link"
          }
        },
        "required": [
          "data"
        ]
      },
      "magic_link_redirect": {
        "type": "object",
        "title": "Magic Redirect",
        "properties": {
          "id": {
            "type": "string",
            "description": "Magic Token ID"
          },
          "type": {
            "type": "string",
            "enum": [
              "magic_link_redirect"
            ]
          },
          "attributes": {
            "type": "object",
            "title": "Magic Link Attributes",
            "properties": {
              "redirect_url": {
                "type": "string",
                "description": "Redirection destination"
              },
              "label": {
                "type": "string",
                "description": "Magic Link description"
              }
            },
            "required": [
              "redirect_url",
              "label"
            ]
          },
          "links": {
            "type": "object",
            "title": "Magic Link links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/get_action_link"
              },
              "magic_link": {
                "$ref": "#/components/schemas/get_action_link"
              }
            },
            "required": [
              "self",
              "magic_link"
            ]
          }
        },
        "required": [
          "attributes",
          "links",
          "id",
          "type"
        ],
        "additionalProperties": false
      }
    }
  },
  "paths": {
    "/me/magic_links": {
      "post": {
        "summary": "Create a magic-lick",
        "tags": [
          "Users"
        ],
        "operationId": "generateMagicLink",
        "description": "Generates a uniq magic link, valid for 5minutes. If the user follow this link, it will be signed in automatically\n",
        "parameters": [],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "oauth"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "201": {
            "description": "Magick link created",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "41",
                        "type": "magic_link",
                        "attributes": {
                          "token": "UXliV296QWY2U1FLelhCd1lmTnc=",
                          "label": "My label"
                        },
                        "links": {
                          "self": {
                            "href": "https://3.lvh.me/api/rest_full/v0.2/me/magic_links",
                            "title": "Generates a magic link",
                            "rel": "resource",
                            "meta": {
                              "action_method": "POST",
                              "action_enctype": "application/x-www-form-urlencoded"
                            }
                          },
                          "sign_in": {
                            "href": "https://3.lvh.me/api/rest_full/v0.2/me/magic_links/UXliV296QWY2U1FLelhCd1lmTnc=",
                            "title": "Sign in with magic link",
                            "rel": "resource",
                            "meta": {
                              "action_method": "GET"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/magic_link_item_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "bad_blocked": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "User blocked"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Generate Magic Link Payload",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "redirect_url": {
                        "type": "string",
                        "description": "Redirect url after sign-in"
                      }
                    },
                    "required": [
                      "redirect_url"
                    ],
                    "description": "Optional payload to configure the magic link"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/proposal_votes": {
      "post": {
        "summary": "Vote",
        "tags": [
          "Proposals Vote"
        ],
        "operationId": "voteProposal",
        "description": "Vote on a proposal",
        "parameters": [],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Vote created",
            "content": {
              "application/json": {
                "examples": {
                  "default_with_abstention": {
                    "value": {
                      "data": {
                        "id": "5181",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-01T06:22:24Z",
                          "updated_at": "2025-07-01T06:22:24Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Veniam cupiditate illum. 249"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Ut velit culpa. 251</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "2812",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "9744",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "7935",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "7935",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://9.lvh.me/public/components/9744",
                            "title": "<script>alert(\"proposals\");</script> Proposals",
                            "rel": "resource",
                            "meta": {
                              "space_id": "2812",
                              "space_manifest": "participatory_processes",
                              "component_id": "9744",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://9.lvh.me/api/rest_full/v0.2/proposals/5181",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "9744",
                              "component_manifest": "proposals",
                              "space_id": "2812",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5181",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://9.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "9744",
                              "component_manifest": "proposals",
                              "space_id": "2812",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5181",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "voted": {
                            "weight": 0
                          }
                        }
                      }
                    }
                  },
                  "voting_cards": {
                    "value": {
                      "data": {
                        "id": "5182",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-01T06:22:24Z",
                          "updated_at": "2025-07-01T06:22:24Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Est saepe velit. 297"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Nihil blanditiis voluptatibus. 299</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "2813",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "9745",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "7937",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "7937",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://10.lvh.me/public/components/9745",
                            "title": "<script>alert(\"proposals\");</script> Proposals",
                            "rel": "resource",
                            "meta": {
                              "space_id": "2813",
                              "space_manifest": "participatory_processes",
                              "component_id": "9745",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://10.lvh.me/api/rest_full/v0.2/proposals/5182",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "9745",
                              "component_manifest": "proposals",
                              "space_id": "2813",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5182",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://10.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "9745",
                              "component_manifest": "proposals",
                              "space_id": "2813",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5182",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "voted": {
                            "weight": 2
                          }
                        }
                      }
                    }
                  },
                  "default": {
                    "value": {
                      "data": {
                        "id": "5183",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-01T06:22:25Z",
                          "updated_at": "2025-07-01T06:22:25Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Sed eaque non. 347"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Sequi et rem. 349</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "2814",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "9746",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "7939",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "7939",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://11.lvh.me/public/components/9746",
                            "title": "<script>alert(\"proposals\");</script> Proposals",
                            "rel": "resource",
                            "meta": {
                              "space_id": "2814",
                              "space_manifest": "participatory_processes",
                              "component_id": "9746",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://11.lvh.me/api/rest_full/v0.2/proposals/5183",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "9746",
                              "component_manifest": "proposals",
                              "space_id": "2814",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5183",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://11.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "9746",
                              "component_manifest": "proposals",
                              "space_id": "2814",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5183",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "voted": {
                            "weight": 1
                          }
                        }
                      }
                    }
                  },
                  "voting_cards_with_abstention": {
                    "value": {
                      "data": {
                        "id": "5184",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-01T06:22:25Z",
                          "updated_at": "2025-07-01T06:22:25Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> At nesciunt beatae. 395"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Fuga dolorem est. 397</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "2815",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "9747",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "7941",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "7941",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://12.lvh.me/public/components/9747",
                            "title": "<script>alert(\"proposals\");</script> Proposals",
                            "rel": "resource",
                            "meta": {
                              "space_id": "2815",
                              "space_manifest": "participatory_processes",
                              "component_id": "9747",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://12.lvh.me/api/rest_full/v0.2/proposals/5184",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "9747",
                              "component_manifest": "proposals",
                              "space_id": "2815",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5184",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://12.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "9747",
                              "component_manifest": "proposals",
                              "space_id": "2815",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5184",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "voted": {
                            "weight": 0
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_item_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Vote A Proposal Payload",
                "properties": {
                  "proposal_id": {
                    "type": "integer",
                    "description": "Proposal Id"
                  },
                  "data": {
                    "type": "object",
                    "title": "Vote A Proposal Data",
                    "properties": {
                      "weight": {
                        "type": "integer",
                        "description": "Weight for your vote"
                      }
                    },
                    "required": [
                      "weight"
                    ],
                    "description": "Payload to send your vote"
                  }
                },
                "required": [
                  "data",
                  "proposal_id"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/draft_proposals": {
      "post": {
        "summary": "Create draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "operationId": "createDraftProposal",
        "description": "Create a draft\n",
        "parameters": [],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Draft updated",
            "content": {
              "application/json": {
                "examples": {
                  "ok_empty": {
                    "value": {
                      "data": {
                        "id": "5188",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-07-01T06:22:27Z",
                          "updated_at": "2025-07-01T06:22:27Z",
                          "title": {},
                          "body": {},
                          "errors": {
                            "title": [
                              "Title cannot be blank"
                            ],
                            "body": [
                              "Body cannot be blank"
                            ]
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "2818",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "9750",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "7945",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "7945",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://15.lvh.me/public/components/9750",
                            "title": "<script>alert(\"component_name\");</script> Cumque sint qui. 529",
                            "rel": "resource",
                            "meta": {
                              "space_id": "2818",
                              "space_manifest": "participatory_processes",
                              "component_id": "9750",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://15.lvh.me/api/rest_full/v0.2/proposals/5188",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "9750",
                              "component_manifest": "proposals",
                              "space_id": "2818",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5188",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://15.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "9750",
                              "component_manifest": "proposals",
                              "space_id": "2818",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5188",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "bTXk-UlJiTMO8t0ZEhdLJdi7AdXOXDm8DETvJc0-HN8",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/draft_proposal_item_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Create Draft Proposal Payload",
                "properties": {
                  "data": {
                    "type": "object",
                    "title": "Draft Proposal Data",
                    "properties": {
                      "component_id": {
                        "type": "integer",
                        "description": "Component ID"
                      }
                    },
                    "required": [
                      "component_id"
                    ],
                    "description": "Payload to update in the proposal"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/spaces/search": {
      "get": {
        "summary": "Search Participatory Spaces",
        "tags": [
          "Spaces"
        ],
        "operationId": "searchSpaces",
        "description": "List or search spaces of the organization. Can be processes, assemblies, or any other registred participatory space.",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[manifest_name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "participatory_processes",
                  "assemblies"
                ]
              },
              "title": "manifest_name not IN filter",
              "description": "match none of _manifest_name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "participatory_processes",
                  "assemblies"
                ]
              },
              "title": "manifest_name IN filter",
              "description": "match one of _manifest_name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_manifest_name_ starts with",
              "title": "manifest_name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "title": "manifest_name equal filter",
              "description": "_manifest_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "title": "manifest_name not equal filter",
              "description": "_manifest_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "manifest_name like filter",
              "description": "matches _manifest_name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "manifest_name blank filter",
              "description": "_manifest_name_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "title": "id IN filter",
              "description": "match one of _id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[id_eq]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id equal filter",
              "description": "_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[id_lt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id less than filter",
              "description": "_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[id_gt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id greater than filter",
              "description": "_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id present filter",
              "description": "_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id blank filter",
              "description": "_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[title_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "title not IN filter",
              "description": "match none of _title_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[title_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "title IN filter",
              "description": "match one of _title_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[title_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_title_ starts with",
              "title": "title starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[title_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "title equal filter",
              "description": "_title_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[title_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "title not equal filter",
              "description": "_title_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[title_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "title like filter",
              "description": "matches _title_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[title_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "title blank filter",
              "description": "_title_ is null or empty"
            },
            "required": false
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Search Results",
            "content": {
              "application/json": {
                "examples": {
                  "filter_by_id_in": {
                    "value": {
                      "data": [
                        {
                          "id": "2892",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Exercitationem nulla iusto. 15203"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Aut consequatur molestiae. 15205"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Repudiandae et et. 15207</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Velit veniam eius. 15209</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-01T06:22:45Z",
                            "updated_at": "2025-07-01T06:22:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://181.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=2892",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "2892",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://181.lvh.me/public/participatory_processes/2892",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2892",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://181.lvh.me/system/organizations/4084",
                              "title": "Leffler LLC",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "2893",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Dolorem nam animi. 15253"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Fugiat deleniti quo. 15255"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Quia architecto in. 15257</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Impedit eligendi fugit. 15259</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-01T06:22:45Z",
                            "updated_at": "2025-07-01T06:22:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://181.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=2893",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "2893",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://181.lvh.me/public/participatory_processes/2893",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2893",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://181.lvh.me/system/organizations/4084",
                              "title": "Leffler LLC",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "2894",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Et veniam ullam. 15303"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Odit velit ipsum. 15305"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Id consequatur consectetur. 15307</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Cupiditate qui similique. 15309</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-01T06:22:45Z",
                            "updated_at": "2025-07-01T06:22:45Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://181.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=2894",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "2894",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://181.lvh.me/public/participatory_processes/2894",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2894",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://181.lvh.me/system/organizations/4084",
                              "title": "Leffler LLC",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "search_translatable_text": {
                    "value": {
                      "data": [
                        {
                          "id": "6",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "My assembly for testing purpose",
                              "fr": "c'est une assemblée"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Placeat autem sit. 11011"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Nostrum fugiat rem. 11013</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Vero magni libero. 11015</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-01T06:22:41Z",
                            "updated_at": "2025-07-01T06:22:41Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [
                                {
                                  "id": "10055",
                                  "type": "accountability_component"
                                },
                                {
                                  "id": "10060",
                                  "type": "awesome_iframe_component"
                                },
                                {
                                  "id": "10059",
                                  "type": "awesome_map_component"
                                },
                                {
                                  "id": "10058",
                                  "type": "blog_component"
                                },
                                {
                                  "id": "10053",
                                  "type": "budget_component"
                                },
                                {
                                  "id": "10056",
                                  "type": "debate_component"
                                },
                                {
                                  "id": "10052",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "10045",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "10047",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "10049",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "10050",
                                  "type": "page_component"
                                },
                                {
                                  "id": "10048",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "10044",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "10051",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "10046",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "10057",
                                  "type": "sortition_component"
                                },
                                {
                                  "id": "10054",
                                  "type": "survey_component"
                                }
                              ],
                              "meta": {
                                "count": 17
                              },
                              "links": {
                                "self": {
                                  "href": "https://139.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=6",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "6",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://139.lvh.me/public/assemblies/6",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "6",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://139.lvh.me/system/organizations/4078",
                              "title": "Hegmann-Cartwright",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "2872",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Est architecto quia. 10867"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Et veniam quis. 10869"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Ullam sint ea. 10871</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Aut maxime rem. 10873</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-01T06:22:40Z",
                            "updated_at": "2025-07-01T06:22:40Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://132.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=2872",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "2872",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://132.lvh.me/public/participatory_processes/2872",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2872",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://132.lvh.me/system/organizations/4077",
                              "title": "Jast, Wiegand and Jacobi",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "2873",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Sint non voluptate. 10917"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Sapiente debitis tempora. 10919"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Sed quod molestiae. 10921</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Adipisci blanditiis consequuntur. 10923</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-01T06:22:40Z",
                            "updated_at": "2025-07-01T06:22:40Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://132.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=2873",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "2873",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://132.lvh.me/public/participatory_processes/2873",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2873",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://132.lvh.me/system/organizations/4077",
                              "title": "Jast, Wiegand and Jacobi",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "2871",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Et voluptas facilis. 10817"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Error reiciendis ex. 10819"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Aliquid provident dolorem. 10821</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Non ad laudantium. 10823</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-01T06:22:40Z",
                            "updated_at": "2025-07-01T06:22:40Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://132.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=2871",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "2871",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://132.lvh.me/public/participatory_processes/2871",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2871",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://132.lvh.me/system/organizations/4077",
                              "title": "Jast, Wiegand and Jacobi",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "1978",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Veniam veritatis sunt. 10887"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Illo omnis nihil. 10889"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Veniam possimus officia. 10891</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Necessitatibus omnis qui. 10893</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-01T06:22:40Z",
                            "updated_at": "2025-07-01T06:22:40Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://132.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=1978",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "1978",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://132.lvh.me/public/assemblies/1978",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "1978",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://132.lvh.me/system/organizations/4077",
                              "title": "Jast, Wiegand and Jacobi",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "6",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "My assembly for testing purpose",
                              "fr": "c'est une assemblée"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Quasi magnam velit. 10423"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Explicabo animi dolorem. 10425</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Exercitationem ut laborum. 10427</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-01T06:22:40Z",
                            "updated_at": "2025-07-01T06:22:40Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [
                                {
                                  "id": "10038",
                                  "type": "accountability_component"
                                },
                                {
                                  "id": "10043",
                                  "type": "awesome_iframe_component"
                                },
                                {
                                  "id": "10042",
                                  "type": "awesome_map_component"
                                },
                                {
                                  "id": "10041",
                                  "type": "blog_component"
                                },
                                {
                                  "id": "10036",
                                  "type": "budget_component"
                                },
                                {
                                  "id": "10039",
                                  "type": "debate_component"
                                },
                                {
                                  "id": "10035",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "10028",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "10030",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "10032",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "10033",
                                  "type": "page_component"
                                },
                                {
                                  "id": "10031",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "10027",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "10034",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "10029",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "10040",
                                  "type": "sortition_component"
                                },
                                {
                                  "id": "10037",
                                  "type": "survey_component"
                                }
                              ],
                              "meta": {
                                "count": 17
                              },
                              "links": {
                                "self": {
                                  "href": "https://132.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=6",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "6",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://132.lvh.me/public/assemblies/6",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "6",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://132.lvh.me/system/organizations/4077",
                              "title": "Jast, Wiegand and Jacobi",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "1977",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Beatae impedit nobis. 10837"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Voluptatum velit numquam. 10839"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Laborum sunt expedita. 10841</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Libero vel aspernatur. 10843</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-01T06:22:40Z",
                            "updated_at": "2025-07-01T06:22:40Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://132.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=1977",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "1977",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://132.lvh.me/public/assemblies/1977",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "1977",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://132.lvh.me/system/organizations/4077",
                              "title": "Jast, Wiegand and Jacobi",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "1976",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Sint tempore hic. 10787"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Magni maxime doloremque. 10789"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Magni aut voluptas. 10791</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Debitis qui quia. 10793</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-01T06:22:40Z",
                            "updated_at": "2025-07-01T06:22:40Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://132.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=1976",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "1976",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://132.lvh.me/public/assemblies/1976",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "1976",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://132.lvh.me/system/organizations/4077",
                              "title": "Jast, Wiegand and Jacobi",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "manifest_name_in_Assemblies": {
                    "value": {
                      "data": [
                        {
                          "id": "1984",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Impedit provident voluptas. 12063"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Quidem vitae et. 12065"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Nostrum aut sed. 12067</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Praesentium a ullam. 12069</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-01T06:22:41Z",
                            "updated_at": "2025-07-01T06:22:41Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://146.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=1984",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "1984",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://146.lvh.me/public/assemblies/1984",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "1984",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://146.lvh.me/system/organizations/4079",
                              "title": "Hermiston, Kozey and Vandervort",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "1982",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Aut eaque quos. 11963"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Quia alias hic. 11965"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Quas optio amet. 11967</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Velit dicta perspiciatis. 11969</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-01T06:22:41Z",
                            "updated_at": "2025-07-01T06:22:41Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://146.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=1982",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "1982",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://146.lvh.me/public/assemblies/1982",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "1982",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://146.lvh.me/system/organizations/4079",
                              "title": "Hermiston, Kozey and Vandervort",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "1983",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Magni cupiditate mollitia. 12013"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Sed id dolore. 12015"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Ut optio praesentium. 12017</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Quis a atque. 12019</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-01T06:22:41Z",
                            "updated_at": "2025-07-01T06:22:41Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://146.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=1983",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "1983",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://146.lvh.me/public/assemblies/1983",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "1983",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://146.lvh.me/system/organizations/4079",
                              "title": "Hermiston, Kozey and Vandervort",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "6",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "My assembly for testing purpose",
                              "fr": "c'est une assemblée"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Esse tenetur velit. 11599"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Vel inventore eius. 11601</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Quas expedita eaque. 11603</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-01T06:22:41Z",
                            "updated_at": "2025-07-01T06:22:41Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [
                                {
                                  "id": "10072",
                                  "type": "accountability_component"
                                },
                                {
                                  "id": "10077",
                                  "type": "awesome_iframe_component"
                                },
                                {
                                  "id": "10076",
                                  "type": "awesome_map_component"
                                },
                                {
                                  "id": "10075",
                                  "type": "blog_component"
                                },
                                {
                                  "id": "10070",
                                  "type": "budget_component"
                                },
                                {
                                  "id": "10073",
                                  "type": "debate_component"
                                },
                                {
                                  "id": "10064",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "10069",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "10062",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "10066",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "10067",
                                  "type": "page_component"
                                },
                                {
                                  "id": "10065",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "10063",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "10061",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "10068",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "10074",
                                  "type": "sortition_component"
                                },
                                {
                                  "id": "10071",
                                  "type": "survey_component"
                                }
                              ],
                              "meta": {
                                "count": 17
                              },
                              "links": {
                                "self": {
                                  "href": "https://146.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=6",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "6",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://146.lvh.me/public/assemblies/6",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "6",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://146.lvh.me/system/organizations/4079",
                              "title": "Hermiston, Kozey and Vandervort",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "1991",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> In expedita et. 13355"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Ea ut sit. 13357"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Magnam ut voluptatem. 13359</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Iusto asperiores beatae. 13361</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-01T06:22:43Z",
                            "updated_at": "2025-07-01T06:22:43Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://160.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=1991",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "1991",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://160.lvh.me/public/assemblies/1991",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "1991",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://160.lvh.me/system/organizations/4081",
                              "title": "Huel-Kutch",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "1992",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Adipisci voluptas accusantium. 13385"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Eligendi saepe praesentium. 13387"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Dolor incidunt saepe. 13389</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Eaque doloribus sed. 13391</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-01T06:22:43Z",
                            "updated_at": "2025-07-01T06:22:43Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://160.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=1992",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "1992",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://160.lvh.me/public/assemblies/1992",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "1992",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://160.lvh.me/system/organizations/4081",
                              "title": "Huel-Kutch",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/space_index_response"
                }
              }
            }
          }
        }
      }
    },
    "/components/blog_components": {
      "get": {
        "summary": "Blog Components",
        "tags": [
          "Components"
        ],
        "operationId": "blog_components",
        "description": "List or search blog components of the organization",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "participatory_space_id IN filter",
              "description": "match one of _participatory_space_id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id equal filter",
              "description": "_participatory_space_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id less than filter",
              "description": "_participatory_space_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id greater than filter",
              "description": "_participatory_space_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id present filter",
              "description": "_participatory_space_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id blank filter",
              "description": "_participatory_space_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "title": "participatory_space_type not IN filter",
              "description": "match none of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "title": "participatory_space_type IN filter",
              "description": "match one of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_participatory_space_type_ starts with",
              "title": "participatory_space_type starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Decidim::Assembly",
              "title": "participatory_space_type equal filter",
              "description": "_participatory_space_type_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Decidim::Assembly",
              "title": "participatory_space_type not equal filter",
              "description": "_participatory_space_type_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_type like filter",
              "description": "matches _participatory_space_type_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_type blank filter",
              "description": "_participatory_space_type_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name not IN filter",
              "description": "match none of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name IN filter",
              "description": "match one of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_name_ starts with",
              "title": "name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name equal filter",
              "description": "_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name not equal filter",
              "description": "_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name like filter",
              "description": "matches _name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "name blank filter",
              "description": "_name_ is null or empty"
            },
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "List of blog components",
            "content": {
              "application/json": {
                "examples": {
                  "components_in_Process": {
                    "value": {
                      "data": [
                        {
                          "id": "10218",
                          "type": "blog_component",
                          "attributes": {
                            "manifest_name": "blogs",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "2913",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Eaque culpa delectus. 17299"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:22:53Z",
                            "updated_at": "2025-07-01T06:22:53Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://206.lvh.me/components/blog_components/10218",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2913",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://206.lvh.me/spaces/participatory_processes/2913",
                              "title": "<script>alert(\"participatory_process_title\");</script> Dolores sed qui. 17247",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2913",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "10202",
                          "type": "blog_component",
                          "attributes": {
                            "manifest_name": "blogs",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "2909",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Libero accusamus esse. 16873"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:22:51Z",
                            "updated_at": "2025-07-01T06:22:51Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://202.lvh.me/components/blog_components/10202",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2909",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://202.lvh.me/spaces/participatory_processes/2909",
                              "title": "<script>alert(\"participatory_process_title\");</script> Excepturi maxime cumque. 16817",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2909",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        },
                        {
                          "id": "10203",
                          "type": "blog_component",
                          "attributes": {
                            "manifest_name": "blogs",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "2909",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Laboriosam est dolor. 16879"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:22:51Z",
                            "updated_at": "2025-07-01T06:22:51Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://202.lvh.me/components/blog_components/10203",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2909",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://202.lvh.me/spaces/participatory_processes/2909",
                              "title": "<script>alert(\"participatory_process_title\");</script> Excepturi maxime cumque. 16817",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2909",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "10220",
                          "type": "blog_component",
                          "attributes": {
                            "manifest_name": "blogs",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "2914",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Necessitatibus ipsam officiis. 17393"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:22:53Z",
                            "updated_at": "2025-07-01T06:22:53Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://207.lvh.me/components/blog_components/10220",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2914",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://207.lvh.me/spaces/participatory_processes/2914",
                              "title": "<script>alert(\"participatory_process_title\");</script> Perferendis voluptates officiis. 17341",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2914",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/blog_component_index_response"
                }
              }
            }
          }
        }
      }
    },
    "/components/proposal_components/{id}": {
      "get": {
        "summary": "Proposal Component Details",
        "tags": [
          "Components"
        ],
        "operationId": "proposal_component",
        "description": "Find on proposal",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "title": "id IN filter",
              "description": "match one of _id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[id_eq]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id equal filter",
              "description": "_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[id_lt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id less than filter",
              "description": "_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[id_gt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id greater than filter",
              "description": "_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id present filter",
              "description": "_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id blank filter",
              "description": "_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Proposal Component",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "10226",
                        "type": "proposal_component",
                        "attributes": {
                          "manifest_name": "proposals",
                          "participatory_space_type": "Decidim::ParticipatoryProcess",
                          "participatory_space_id": "2920",
                          "name": {
                            "en": "<script>alert(\"component_name\");</script> Repellendus accusamus quam. 17813"
                          },
                          "global_announcement": {},
                          "created_at": "2025-07-01T06:22:56Z",
                          "updated_at": "2025-07-01T06:22:56Z"
                        },
                        "relationships": {
                          "resources": {
                            "data": [],
                            "meta": {
                              "count": 0
                            }
                          }
                        },
                        "links": {
                          "self": {
                            "href": "https://213.lvh.me/components/proposal_components/10226",
                            "title": "<script>alert(\"component_name\");</script> Repellendus accusamus quam. 17813",
                            "rel": "resource",
                            "meta": {
                              "space_id": "2920",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          },
                          "related": {
                            "href": "https://213.lvh.me/spaces/participatory_processes/2920",
                            "title": "<script>alert(\"participatory_process_title\");</script> Voluptatem ut minus. 17787",
                            "rel": "resource",
                            "meta": {
                              "space_id": "2920",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "scopes_enabled": false,
                          "amendments_enabled": false,
                          "attachments_allowed": false,
                          "collaborative_drafts_enabled": false,
                          "comments_enabled": true,
                          "comments_max_length": 1000,
                          "default_sort_order": "default",
                          "geocoding_enabled": false,
                          "minimum_votes_per_user": 0,
                          "official_proposals_enabled": true,
                          "participatory_texts_enabled": false,
                          "proposal_edit_before_minutes": 5,
                          "proposal_edit_time": "limited",
                          "proposal_limit": 0,
                          "resources_permissions_enabled": true,
                          "threshold_per_proposal": 0,
                          "vote_limit": 0,
                          "endorsements_enabled": true,
                          "votes_enabled": false,
                          "creation_enabled": false,
                          "proposal_answering_enabled": true,
                          "amendment_creation_enabled": true,
                          "amendment_reaction_enabled": true,
                          "amendment_promotion_enabled": true,
                          "can_create_proposals": false,
                          "can_vote": false,
                          "can_endorse": true,
                          "can_comment": true
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_component_item_response"
                }
              }
            }
          }
        }
      }
    },
    "/components/proposal_components": {
      "get": {
        "summary": "Proposal Components",
        "tags": [
          "Components"
        ],
        "operationId": "proposal_components",
        "description": "List or search proposal components of the organization",
        "parameters": [
          {
            "name": "filter[name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name not IN filter",
              "description": "match none of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name IN filter",
              "description": "match one of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_name_ starts with",
              "title": "name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name equal filter",
              "description": "_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name not equal filter",
              "description": "_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name like filter",
              "description": "matches _name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "name blank filter",
              "description": "_name_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "title": "participatory_space_type not IN filter",
              "description": "match none of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "title": "participatory_space_type IN filter",
              "description": "match one of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_participatory_space_type_ starts with",
              "title": "participatory_space_type starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Decidim::Assembly",
              "title": "participatory_space_type equal filter",
              "description": "_participatory_space_type_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Decidim::Assembly",
              "title": "participatory_space_type not equal filter",
              "description": "_participatory_space_type_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_type like filter",
              "description": "matches _participatory_space_type_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_type blank filter",
              "description": "_participatory_space_type_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "participatory_space_id IN filter",
              "description": "match one of _participatory_space_id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id equal filter",
              "description": "_participatory_space_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id less than filter",
              "description": "_participatory_space_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id greater than filter",
              "description": "_participatory_space_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id present filter",
              "description": "_participatory_space_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id blank filter",
              "description": "_participatory_space_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "List of proposal components",
            "content": {
              "application/json": {
                "examples": {
                  "ok_with_draft": {
                    "value": {
                      "data": [
                        {
                          "id": "10290",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "2945",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Delectus consequuntur sint. 20357"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:23:06Z",
                            "updated_at": "2025-07-01T06:23:06Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "5440",
                                  "type": "proposal"
                                },
                                {
                                  "id": "5441",
                                  "type": "proposal"
                                },
                                {
                                  "id": "5442",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 3
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://238.lvh.me/components/proposal_components/10290",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2945",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://238.lvh.me/spaces/participatory_processes/2945",
                              "title": "<script>alert(\"participatory_process_title\");</script> Voluptatem velit rerum. 20331",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2945",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "draft": {
                              "href": "https://238.lvh.me/api/rest_full/v0.2/draft_proposals/5443",
                              "title": "Draft Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10292",
                                "component_manifest": "proposals",
                                "space_id": "2945",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5443",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "10291",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "2945",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:23:06Z",
                            "updated_at": "2025-07-01T06:23:06Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://238.lvh.me/components/proposal_components/10291",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2945",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://238.lvh.me/spaces/participatory_processes/2945",
                              "title": "<script>alert(\"participatory_process_title\");</script> Voluptatem velit rerum. 20331",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2945",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "draft": {
                              "href": "https://238.lvh.me/api/rest_full/v0.2/draft_proposals/5443",
                              "title": "Draft Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10292",
                                "component_manifest": "proposals",
                                "space_id": "2945",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5443",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        },
                        {
                          "id": "10292",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "2945",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Cum at est. 20395"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:23:06Z",
                            "updated_at": "2025-07-01T06:23:06Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "5443",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://238.lvh.me/components/proposal_components/10292",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2945",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://238.lvh.me/spaces/participatory_processes/2945",
                              "title": "<script>alert(\"participatory_process_title\");</script> Voluptatem velit rerum. 20331",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2945",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "draft": {
                              "href": "https://238.lvh.me/api/rest_full/v0.2/draft_proposals/5443",
                              "title": "Draft Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10292",
                                "component_manifest": "proposals",
                                "space_id": "2945",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5443",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "10273",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::Assembly",
                            "participatory_space_id": "2054",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Dolorem aspernatur et. 19829"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:23:04Z",
                            "updated_at": "2025-07-01T06:23:04Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://233.lvh.me/components/proposal_components/10273",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2054",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://233.lvh.me/spaces/assemblies/2054",
                              "title": "<script>alert(\"assembly_title\");</script> Facere nihil iste. 19735",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2054",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "10274",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::Assembly",
                            "participatory_space_id": "2054",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Alias iure pariatur. 19835"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:23:04Z",
                            "updated_at": "2025-07-01T06:23:04Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://233.lvh.me/components/proposal_components/10274",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2054",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://233.lvh.me/spaces/assemblies/2054",
                              "title": "<script>alert(\"assembly_title\");</script> Facere nihil iste. 19735",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2054",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        }
                      ]
                    }
                  },
                  "components_in_Process": {
                    "value": {
                      "data": [
                        {
                          "id": "10286",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "2943",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Voluptas architecto velit. 20151"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:23:05Z",
                            "updated_at": "2025-07-01T06:23:05Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "5434",
                                  "type": "proposal"
                                },
                                {
                                  "id": "5435",
                                  "type": "proposal"
                                },
                                {
                                  "id": "5436",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 3
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://236.lvh.me/components/proposal_components/10286",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2943",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://236.lvh.me/spaces/participatory_processes/2943",
                              "title": "<script>alert(\"participatory_process_title\");</script> Quis atque laborum. 20125",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2943",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "10287",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "2943",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:23:05Z",
                            "updated_at": "2025-07-01T06:23:05Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://236.lvh.me/components/proposal_components/10287",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2943",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://236.lvh.me/spaces/participatory_processes/2943",
                              "title": "<script>alert(\"participatory_process_title\");</script> Quis atque laborum. 20125",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2943",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "10288",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "2944",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Perspiciatis maiores alias. 20253"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:23:05Z",
                            "updated_at": "2025-07-01T06:23:06Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "5437",
                                  "type": "proposal"
                                },
                                {
                                  "id": "5438",
                                  "type": "proposal"
                                },
                                {
                                  "id": "5439",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 3
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://237.lvh.me/components/proposal_components/10288",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2944",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://237.lvh.me/spaces/participatory_processes/2944",
                              "title": "<script>alert(\"participatory_process_title\");</script> Eos ratione ab. 20227",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2944",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "10289",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "2944",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:23:06Z",
                            "updated_at": "2025-07-01T06:23:06Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://237.lvh.me/components/proposal_components/10289",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2944",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://237.lvh.me/spaces/participatory_processes/2944",
                              "title": "<script>alert(\"participatory_process_title\");</script> Eos ratione ab. 20227",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2944",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_component_index_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/draft_proposals/{id}": {
      "delete": {
        "summary": "Withdrawn a draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "operationId": "withdrawnDraftProposal",
        "description": "Withdrawn a draft proposal. This action cannot be undone.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Draft Id"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Draft proposal Removed",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "5448",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-07-01T06:23:08Z",
                          "updated_at": "2025-07-01T06:23:08Z",
                          "title": {},
                          "body": {},
                          "errors": {
                            "title": [],
                            "body": []
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "2948",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "10296",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "8230",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "8230",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://241.lvh.me/public/components/10296",
                            "title": "<script>alert(\"component_name\");</script> At recusandae sunt. 20585",
                            "rel": "resource",
                            "meta": {
                              "space_id": "2948",
                              "space_manifest": "participatory_processes",
                              "component_id": "10296",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://241.lvh.me/api/rest_full/v0.2/proposals/5448",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10296",
                              "component_manifest": "proposals",
                              "space_id": "2948",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5448",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://241.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10296",
                              "component_manifest": "proposals",
                              "space_id": "2948",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5448",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "E6g539lY4GRpC-LC0Q0oNxxPHwuKKqbih4uRxcMCk80",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/draft_proposal_item_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Display a draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "operationId": "draftProposal",
        "description": "Detail a draft proposal. Raise HTTP 404 error if no draft is created for now.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Draft Id"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Draft Found",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "5454",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-07-01T06:23:16Z",
                          "updated_at": "2025-07-01T06:23:16Z",
                          "title": {},
                          "body": {},
                          "errors": {
                            "title": [],
                            "body": [
                              "Body cannot be blank"
                            ]
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "2954",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "10302",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "8238",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "8238",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://261.lvh.me/public/components/10302",
                            "title": "<script>alert(\"component_name\");</script> Corrupti voluptate ea. 20965",
                            "rel": "resource",
                            "meta": {
                              "space_id": "2954",
                              "space_manifest": "participatory_processes",
                              "component_id": "10302",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://261.lvh.me/api/rest_full/v0.2/proposals/5454",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10302",
                              "component_manifest": "proposals",
                              "space_id": "2954",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5454",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://261.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10302",
                              "component_manifest": "proposals",
                              "space_id": "2954",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5454",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "k_HH38Q_fBZZnXbMIaOgLq9HsiD0fKjSx-A9zFAuR40",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/draft_proposal_item_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "operationId": "updateDraftProposal",
        "description": "This endpoint allows you to  update a draft proposal associated with your application ID.\nDrafts updated via this API are not visible in the Decidim front-end, and drafts created from the Decidim application are not editable through the API.\nTherefore, any draft you create here is new and tied to your application's credentials.\n\n### Example Request\n\n```http\nPUT /public/assemblies/12/2319/proposals/draft\nContent-Type: application/json\nAuthorization: Bearer YOUR_bearer_token\n\n{\n  \"title\": \"My valid title\"\n}\n```\n## Access Requirements\n\n* Authentication: This endpoint requires an impersonation token. You must create drafts on behalf of a participant; drafts cannot be created using a service token (credential_token).\n\n## Error Handling\n\n* Field Errors: Only errors related to the fields you're updating will be returned.\n* Publishable Status: To determine if the draft is publishable, check the data.meta.publishable field in the response.\n\n### Example response\n```json\n{\n  \"data\": {\n    \"id\": \"12345\",\n    \"type\": \"proposal\",\n    \"attributes\": {\n      \"title\": \"My valid title\",\n      \"body\": null\n    },\n    \"meta\": {\n      \"publishable\": false\n    }\n  }\n}\n```\nIn this example, the title is valid, so the server returns a 200 OK status.\nHowever, since the body is blank, meta.publishable is false, indicating that the draft is not yet ready for publication.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Draft Id"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Draft updated",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "5775",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-07-01T06:24:48Z",
                          "updated_at": "2025-07-01T06:24:48Z",
                          "title": {
                            "fr": "This is a valid proposal title sample"
                          },
                          "body": {
                            "fr": ""
                          },
                          "errors": {
                            "title": [],
                            "body": [
                              "Body cannot be blank"
                            ]
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3131",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "10815",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "8830",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "8830",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://609.lvh.me/public/components/10815",
                            "title": "<script>alert(\"component_name\");</script> Quia consequatur mollitia. 43089",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3131",
                              "space_manifest": "participatory_processes",
                              "component_id": "10815",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://609.lvh.me/api/rest_full/v0.2/proposals/5775",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10815",
                              "component_manifest": "proposals",
                              "space_id": "3131",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5775",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://609.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10815",
                              "component_manifest": "proposals",
                              "space_id": "3131",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5775",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "ksLx6u7H9AtVjxWK7g2M4OR8_aDAovmQuttgNpJPNds",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  },
                  "ok_empty": {
                    "value": {
                      "data": {
                        "id": "5776",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-07-01T06:24:48Z",
                          "updated_at": "2025-07-01T06:24:48Z",
                          "title": {},
                          "body": {},
                          "errors": {
                            "title": [
                              "Title cannot be blank"
                            ],
                            "body": [
                              "Body cannot be blank"
                            ]
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3132",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "10816",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "8831",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "8831",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://610.lvh.me/public/components/10816",
                            "title": "<script>alert(\"component_name\");</script> Ea pariatur asperiores. 43133",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3132",
                              "space_manifest": "participatory_processes",
                              "component_id": "10816",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://610.lvh.me/api/rest_full/v0.2/proposals/5776",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10816",
                              "component_manifest": "proposals",
                              "space_id": "3132",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5776",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://610.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10816",
                              "component_manifest": "proposals",
                              "space_id": "3132",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5776",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "-49DDYS-6JEIrdDewtGiJBpm5Pe1W6eBe7O1OkrUZM0",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/draft_proposal_item_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Update Draft Proposal Payload",
                "properties": {
                  "data": {
                    "type": "object",
                    "title": "Update Draft Proposal Payload Data",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Title of the draft"
                      },
                      "body": {
                        "type": "string",
                        "description": "Content of the draft"
                      },
                      "locale": {
                        "type": "string",
                        "enum": [
                          "en",
                          "fr"
                        ],
                        "description": "Locale of the draft. default to user locale"
                      }
                    },
                    "description": "Payload to update in the proposal"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/organizations/{id}": {
      "get": {
        "summary": "Organization",
        "tags": [
          "Organizations"
        ],
        "operationId": "organization",
        "description": "Show organization",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "404": {
            "description": "Organization Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Organization shown",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "4146",
                        "type": "organization",
                        "attributes": {
                          "host": "249.lvh.me",
                          "secondary_hosts": [],
                          "default_locale": "en",
                          "available_locales": [
                            "en",
                            "fr"
                          ],
                          "enable_machine_translations": false,
                          "enable_participatory_space_filters": true,
                          "badges_enabled": true,
                          "rich_text_editor_in_public_views": false,
                          "comments_max_length": 1000,
                          "time_zone": "UTC",
                          "users_registration_mode": "enabled",
                          "user_groups_enabled": true,
                          "force_users_to_authenticate_before_access_organization": false,
                          "reference_prefix": "JD",
                          "send_welcome_notification": true,
                          "name": {
                            "en": "Heller, Wisoky and Sawayn",
                            "fr": "Kling LLC"
                          },
                          "description": {
                            "en": "<p><script>alert(\"organization_description\");</script> Eos quae qui. 20763</p>"
                          },
                          "extended_data": {},
                          "created_at": "2025-07-01T06:23:11Z",
                          "updated_at": "2025-07-01T06:23:11Z"
                        },
                        "meta": {
                          "locales": [
                            "en",
                            "fr"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/organization_item_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update organization",
        "tags": [
          "Organizations"
        ],
        "operationId": "updateOrganization",
        "description": "This endpoint allows you to update an organization.\n\n### Update host\nTo update the host, send in your payload the `host` attribute. It will be saved as an `unconfirmed_host` extended data attribute. \nOnce saved, a job will be enqueued to reverse DNS the unconfirmed host before actually updating the host.\nThe `host` attribute must be unique across all organizations.\nMore information on this update process is documented in the [Safe host update](https://octree-gva.github.io/decidim-rest-full/dev/update-hosts) page.\n\n### Update name\nTo update the name, send in your payload the `name` attribute.\nThe `name` attribute must be unique across all organizations.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "404": {
            "description": "Organization Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Organization Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_name_taken": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Name en has already been taken"
                    }
                  },
                  "bad_request_host_taken": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Unconfirmed host has already been taken"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Organization updated",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "4211",
                        "type": "organization",
                        "attributes": {
                          "host": "314.lvh.me",
                          "secondary_hosts": [
                            "[]"
                          ],
                          "default_locale": "en",
                          "available_locales": [
                            "en",
                            "fr"
                          ],
                          "enable_machine_translations": false,
                          "enable_participatory_space_filters": true,
                          "badges_enabled": true,
                          "rich_text_editor_in_public_views": false,
                          "comments_max_length": 1000,
                          "time_zone": "UTC",
                          "users_registration_mode": "enabled",
                          "user_groups_enabled": true,
                          "force_users_to_authenticate_before_access_organization": false,
                          "reference_prefix": "MD",
                          "send_welcome_notification": true,
                          "name": {
                            "en": "Olson and Sons",
                            "fr": "Mitchell Inc"
                          },
                          "description": {
                            "en": "<p><script>alert(\"organization_description\");</script> Est voluptatum quae. 23513</p>"
                          },
                          "extended_data": {},
                          "created_at": "2025-07-01T06:23:38Z",
                          "updated_at": "2025-07-01T06:23:38Z"
                        },
                        "meta": {
                          "locales": [
                            "en",
                            "fr"
                          ],
                          "unconfirmed_host": "new-host.com"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/organization_item_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Update Organization Payload",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/organization_attributes"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/organizations/{id}/extended_data": {
      "get": {
        "summary": "Organization extended data",
        "tags": [
          "Organizations Extended Data"
        ],
        "operationId": "organizationData",
        "description": "Fetch organization extended data",
        "parameters": [
          {
            "name": "object_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "object path, in dot style, like foo.bar"
            }
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Id of the organization"
            },
            "required": true
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Resource not found",
                      "error_description": "Resource not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Extended Data for a given object_path given",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "birthday": "1989-01-28",
                        "personal": {
                          "birthday": "1989-01-28"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/organization_extended_data"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update organization extended data",
        "tags": [
          "Organizations Extended Data"
        ],
        "operationId": "setOrganizationExtendedData",
        "description": "The extended_data feature allows you to update a hash with recursive merging. Use the body payload with these keys:\n\n1. `data`: The value or hash you want to update.\n2. `object_path`: The dot-style path to the key (e.g., access.this.key).\n\n**Root path**<br />\nTo update data from root of the hash, use `object_path=\".\"`.\n\nExample:\n```\n  body={\"data\": {\"name\": \"Jane\"}, \"object_path\": \"personnal\"}\n```\nThis recursively merges data into the hash without removing existing keys.\n\n**Merge some data**<br />\nInitial hash:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\"}\n  }\n```\nPatch payload:\n```json\n  {\n    \"data\": {\n      \"name\": \"Jane\"\n    },\n    \"object_path\": \"personnal\"\n  }\n```\nResult:\n```\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\", \"name\": \"Jane\"}\n  }\n```\n\n**Create new Paths**<br />\nPaths are created as needed.\nExemple:\n```json\n  body = {\"data\": {\"external_user_id\": 12}, \"object_path\": \"data-store.my-app.foo\"}\n```\nResult:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\"},\n    \"data-store\": {\"my-app\": {\"foo\": {\"external_user_id\": 12}}}\n  }\n```\nAlternatively:\n```\n  body = {\"data\": 12, \"object_path\": \"data-store.my-app.foo.external_user_id\"}\n```\n\n**Remove a key**<br />\nSet a key to null or an empty value to remove it.\n\nExample: Initial hash:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\", \"name\": \"Jane\"}\n  }\n```\nPatch:\n```json\n  body = {\"data\": {\"birthday\": \"\"}, \"object_path\": \"personnal\"}\n```\n\nResult:\n```\n{\n  \"personnal\": {\"name\": \"Jane\"}\n}\n```\n\n**Return Value**<br />\nThe update request returns the updated value at the specified path.\n\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Id of the organization"
            },
            "required": true
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Update extended data value",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "foo": "bar"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/organization_extended_data"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "User Extended Data Payload",
                "properties": {
                  "data": {
                    "type": "object",
                    "title": "User Extended Data Data",
                    "description": "New value for the extended data at the given path"
                  },
                  "object_path": {
                    "type": "string",
                    "description": "object path, in dot style, like foo.bar. use '.' to update the whole user data"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/proposals": {
      "get": {
        "summary": "Proposals",
        "tags": [
          "Proposals"
        ],
        "operationId": "proposals",
        "description": "Search proposals",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "space_manifest",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "description": "Space type"
            },
            "required": false
          },
          {
            "name": "space_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Space Id"
            },
            "required": false
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "published_at",
                "rand"
              ]
            },
            "description": "Order by",
            "required": false
          },
          {
            "name": "order_direction",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "Order direction",
            "required": false
          },
          {
            "name": "filter[voted_weight_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "voted_weight IN filter",
              "description": "match one of _voted_weight_'s values in array. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight equal filter",
              "description": "_voted_weight_ is equal to. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight less than filter",
              "description": "_voted_weight_ is less than. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight greater than filter",
              "description": "_voted_weight_ is greater than. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "voted_weight present filter",
              "description": "_voted_weight_ is not null and not empty. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "voted_weight blank filter",
              "description": "_voted_weight_ is null or empty. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[state_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "state not IN filter",
              "description": "match none of _state_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[state_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "state IN filter",
              "description": "match one of _state_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[state_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_state_ starts with",
              "title": "state starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[state_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state equal filter",
              "description": "_state_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[state_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state not equal filter",
              "description": "_state_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[state_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state like filter",
              "description": "matches _state_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[state_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "state blank filter",
              "description": "_state_ is null or empty"
            },
            "required": false
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Proposal List",
            "content": {
              "application/json": {
                "examples": {
                  "state_accepted": {
                    "value": {
                      "data": [
                        {
                          "id": "5499",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-01T06:23:23Z",
                            "updated_at": "2025-07-01T06:23:23Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Quisquam et corporis. 21959"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Excepturi pariatur quod. 21961</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "2968",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "10316",
                                "type": "proposal_component"
                              }
                            },
                            "state": {
                              "data": {
                                "id": "8492",
                                "type": "proposal_state"
                              },
                              "meta": {
                                "token": "accepted"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "8295",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "8295",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://275.lvh.me/public/components/10316",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2968",
                                "space_manifest": "participatory_processes",
                                "component_id": "10316",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://275.lvh.me/api/rest_full/v0.2/proposals/5499",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10316",
                                "component_manifest": "proposals",
                                "space_id": "2968",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5499",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://275.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10316",
                                "component_manifest": "proposals",
                                "space_id": "2968",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5499",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        }
                      ]
                    }
                  },
                  "state_non_rejected": {
                    "value": {
                      "data": [
                        {
                          "id": "5490",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-01T06:23:22Z",
                            "updated_at": "2025-07-01T06:23:22Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Aut nulla doloremque. 21833"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Repellendus similique itaque. 21835</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "2967",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "10315",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "8286",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "8286",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://274.lvh.me/public/components/10315",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://274.lvh.me/api/rest_full/v0.2/proposals/5490",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5490",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://274.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5490",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "5491",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-01T06:23:22Z",
                            "updated_at": "2025-07-01T06:23:22Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Omnis velit non. 21843"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Est veritatis voluptatibus. 21845</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "2967",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "10315",
                                "type": "proposal_component"
                              }
                            },
                            "state": {
                              "data": {
                                "id": "8489",
                                "type": "proposal_state"
                              },
                              "meta": {
                                "token": "accepted"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "8287",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "8287",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://274.lvh.me/public/components/10315",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://274.lvh.me/api/rest_full/v0.2/proposals/5491",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5491",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://274.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5491",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "5493",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-01T06:23:23Z",
                            "updated_at": "2025-07-01T06:23:23Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Tenetur non nostrum. 21863"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Ipsa sunt voluptate. 21865</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "2967",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "10315",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "8289",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "8289",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://274.lvh.me/public/components/10315",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://274.lvh.me/api/rest_full/v0.2/proposals/5493",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5493",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://274.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5493",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "5494",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-01T06:23:23Z",
                            "updated_at": "2025-07-01T06:23:23Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Eum repellendus modi. 21873"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Perspiciatis aut incidunt. 21875</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "2967",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "10315",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "8290",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "8290",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://274.lvh.me/public/components/10315",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://274.lvh.me/api/rest_full/v0.2/proposals/5494",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5494",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://274.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5494",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "5495",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-01T06:23:23Z",
                            "updated_at": "2025-07-01T06:23:23Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Laudantium libero consequatur. 21883"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Perferendis voluptates facere. 21885</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "2967",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "10315",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "8291",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "8291",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://274.lvh.me/public/components/10315",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://274.lvh.me/api/rest_full/v0.2/proposals/5495",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5495",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://274.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5495",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "5496",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-01T06:23:23Z",
                            "updated_at": "2025-07-01T06:23:23Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Soluta illum officiis. 21893"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Omnis in laboriosam. 21895</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "2967",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "10315",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "8292",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "8292",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://274.lvh.me/public/components/10315",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://274.lvh.me/api/rest_full/v0.2/proposals/5496",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5496",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://274.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5496",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "5497",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-01T06:23:23Z",
                            "updated_at": "2025-07-01T06:23:23Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Non adipisci quos. 21903"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Quo maiores qui. 21905</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "2967",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "10315",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "8293",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "8293",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://274.lvh.me/public/components/10315",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://274.lvh.me/api/rest_full/v0.2/proposals/5497",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5497",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://274.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10315",
                                "component_manifest": "proposals",
                                "space_id": "2967",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5497",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "5516",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-01T06:23:25Z",
                            "updated_at": "2025-07-01T06:23:25Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Sint omnis qui. 22281"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Est sed perspiciatis. 22283</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "2972",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "10320",
                                "type": "proposal_component"
                              }
                            },
                            "state": {
                              "data": {
                                "id": "8504",
                                "type": "proposal_state"
                              },
                              "meta": {
                                "token": "accepted"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "8312",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "8312",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://279.lvh.me/public/components/10320",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2972",
                                "space_manifest": "participatory_processes",
                                "component_id": "10320",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://279.lvh.me/api/rest_full/v0.2/proposals/5516",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10320",
                                "component_manifest": "proposals",
                                "space_id": "2972",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5516",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://279.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10320",
                                "component_manifest": "proposals",
                                "space_id": "2972",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5516",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "5517",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-01T06:23:25Z",
                            "updated_at": "2025-07-01T06:23:25Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Ducimus necessitatibus nemo. 22291"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Explicabo temporibus eaque. 22293</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "2972",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "10320",
                                "type": "proposal_component"
                              }
                            },
                            "state": {
                              "data": {
                                "id": "8504",
                                "type": "proposal_state"
                              },
                              "meta": {
                                "token": "accepted"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "8313",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "8313",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://279.lvh.me/public/components/10320",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2972",
                                "space_manifest": "participatory_processes",
                                "component_id": "10320",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://279.lvh.me/api/rest_full/v0.2/proposals/5517",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10320",
                                "component_manifest": "proposals",
                                "space_id": "2972",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5517",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://279.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10320",
                                "component_manifest": "proposals",
                                "space_id": "2972",
                                "space_manifest": "participatory_processes",
                                "resource_id": "5517",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_index_response"
                }
              }
            }
          }
        }
      }
    },
    "/blogs/{id}": {
      "get": {
        "summary": "Show a blog detail",
        "tags": [
          "Blogs"
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "blogs"
            ]
          }
        ],
        "operationId": "blog",
        "description": "Get blog post details",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Blog Post Id"
            },
            "required": true
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Blog Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Blog Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blog_item_response"
                },
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "1377",
                        "type": "blog",
                        "attributes": {
                          "created_at": "2025-07-01T06:23:32Z",
                          "updated_at": "2025-07-01T06:23:32Z",
                          "title": {
                            "en": "<script>alert(\"blog_title\");</script> Laudantium ut quaerat. 23221"
                          },
                          "body": {
                            "en": "<p><script>alert(\"blog_body\");</script> Sit inventore ut. 23223</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "2991",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "10339",
                              "type": "blog_component"
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://298.lvh.me/public/components/10339",
                            "title": "<script>alert(\"component_name\");</script> In sequi alias. 23201",
                            "rel": "resource",
                            "meta": {
                              "space_id": "2991",
                              "space_manifest": "participatory_processes",
                              "component_id": "10339",
                              "component_manifest": "blogs",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://298.lvh.me/api/rest_full/v0.2/blogs/1377",
                            "title": "Blogs Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10339",
                              "component_manifest": "blogs",
                              "space_id": "2991",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1377",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://298.lvh.me/api/rest_full/v0.2/blogs",
                            "title": "Blogs List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10339",
                              "component_manifest": "blogs",
                              "space_id": "2991",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1377",
                              "action_method": "GET"
                            }
                          },
                          "next": {
                            "href": "https://298.lvh.me/api/rest_full/v0.2/blogs/1376",
                            "title": "Next Blog Post",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10339",
                              "component_manifest": "blogs",
                              "space_id": "2991",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1376",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://298.lvh.me/api/rest_full/v0.2/blogs/1378",
                            "title": "Previous Blog Post",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10339",
                              "component_manifest": "blogs",
                              "space_id": "2991",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1378",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  },
                  "ok_no_more": {
                    "value": {
                      "data": {
                        "id": "1371",
                        "type": "blog",
                        "attributes": {
                          "created_at": "2025-07-01T06:23:31Z",
                          "updated_at": "2025-07-01T06:23:31Z",
                          "title": {
                            "en": "<script>alert(\"blog_title\");</script> Ut consequatur odio. 23151"
                          },
                          "body": {
                            "en": "<p><script>alert(\"blog_body\");</script> Voluptate id saepe. 23153</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "2990",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "10338",
                              "type": "blog_component"
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://297.lvh.me/public/components/10338",
                            "title": "<script>alert(\"component_name\");</script> Est maxime ut. 23143",
                            "rel": "resource",
                            "meta": {
                              "space_id": "2990",
                              "space_manifest": "participatory_processes",
                              "component_id": "10338",
                              "component_manifest": "blogs",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://297.lvh.me/api/rest_full/v0.2/blogs/1371",
                            "title": "Blogs Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10338",
                              "component_manifest": "blogs",
                              "space_id": "2990",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1371",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://297.lvh.me/api/rest_full/v0.2/blogs",
                            "title": "Blogs List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10338",
                              "component_manifest": "blogs",
                              "space_id": "2990",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1371",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://297.lvh.me/api/rest_full/v0.2/blogs/1372",
                            "title": "Previous Blog Post",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10338",
                              "component_manifest": "blogs",
                              "space_id": "2990",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1372",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/oauth/token": {
      "post": {
        "summary": "Request a OAuth token throught ROPC",
        "tags": [
          "OAuth"
        ],
        "security": [],
        "operationId": "createToken",
        "description": "Create a oauth token for the given scopes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Token returned",
            "content": {
              "application/json": {
                "examples": {
                  "ok_ropc_login": {
                    "value": {
                      "access_token": "8M25D5p6rWd-yVYNIEJtI-KKayBdnx4VomTwu7Bg09s",
                      "token_type": "Bearer",
                      "expires_in": 7200,
                      "scope": "public proposals",
                      "created_at": 1751351082
                    }
                  },
                  "ok_ropc_impersonate": {
                    "value": {
                      "access_token": "JWApqk35TwJkAY1KzenK3ex4Q8-DCDdEUEu9Y-jAvn8",
                      "token_type": "Bearer",
                      "expires_in": 7200,
                      "scope": "public",
                      "created_at": 1751351082
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "invalid_username_on_register": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "User not found. To create one, user meta.register_on_missing"
                    }
                  },
                  "user_not_found": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "User not found. To create one, user meta.register_on_missing"
                    }
                  },
                  "bad_request": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Invalid Api Client, check credentials"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/oauth_grant_param"
              }
            }
          },
          "required": true
        }
      }
    },
    "/oauth/introspect": {
      "post": {
        "summary": "Introspect a OAuth token",
        "tags": [
          "OAuth"
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          },
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "operationId": "introspectToken",
        "description": "Get given oauth token details",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User details returned",
            "content": {
              "application/json": {
                "examples": {
                  "bearer_ropc": {
                    "value": {
                      "active": true,
                      "scope": "public",
                      "client_id": "yy1zvAQtoW8EU_rTxLGKNcVaIMwsLS3oBSQyxMdpEak",
                      "token_type": "Bearer",
                      "exp": 3505380440,
                      "iat": 1751351020,
                      "sub": 3993,
                      "aud": "https://316.lvh.me",
                      "resource": {
                        "id": "8368",
                        "type": "user",
                        "attributes": {
                          "email": "user447@example.org",
                          "name": "Ross Hoppe",
                          "created_at": "2025-07-01T06:23:40Z",
                          "updated_at": "2025-07-01T06:23:40Z",
                          "personal_url": "http://rutherford-kiehn.example/pablo.bernier",
                          "locale": "en"
                        },
                        "relationships": {},
                        "meta": {
                          "blocked": false,
                          "locked": false
                        }
                      }
                    }
                  },
                  "bearer_client_credential": {
                    "value": {
                      "active": true,
                      "scope": "public",
                      "client_id": "H8fhODC_2Fy7olIgDIrlKJFymIJSFddtfQhqnsbhwAo",
                      "token_type": "Bearer",
                      "exp": 3505380440,
                      "iat": 1751351020,
                      "sub": 3996,
                      "aud": "https://317.lvh.me"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/introspect_data"
                }
              }
            }
          },
          "401": {
            "description": "When the token is invalid",
            "content": {
              "application/json": {
                "examples": {
                  "expired_token": {
                    "value": {
                      "error": "invalid_token",
                      "error_description": "The access token expired",
                      "state": "unauthorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/organizations": {
      "get": {
        "summary": "Organizations",
        "tags": [
          "Organizations"
        ],
        "operationId": "organizations",
        "description": "List available organizations",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Organizations listed",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "2",
                          "type": "organization",
                          "attributes": {
                            "host": "localhost",
                            "secondary_hosts": [
                              "0.0.0.0",
                              "127.0.0.1"
                            ],
                            "default_locale": "en",
                            "available_locales": [
                              "en",
                              "fr"
                            ],
                            "enable_machine_translations": false,
                            "enable_participatory_space_filters": true,
                            "badges_enabled": true,
                            "rich_text_editor_in_public_views": true,
                            "comments_max_length": 1000,
                            "time_zone": "UTC",
                            "users_registration_mode": "enabled",
                            "user_groups_enabled": true,
                            "force_users_to_authenticate_before_access_organization": false,
                            "reference_prefix": "PhD",
                            "send_welcome_notification": true,
                            "name": {
                              "en": "Schowalter-Kuphal",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p>Ea quis aspernatur voluptatibus beatae maxime quis consequatur sit necessitatibus eos omnis blanditiis sed excepturi.</p>"
                            },
                            "extended_data": {},
                            "created_at": "2025-06-25T05:51:20Z",
                            "updated_at": "2025-06-28T06:23:54Z"
                          },
                          "meta": {
                            "locales": [
                              "en",
                              "fr"
                            ]
                          }
                        },
                        {
                          "id": "4216",
                          "type": "organization",
                          "attributes": {
                            "host": "319.lvh.me",
                            "secondary_hosts": [],
                            "default_locale": "en",
                            "available_locales": [
                              "en",
                              "fr"
                            ],
                            "enable_machine_translations": false,
                            "enable_participatory_space_filters": true,
                            "badges_enabled": true,
                            "rich_text_editor_in_public_views": false,
                            "comments_max_length": 1000,
                            "time_zone": "UTC",
                            "users_registration_mode": "enabled",
                            "user_groups_enabled": true,
                            "force_users_to_authenticate_before_access_organization": false,
                            "reference_prefix": "V",
                            "send_welcome_notification": true,
                            "name": {
                              "en": "Johnson-Halvorson",
                              "fr": "Farrell, Dibbert and Bogisich"
                            },
                            "description": {
                              "en": "<p><script>alert(\"organization_description\");</script> Sequi totam ducimus. 23559</p>"
                            },
                            "extended_data": {},
                            "created_at": "2025-07-01T06:23:42Z",
                            "updated_at": "2025-07-01T06:23:42Z"
                          },
                          "meta": {
                            "locales": [
                              "en",
                              "fr"
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/organization_index_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/draft_proposals/{id}/publish": {
      "post": {
        "summary": "Publish a draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "operationId": "publishDraftProposal",
        "description": "Publish a draft proposal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Draft Id"
            },
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Body cannot be blank"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Draft Proposal published",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "5524",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-01T06:23:44Z",
                          "updated_at": "2025-07-01T06:23:45Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Voluptas repellendus voluptatem. 23679"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Rerum fugiat dolorem. 23681</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "2998",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "10346",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "8372",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "8372",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://325.lvh.me/public/components/10346",
                            "title": "<script>alert(\"component_name\");</script> Facere sit esse. 23673",
                            "rel": "resource",
                            "meta": {
                              "space_id": "2998",
                              "space_manifest": "participatory_processes",
                              "component_id": "10346",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://325.lvh.me/api/rest_full/v0.2/proposals/5524",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10346",
                              "component_manifest": "proposals",
                              "space_id": "2998",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5524",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://325.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10346",
                              "component_manifest": "proposals",
                              "space_id": "2998",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5524",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "client_id": 4024
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_item_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/components/blog_components/{id}": {
      "get": {
        "summary": "Blog Component Details",
        "tags": [
          "Components"
        ],
        "operationId": "blog_component",
        "description": "Blog component details",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          },
          {
            "name": "space_manifest",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "description": "Space type"
            },
            "required": false
          },
          {
            "name": "space_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Space Id"
            },
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Blog Component",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "10362",
                        "type": "blog_component",
                        "attributes": {
                          "manifest_name": "blogs",
                          "participatory_space_type": "Decidim::ParticipatoryProcess",
                          "participatory_space_id": "3014",
                          "name": {
                            "en": "<script>alert(\"component_name\");</script> Dolores voluptatem nisi. 24543"
                          },
                          "global_announcement": {},
                          "created_at": "2025-07-01T06:23:50Z",
                          "updated_at": "2025-07-01T06:23:50Z"
                        },
                        "relationships": {
                          "resources": {
                            "data": [],
                            "meta": {
                              "count": 0
                            }
                          }
                        },
                        "links": {
                          "self": {
                            "href": "https://340.lvh.me/components/blog_components/10362",
                            "title": "<script>alert(\"component_name\");</script> Dolores voluptatem nisi. 24543",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3014",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          },
                          "related": {
                            "href": "https://340.lvh.me/spaces/participatory_processes/3014",
                            "title": "<script>alert(\"participatory_process_title\");</script> Laudantium rerum explicabo. 24553",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3014",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "scopes_enabled": false
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/blog_component_item_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List available Users",
        "tags": [
          "Users"
        ],
        "operationId": "users",
        "description": "List or search users of the organization",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[nickname_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "nickname not IN filter",
              "description": "match none of _nickname_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[nickname_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "nickname IN filter",
              "description": "match one of _nickname_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[nickname_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_nickname_ starts with",
              "title": "nickname starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[nickname_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "nickname equal filter",
              "description": "_nickname_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[nickname_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "nickname not equal filter",
              "description": "_nickname_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[nickname_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "nickname like filter",
              "description": "matches _nickname_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[nickname_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "nickname blank filter",
              "description": "_nickname_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "title": "id IN filter",
              "description": "match one of _id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[id_eq]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id equal filter",
              "description": "_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[id_lt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id less than filter",
              "description": "_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[id_gt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id greater than filter",
              "description": "_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id present filter",
              "description": "_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id blank filter",
              "description": "_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[extended_data_cont]",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "example": "\"foo\": \"bar\"",
            "description": "Search on user extended_data. use the format: `\"<key>\":<space>\"<value>\"`"
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "oauth"
            ]
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Users listed",
            "content": {
              "application/json": {
                "examples": {
                  "user_fr": {
                    "value": {
                      "data": [
                        {
                          "id": "8412",
                          "type": "user",
                          "attributes": {
                            "name": "Connie Reilly",
                            "nickname": "kk2d8my_490",
                            "personal_url": "http://bradtke.test/denny",
                            "email": "user491@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Qui et provident. 25093\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Delectus nesciunt natus. 25094\"}}",
                            "extended_data": {},
                            "locale": "fr",
                            "created_at": "2025-07-01T06:23:54Z",
                            "updated_at": "2025-07-01T06:23:54Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "filter_by_extended_data": {
                    "value": {
                      "data": []
                    }
                  },
                  "filter_by_id_in": {
                    "value": {
                      "data": [
                        {
                          "id": "8426",
                          "type": "user",
                          "attributes": {
                            "name": "Glen Kulas",
                            "nickname": "98bycxao_502",
                            "personal_url": "http://waelchi.example/shiela",
                            "email": "user505@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Quas aliquam eveniet. 25145\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Atque fugiat est. 25146\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-01T06:23:55Z",
                            "updated_at": "2025-07-01T06:23:55Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "8427",
                          "type": "user",
                          "attributes": {
                            "name": "Desirae Durgan",
                            "nickname": "ut5qt00o_503",
                            "personal_url": "http://turner.test/sadie_nienow",
                            "email": "user506@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Voluptas et fuga. 25147\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Beatae expedita autem. 25148\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-01T06:23:55Z",
                            "updated_at": "2025-07-01T06:23:55Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "8428",
                          "type": "user",
                          "attributes": {
                            "name": "Timika Rowe DVM",
                            "nickname": "bbmk_504",
                            "personal_url": "http://towne.test/blake",
                            "email": "user507@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Quia ipsam blanditiis. 25149\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Eligendi veritatis consequatur. 25150\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-01T06:23:55Z",
                            "updated_at": "2025-07-01T06:23:55Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "8425",
                          "type": "user",
                          "attributes": {
                            "name": "Elia Pfeffer",
                            "nickname": "hduuag7ze_501",
                            "personal_url": "http://gibson.example/bryon",
                            "email": "user504@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Facilis asperiores nulla. 25143\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Velit alias maiores. 25144\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-01T06:23:55Z",
                            "updated_at": "2025-07-01T06:23:55Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "8429",
                          "type": "user",
                          "attributes": {
                            "name": "Msgr. Jude Mosciski",
                            "nickname": "cuzz_505",
                            "personal_url": "http://spinka.test/ardelle",
                            "email": "user508@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Nam mollitia incidunt. 25151\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Voluptatem expedita recusandae. 25152\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-01T06:23:55Z",
                            "updated_at": "2025-07-01T06:23:55Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "8433",
                          "type": "user",
                          "attributes": {
                            "name": "Ta Connelly",
                            "nickname": "ndconqzf2_509",
                            "personal_url": "http://franecki-wolff.example/haywood",
                            "email": "user512@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Nostrum quia aut. 25183\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Praesentium quis et. 25184\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-01T06:23:57Z",
                            "updated_at": "2025-07-01T06:23:57Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "8434",
                          "type": "user",
                          "attributes": {
                            "name": "Francisco Roob",
                            "nickname": "4u80n2_510",
                            "personal_url": "http://lang-rutherford.test/lesha.gleason",
                            "email": "user513@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Accusantium praesentium minus. 25185\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Dolor sint nulla. 25186\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-01T06:23:57Z",
                            "updated_at": "2025-07-01T06:23:57Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "filter_by_nickname": {
                    "value": {
                      "data": [
                        {
                          "id": "8439",
                          "type": "user",
                          "attributes": {
                            "name": "Mrs. Forrest Lehner",
                            "nickname": "blue-panda-218",
                            "personal_url": "http://mraz.example/alvin",
                            "email": "user518@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Consectetur iste in. 25211\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Ut maxime ea. 25212\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-01T06:23:58Z",
                            "updated_at": "2025-07-01T06:23:58Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "8451",
                          "type": "user",
                          "attributes": {
                            "name": "Pres. Jacquie Wehner",
                            "nickname": "1_525",
                            "personal_url": "http://homenick.test/rowena.herzog",
                            "email": "user530@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Vel autem ipsa. 25251\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Porro voluptates officiis. 25252\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-01T06:23:58Z",
                            "updated_at": "2025-07-01T06:23:58Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "8452",
                          "type": "user",
                          "attributes": {
                            "name": "Lucile Abernathy IV",
                            "nickname": "rbfdbyx_526",
                            "personal_url": "http://pagac.test/sadie",
                            "email": "user531@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Eveniet autem animi. 25253\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Consequatur quia molestiae. 25254\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-01T06:23:58Z",
                            "updated_at": "2025-07-01T06:23:58Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "8453",
                          "type": "user",
                          "attributes": {
                            "name": "Rachael Swaniawski III",
                            "nickname": "h_527",
                            "personal_url": "http://stark.example/reyna_gusikowski",
                            "email": "user532@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Ratione minus quidem. 25255\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Commodi porro repellat. 25256\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-01T06:23:58Z",
                            "updated_at": "2025-07-01T06:23:58Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "8454",
                          "type": "user",
                          "attributes": {
                            "name": "Evan Auer I",
                            "nickname": "em6t8q2v_528",
                            "personal_url": "http://zboncak-oconnell.test/vikki",
                            "email": "user533@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Voluptatum ullam molestiae. 25257\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Ut inventore dolorum. 25258\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-01T06:23:58Z",
                            "updated_at": "2025-07-01T06:23:58Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "8455",
                          "type": "user",
                          "attributes": {
                            "name": "Gilbert Herzog DC",
                            "nickname": "xu4rk33m_529",
                            "personal_url": "http://zieme.test/major_goyette",
                            "email": "user534@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Laboriosam aliquam aut. 25259\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Ut molestiae maxime. 25260\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-01T06:23:58Z",
                            "updated_at": "2025-07-01T06:23:58Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "8456",
                          "type": "user",
                          "attributes": {
                            "name": "Mrs. Wm Bartell",
                            "nickname": "oq207_530",
                            "personal_url": "http://frami-stokes.test/nicky.hessel",
                            "email": "user535@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Ut voluptas consectetur. 25261\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Voluptatem rerum sint. 25262\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-01T06:23:58Z",
                            "updated_at": "2025-07-01T06:23:58Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user_index_response"
                }
              }
            }
          }
        }
      }
    },
    "/metrics/health": {
      "get": {
        "summary": "Health",
        "tags": [
          "Metrics"
        ],
        "operationId": "health-metrics",
        "description": "Health metrics",
        "security": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "503": {
            "description": "Unhealthy services",
            "content": {
              "application/json": {
                "examples": {
                  "error_public_assets": {
                    "value": {
                      "message": "ERROR"
                    }
                  },
                  "error_db": {
                    "value": {
                      "message": "ERROR"
                    }
                  },
                  "error_cache": {
                    "value": {
                      "message": "ERROR"
                    }
                  },
                  "error_referer": {
                    "value": {
                      "message": "ERROR"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/health"
                }
              }
            }
          },
          "200": {
            "description": "Healthy services",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "message": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/health"
                }
              }
            }
          }
        }
      }
    },
    "/blogs": {
      "get": {
        "summary": "Blog Post Lists",
        "tags": [
          "Blogs"
        ],
        "operationId": "blogs",
        "description": "Get blog post list",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "space_manifest",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "description": "Space type"
            },
            "required": false
          },
          {
            "name": "space_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Space Id"
            },
            "required": false
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Order by",
            "required": false
          },
          {
            "name": "order_direction",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "Order direction",
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "blogs"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Blogs Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blog_index_response"
                },
                "examples": {
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "1489",
                          "type": "blog",
                          "attributes": {
                            "created_at": "2025-07-01T06:24:09Z",
                            "updated_at": "2025-07-01T06:24:10Z",
                            "title": {
                              "en": "<script>alert(\"blog_title\");</script> Ipsum facilis autem. 26343"
                            },
                            "body": {
                              "en": "<p><script>alert(\"blog_body\");</script> Dicta sequi ipsum. 26345</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3037",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "10385",
                                "type": "blog_component"
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://391.lvh.me/public/components/10385",
                              "title": "<script>alert(\"component_name\");</script> Magni tempora modi. 26309",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3037",
                                "space_manifest": "participatory_processes",
                                "component_id": "10385",
                                "component_manifest": "blogs",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://391.lvh.me/api/rest_full/v0.2/blogs/1489",
                              "title": "Blogs Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10385",
                                "component_manifest": "blogs",
                                "space_id": "3037",
                                "space_manifest": "participatory_processes",
                                "resource_id": "1489",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://391.lvh.me/api/rest_full/v0.2/blogs",
                              "title": "Blogs List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10385",
                                "component_manifest": "blogs",
                                "space_id": "3037",
                                "space_manifest": "participatory_processes",
                                "resource_id": "1489",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "1488",
                          "type": "blog",
                          "attributes": {
                            "created_at": "2025-07-01T06:24:09Z",
                            "updated_at": "2025-07-01T06:24:09Z",
                            "title": {
                              "en": "<script>alert(\"blog_title\");</script> Modi error excepturi. 26337"
                            },
                            "body": {
                              "en": "<p><script>alert(\"blog_body\");</script> Ducimus ipsum vero. 26339</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3037",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "10385",
                                "type": "blog_component"
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://391.lvh.me/public/components/10385",
                              "title": "<script>alert(\"component_name\");</script> Magni tempora modi. 26309",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3037",
                                "space_manifest": "participatory_processes",
                                "component_id": "10385",
                                "component_manifest": "blogs",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://391.lvh.me/api/rest_full/v0.2/blogs/1488",
                              "title": "Blogs Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10385",
                                "component_manifest": "blogs",
                                "space_id": "3037",
                                "space_manifest": "participatory_processes",
                                "resource_id": "1488",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://391.lvh.me/api/rest_full/v0.2/blogs",
                              "title": "Blogs List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "10385",
                                "component_manifest": "blogs",
                                "space_id": "3037",
                                "space_manifest": "participatory_processes",
                                "resource_id": "1488",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/spaces/assemblies/{id}": {
      "get": {
        "summary": "Assemblies Details",
        "tags": [
          "Spaces"
        ],
        "operationId": "Assemblies",
        "description": "Get detail of a Assemblies given its id",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Id of the space"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Assemblies Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/space_item_response"
                },
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "6",
                        "type": "space",
                        "attributes": {
                          "manifest_name": "assemblies",
                          "participatory_space_type": "Decidim::Assembly",
                          "title": {
                            "en": "My assembly for testing purpose",
                            "fr": "c'est une assemblée"
                          },
                          "subtitle": {
                            "en": "<script>alert(\"assembly_subtitle\");</script> Beatae rerum quibusdam. 32409"
                          },
                          "short_description": {
                            "en": "<p><script>alert(\"assembly_short_description\");</script> Expedita veritatis eveniet. 32411</p>"
                          },
                          "description": {
                            "en": "<p><script>alert(\"assembly_description\");</script> Sunt omnis accusantium. 32413</p>"
                          },
                          "visibility": "public",
                          "created_at": "2025-07-01T06:24:19Z",
                          "updated_at": "2025-07-01T06:24:19Z"
                        },
                        "relationships": {
                          "components": {
                            "data": [
                              {
                                "id": "10555",
                                "type": "accountability_component"
                              },
                              {
                                "id": "10560",
                                "type": "awesome_iframe_component"
                              },
                              {
                                "id": "10559",
                                "type": "awesome_map_component"
                              },
                              {
                                "id": "10558",
                                "type": "blog_component"
                              },
                              {
                                "id": "10553",
                                "type": "budget_component"
                              },
                              {
                                "id": "10556",
                                "type": "debate_component"
                              },
                              {
                                "id": "10552",
                                "type": "meeting_component"
                              },
                              {
                                "id": "10545",
                                "type": "meeting_component"
                              },
                              {
                                "id": "10547",
                                "type": "meeting_component"
                              },
                              {
                                "id": "10549",
                                "type": "meeting_component"
                              },
                              {
                                "id": "10550",
                                "type": "page_component"
                              },
                              {
                                "id": "10548",
                                "type": "proposal_component"
                              },
                              {
                                "id": "10544",
                                "type": "proposal_component"
                              },
                              {
                                "id": "10551",
                                "type": "proposal_component"
                              },
                              {
                                "id": "10546",
                                "type": "proposal_component"
                              },
                              {
                                "id": "10557",
                                "type": "sortition_component"
                              },
                              {
                                "id": "10554",
                                "type": "survey_component"
                              }
                            ],
                            "meta": {
                              "count": 17
                            },
                            "links": {
                              "self": {
                                "href": "https://460.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=6",
                                "title": "Component list for this space",
                                "rel": "resource",
                                "meta": {
                                  "space_manifest": "assemblies",
                                  "space_id": "6",
                                  "action_method": "GET"
                                }
                              }
                            }
                          }
                        },
                        "links": {
                          "self": {
                            "href": "https://460.lvh.me/public/assemblies/6",
                            "title": "My assembly for testing purpose",
                            "rel": "resource",
                            "meta": {
                              "space_id": "6",
                              "space_manifest": "assemblies",
                              "action_method": "GET"
                            }
                          },
                          "related": {
                            "href": "https://460.lvh.me/system/organizations/4303",
                            "title": "Hamill and Sons",
                            "rel": "resource",
                            "meta": {
                              "action_method": "GET"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/spaces/participatory_processes/{id}": {
      "get": {
        "summary": "Participatory Processes Details",
        "tags": [
          "Spaces"
        ],
        "operationId": "ParticipatoryProcesses",
        "description": "Get detail of a Participatory Processes given its id",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Id of the space"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Participatory Processes Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/space_item_response"
                },
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "6",
                        "type": "space",
                        "attributes": {
                          "manifest_name": "participatory_processes",
                          "participatory_space_type": "Decidim::ParticipatoryProcess",
                          "title": {
                            "en": "My participatory_process for testing purpose",
                            "fr": "c'est une concertation"
                          },
                          "subtitle": {
                            "en": "<script>alert(\"participatory_process_subtitle\");</script> Ut nisi soluta. 38121"
                          },
                          "short_description": {
                            "en": "<p><script>alert(\"participatory_process_short_description\");</script> Hic placeat exercitationem. 38123</p>"
                          },
                          "description": {
                            "en": "<p><script>alert(\"participatory_process_description\");</script> Veritatis sit et. 38125</p>"
                          },
                          "visibility": "public",
                          "created_at": "2025-07-01T06:24:25Z",
                          "updated_at": "2025-07-01T06:24:25Z"
                        },
                        "relationships": {
                          "components": {
                            "data": [],
                            "meta": {
                              "count": 0
                            },
                            "links": {
                              "self": {
                                "href": "https://523.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=6",
                                "title": "Component list for this space",
                                "rel": "resource",
                                "meta": {
                                  "space_manifest": "participatory_processes",
                                  "space_id": "6",
                                  "action_method": "GET"
                                }
                              }
                            }
                          }
                        },
                        "links": {
                          "self": {
                            "href": "https://523.lvh.me/public/participatory_processes/6",
                            "title": "My participatory_process for testing purpose",
                            "rel": "resource",
                            "meta": {
                              "space_id": "6",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          },
                          "related": {
                            "href": "https://523.lvh.me/system/organizations/4312",
                            "title": "Zulauf, Waters and Mraz",
                            "rel": "resource",
                            "meta": {
                              "action_method": "GET"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/me/extended_data": {
      "put": {
        "summary": "Update user extended data",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "oauth"
            ]
          }
        ],
        "operationId": "setUserData",
        "description": "The extended_data feature allows you to update a hash with recursive merging. Use the body payload with these keys:\n\n1. `data`: The value or hash you want to update.\n2. `object_path`: The dot-style path to the key (e.g., access.this.key).\n\n**Root path**<br />\nTo update data from root of the hash, use `object_path=\".\"`.\n\nExample:\n```\n  body={\"data\": {\"name\": \"Jane\"}, \"object_path\": \"personnal\"}\n```\nThis recursively merges data into the hash without removing existing keys.\n\n**Merge some data**<br />\nInitial hash:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\"}\n  }\n```\nPatch payload:\n```json\n  {\n    \"data\": {\n      \"name\": \"Jane\"\n    },\n    \"object_path\": \"personnal\"\n  }\n```\nResult:\n```\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\", \"name\": \"Jane\"}\n  }\n```\n\n**Create new Paths**<br />\nPaths are created as needed.\nExemple:\n```json\n  body = {\"data\": {\"external_user_id\": 12}, \"object_path\": \"data-store.my-app.foo\"}\n```\nResult:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\"},\n    \"data-store\": {\"my-app\": {\"foo\": {\"external_user_id\": 12}}}\n  }\n```\nAlternatively:\n```\n  body = {\"data\": 12, \"object_path\": \"data-store.my-app.foo.external_user_id\"}\n```\n\n**Remove a key**<br />\nSet a key to null or an empty value to remove it.\n\nExample: Initial hash:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\", \"name\": \"Jane\"}\n  }\n```\nPatch:\n```json\n  body = {\"data\": {\"birthday\": \"\"}, \"object_path\": \"personnal\"}\n```\n\nResult:\n```\n{\n  \"personnal\": {\"name\": \"Jane\"}\n}\n```\n\n**Return Value**<br />\nThe update request returns the updated value at the specified path.\n\n",
        "parameters": [],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Update extended data value",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "foo": "bar"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user_extended_data"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "User Extended Data Payload",
                "properties": {
                  "data": {
                    "type": "object",
                    "title": "User Extended Data Data",
                    "description": "New value for the extended data at the given path"
                  },
                  "object_path": {
                    "type": "string",
                    "description": "object path, in dot style, like foo.bar. use '.' to update the whole user data"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      },
      "get": {
        "summary": "Get user extended data",
        "tags": [
          "Users"
        ],
        "operationId": "userData",
        "description": "Fetch user extended data",
        "parameters": [
          {
            "name": "object_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "object path, in dot style, like foo.bar"
            }
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "oauth"
            ]
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Resource not found",
                      "error_description": "Resource not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Extended Data for a given object_path given",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "personal": {
                          "birthday": "1989-01-28"
                        },
                        "birthday": "1989-01-28"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user_extended_data"
                }
              }
            }
          }
        }
      }
    },
    "/proposals/{id}": {
      "get": {
        "summary": "Proposal Details",
        "tags": [
          "Proposals"
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "operationId": "proposal",
        "description": "Proposal detail",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "space_manifest",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "description": "Space type"
            },
            "required": false
          },
          {
            "name": "space_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Space Id"
            },
            "required": false
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "voted_weight not IN filter",
              "description": "match none of _voted_weight_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "voted_weight IN filter",
              "description": "match one of _voted_weight_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_voted_weight_ starts with",
              "title": "voted_weight starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight equal filter",
              "description": "_voted_weight_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight not equal filter",
              "description": "_voted_weight_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight like filter",
              "description": "matches _voted_weight_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "voted_weight blank filter",
              "description": "_voted_weight_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[state_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "state not IN filter",
              "description": "match none of _state_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[state_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "state IN filter",
              "description": "match one of _state_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[state_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_state_ starts with",
              "title": "state starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[state_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state equal filter",
              "description": "_state_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[state_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state not equal filter",
              "description": "_state_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[state_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state like filter",
              "description": "matches _state_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[state_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "state blank filter",
              "description": "_state_ is null or empty"
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Proposal Id"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Proposal Found",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "5774",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-01T06:24:39Z",
                          "updated_at": "2025-07-01T06:24:39Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Saepe necessitatibus enim. 42869"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Distinctio a enim. 42871</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3130",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "10814",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "8816",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "8816",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://588.lvh.me/public/components/10814",
                            "title": "<script>alert(\"component_name\");</script> Accusamus neque architecto. 42863",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3130",
                              "space_manifest": "participatory_processes",
                              "component_id": "10814",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://588.lvh.me/api/rest_full/v0.2/proposals/5774",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10814",
                              "component_manifest": "proposals",
                              "space_id": "3130",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5774",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://588.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10814",
                              "component_manifest": "proposals",
                              "space_id": "3130",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5774",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  },
                  "accepted_proposal": {
                    "value": {
                      "data": {
                        "id": "5773",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-01T06:24:39Z",
                          "updated_at": "2025-07-01T06:24:39Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Voluptatem nesciunt aliquam. 42825"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Odio quidem sed. 42827</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3129",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "10813",
                              "type": "proposal_component"
                            }
                          },
                          "state": {
                            "data": {
                              "id": "8795",
                              "type": "proposal_state"
                            },
                            "meta": {
                              "token": "accepted"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "8815",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "8815",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://587.lvh.me/public/components/10813",
                            "title": "<script>alert(\"component_name\");</script> Nesciunt omnis labore. 42809",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3129",
                              "space_manifest": "participatory_processes",
                              "component_id": "10813",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://587.lvh.me/api/rest_full/v0.2/proposals/5773",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10813",
                              "component_manifest": "proposals",
                              "space_id": "3129",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5773",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://587.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10813",
                              "component_manifest": "proposals",
                              "space_id": "3129",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5773",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://587.lvh.me/api/rest_full/v0.2/proposals/5772",
                            "title": "Previous Proposal",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10813",
                              "component_manifest": "proposals",
                              "space_id": "3129",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5772",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  },
                  "navigation_non_rejected": {
                    "value": {
                      "data": {
                        "id": "5769",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-01T06:24:38Z",
                          "updated_at": "2025-07-01T06:24:38Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Alias aut error. 42751"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Qui enim consequatur. 42753</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3128",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "10812",
                              "type": "proposal_component"
                            }
                          },
                          "state": {
                            "data": {
                              "id": "8792",
                              "type": "proposal_state"
                            },
                            "meta": {
                              "token": "accepted"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "8811",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "8811",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://586.lvh.me/public/components/10812",
                            "title": "<script>alert(\"component_name\");</script> Ut voluptatem dolor. 42735",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3128",
                              "space_manifest": "participatory_processes",
                              "component_id": "10812",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://586.lvh.me/api/rest_full/v0.2/proposals/5769",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10812",
                              "component_manifest": "proposals",
                              "space_id": "3128",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5769",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://586.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10812",
                              "component_manifest": "proposals",
                              "space_id": "3128",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5769",
                              "action_method": "GET"
                            }
                          },
                          "next": {
                            "href": "https://586.lvh.me/api/rest_full/v0.2/proposals/5771",
                            "title": "Next Proposal",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10812",
                              "component_manifest": "proposals",
                              "space_id": "3128",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5771",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://586.lvh.me/api/rest_full/v0.2/proposals/5768",
                            "title": "Previous Proposal",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10812",
                              "component_manifest": "proposals",
                              "space_id": "3128",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5768",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  },
                  "navigation_last_accepted": {
                    "value": {
                      "data": {
                        "id": "5766",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-01T06:24:38Z",
                          "updated_at": "2025-07-01T06:24:38Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Perferendis eos officiis. 42687"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Omnis nam enim. 42689</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3127",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "10811",
                              "type": "proposal_component"
                            }
                          },
                          "state": {
                            "data": {
                              "id": "8789",
                              "type": "proposal_state"
                            },
                            "meta": {
                              "token": "accepted"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "8808",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "8808",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://585.lvh.me/public/components/10811",
                            "title": "<script>alert(\"component_name\");</script> Distinctio nostrum reprehenderit. 42661",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3127",
                              "space_manifest": "participatory_processes",
                              "component_id": "10811",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://585.lvh.me/api/rest_full/v0.2/proposals/5766",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10811",
                              "component_manifest": "proposals",
                              "space_id": "3127",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5766",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://585.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10811",
                              "component_manifest": "proposals",
                              "space_id": "3127",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5766",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://585.lvh.me/api/rest_full/v0.2/proposals/5765",
                            "title": "Previous Proposal",
                            "rel": "resource",
                            "meta": {
                              "component_id": "10811",
                              "component_manifest": "proposals",
                              "space_id": "3127",
                              "space_manifest": "participatory_processes",
                              "resource_id": "5765",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_item_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/me/magic_links/{magic_token}": {
      "get": {
        "summary": "Use a magic-lick",
        "tags": [
          "Users"
        ],
        "operationId": "magicLinkSignin",
        "description": "Challenge given token, open and a session and redirect. Publically accessible by HTTP.\n",
        "parameters": [
          {
            "name": "magic_token",
            "in": "path",
            "schema": {
              "type": "string",
              "description": "A token received for magic link"
            },
            "required": true
          }
        ],
        "security": [],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "bad_token_expired": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Invalid Token"
                    }
                  },
                  "bad_token": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Token not found"
                    }
                  },
                  "bad_blocked": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "User blocked"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "302": {
            "description": "Signed in",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/components/search": {
      "get": {
        "summary": "Search components",
        "tags": [
          "Components"
        ],
        "operationId": "searchComponents",
        "description": "List or search components of the organization",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/component_manifest"
              },
              "title": "manifest_name not IN filter",
              "description": "match none of _manifest_name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/component_manifest"
              },
              "title": "manifest_name IN filter",
              "description": "match one of _manifest_name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_manifest_name_ starts with",
              "title": "manifest_name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_eq]",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/component_manifest",
              "title": "manifest_name equal filter",
              "description": "_manifest_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_eq]",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/component_manifest",
              "title": "manifest_name not equal filter",
              "description": "_manifest_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "manifest_name like filter",
              "description": "matches _manifest_name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "manifest_name blank filter",
              "description": "_manifest_name_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "title": "id IN filter",
              "description": "match one of _id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[id_eq]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id equal filter",
              "description": "_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[id_lt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id less than filter",
              "description": "_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[id_gt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id greater than filter",
              "description": "_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id present filter",
              "description": "_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id blank filter",
              "description": "_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "participatory_space_id IN filter",
              "description": "match one of _participatory_space_id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id equal filter",
              "description": "_participatory_space_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id less than filter",
              "description": "_participatory_space_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id greater than filter",
              "description": "_participatory_space_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id present filter",
              "description": "_participatory_space_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id blank filter",
              "description": "_participatory_space_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/space_type"
              },
              "title": "participatory_space_type not IN filter",
              "description": "match none of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/space_type"
              },
              "title": "participatory_space_type IN filter",
              "description": "match one of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_participatory_space_type_ starts with",
              "title": "participatory_space_type starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_eq]",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/space_type",
              "title": "participatory_space_type equal filter",
              "description": "_participatory_space_type_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_eq]",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/space_type",
              "title": "participatory_space_type not equal filter",
              "description": "_participatory_space_type_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_type like filter",
              "description": "matches _participatory_space_type_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_type blank filter",
              "description": "_participatory_space_type_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name not IN filter",
              "description": "match none of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name IN filter",
              "description": "match one of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_name_ starts with",
              "title": "name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name equal filter",
              "description": "_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name not equal filter",
              "description": "_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name like filter",
              "description": "matches _name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "name blank filter",
              "description": "_name_ is null or empty"
            },
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "List of components",
            "content": {
              "application/json": {
                "examples": {
                  "filter_byId": {
                    "value": {
                      "data": [
                        {
                          "id": "10923",
                          "type": "meeting_component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3155",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Quas voluptatem nam. 46991"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:25:03Z",
                            "updated_at": "2025-07-01T06:25:03Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://679.lvh.me/components/meeting_components/10923",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3155",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://679.lvh.me/spaces/participatory_processes/3155",
                              "title": "<script>alert(\"participatory_process_title\");</script> Esse aliquid ut. 46965",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3155",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "default_registration_terms": false,
                            "comments_enabled": false,
                            "comments_max_length": false,
                            "registration_code_enabled": false,
                            "creation_enabled_for_participants": false
                          }
                        },
                        {
                          "id": "10926",
                          "type": "accountability_component",
                          "attributes": {
                            "manifest_name": "accountability",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3155",
                            "name": {
                              "en": "<script>alert(\"accountability\");</script> Accountability",
                              "fr": "<script>alert(\"accountability\");</script> Suivi"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:25:03Z",
                            "updated_at": "2025-07-01T06:25:03Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "506",
                                  "type": "result"
                                },
                                {
                                  "id": "505",
                                  "type": "result"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://679.lvh.me/components/accountability_components/10926",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3155",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://679.lvh.me/spaces/participatory_processes/3155",
                              "title": "<script>alert(\"participatory_process_title\");</script> Esse aliquid ut. 46965",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3155",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "manifest_name_in_Meetings": {
                    "value": {
                      "data": [
                        {
                          "id": "10980",
                          "type": "meeting_component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3161",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Totam deleniti aut. 48341"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:25:06Z",
                            "updated_at": "2025-07-01T06:25:06Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://697.lvh.me/components/meeting_components/10980",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3161",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://697.lvh.me/spaces/participatory_processes/3161",
                              "title": "<script>alert(\"participatory_process_title\");</script> Et voluptas voluptates. 48315",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3161",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "default_registration_terms": false,
                            "comments_enabled": false,
                            "comments_max_length": false,
                            "registration_code_enabled": false,
                            "creation_enabled_for_participants": false
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "10956",
                          "type": "sortition_component",
                          "attributes": {
                            "manifest_name": "sortitions",
                            "participatory_space_type": "Decidim::Assembly",
                            "participatory_space_id": "2164",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Adipisci sit est. 47963"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:25:05Z",
                            "updated_at": "2025-07-01T06:25:05Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://691.lvh.me/components/sortition_components/10956",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2164",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://691.lvh.me/spaces/assemblies/2164",
                              "title": "<script>alert(\"assembly_title\");</script> Repellendus repellat molestiae. 47769",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2164",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        },
                        {
                          "id": "10957",
                          "type": "awesome_iframe_component",
                          "attributes": {
                            "manifest_name": "awesome_iframe",
                            "participatory_space_type": "Decidim::Assembly",
                            "participatory_space_id": "2164",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Ab non eum. 47969"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:25:05Z",
                            "updated_at": "2025-07-01T06:25:05Z"
                          },
                          "links": {
                            "self": {
                              "href": "https://691.lvh.me/components/awesome_iframe_components/10957",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2164",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://691.lvh.me/spaces/assemblies/2164",
                              "title": "<script>alert(\"assembly_title\");</script> Repellendus repellat molestiae. 47769",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2164",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "10919",
                          "type": "meeting_component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3154",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Nam accusamus quia. 46799"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:25:03Z",
                            "updated_at": "2025-07-01T06:25:03Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://676.lvh.me/components/meeting_components/10919",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3154",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://676.lvh.me/spaces/participatory_processes/3154",
                              "title": "<script>alert(\"participatory_process_title\");</script> Dolores quo expedita. 46773",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3154",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "default_registration_terms": false,
                            "comments_enabled": false,
                            "comments_max_length": false,
                            "registration_code_enabled": false,
                            "creation_enabled_for_participants": false
                          }
                        },
                        {
                          "id": "10922",
                          "type": "accountability_component",
                          "attributes": {
                            "manifest_name": "accountability",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3154",
                            "name": {
                              "en": "<script>alert(\"accountability\");</script> Accountability",
                              "fr": "<script>alert(\"accountability\");</script> Suivi"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:25:03Z",
                            "updated_at": "2025-07-01T06:25:03Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "503",
                                  "type": "result"
                                },
                                {
                                  "id": "504",
                                  "type": "result"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://676.lvh.me/components/accountability_components/10922",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3154",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://676.lvh.me/spaces/participatory_processes/3154",
                              "title": "<script>alert(\"participatory_process_title\");</script> Dolores quo expedita. 46773",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3154",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        },
                        {
                          "id": "10920",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3154",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Modi aut corrupti. 46885"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:25:03Z",
                            "updated_at": "2025-07-01T06:25:03Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "5814",
                                  "type": "proposal"
                                },
                                {
                                  "id": "5815",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://676.lvh.me/components/proposal_components/10920",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3154",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://676.lvh.me/spaces/participatory_processes/3154",
                              "title": "<script>alert(\"participatory_process_title\");</script> Dolores quo expedita. 46773",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3154",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "10921",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3154",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:25:03Z",
                            "updated_at": "2025-07-01T06:25:03Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://676.lvh.me/components/proposal_components/10921",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3154",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://676.lvh.me/spaces/participatory_processes/3154",
                              "title": "<script>alert(\"participatory_process_title\");</script> Dolores quo expedita. 46773",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3154",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "components_in_Process": {
                    "value": {
                      "data": [
                        {
                          "id": "10927",
                          "type": "meeting_component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3156",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Vero eveniet aut. 47183"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:25:03Z",
                            "updated_at": "2025-07-01T06:25:03Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://682.lvh.me/components/meeting_components/10927",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3156",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://682.lvh.me/spaces/participatory_processes/3156",
                              "title": "<script>alert(\"participatory_process_title\");</script> Voluptatibus et atque. 47157",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3156",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "default_registration_terms": false,
                            "comments_enabled": false,
                            "comments_max_length": false,
                            "registration_code_enabled": false,
                            "creation_enabled_for_participants": false
                          }
                        },
                        {
                          "id": "10930",
                          "type": "accountability_component",
                          "attributes": {
                            "manifest_name": "accountability",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3156",
                            "name": {
                              "en": "<script>alert(\"accountability\");</script> Accountability",
                              "fr": "<script>alert(\"accountability\");</script> Suivi"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:25:04Z",
                            "updated_at": "2025-07-01T06:25:04Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "507",
                                  "type": "result"
                                },
                                {
                                  "id": "508",
                                  "type": "result"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://682.lvh.me/components/accountability_components/10930",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3156",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://682.lvh.me/spaces/participatory_processes/3156",
                              "title": "<script>alert(\"participatory_process_title\");</script> Voluptatibus et atque. 47157",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3156",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        },
                        {
                          "id": "10928",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3156",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Rerum porro nesciunt. 47269"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:25:03Z",
                            "updated_at": "2025-07-01T06:25:04Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "5818",
                                  "type": "proposal"
                                },
                                {
                                  "id": "5819",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://682.lvh.me/components/proposal_components/10928",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3156",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://682.lvh.me/spaces/participatory_processes/3156",
                              "title": "<script>alert(\"participatory_process_title\");</script> Voluptatibus et atque. 47157",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3156",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "10929",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3156",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-01T06:25:04Z",
                            "updated_at": "2025-07-01T06:25:04Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://682.lvh.me/components/proposal_components/10929",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3156",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://682.lvh.me/spaces/participatory_processes/3156",
                              "title": "<script>alert(\"participatory_process_title\");</script> Voluptatibus et atque. 47157",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3156",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/component_index_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    }
  }
}