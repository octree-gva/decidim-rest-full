{
  "openapi": "3.0.1",
  "info": {
    "title": "API V1",
    "version": "v0.2",
    "description": "A RestFull API for Decidim, to be able to CRUD resources from Decidim.  \n_current version: 0.2.3_\n\n## Authentication\n[Get a token](https://octree-gva.github.io/decidim-rest-full/category/authentication) from our `/oauth/token` routes,\nfollowing OAuth specs on Credential Flows or Resource Owner Password Credentials Flow.\n\n### Permissions\nA permission system is attached to the created OAuth application, that is designed in two levels:\n\n- **scope**: a broad permission to access a collection of endpoints\n- **abilities**: a fine grained permission system that allow actions.\n\nThe scopes and abilities are manageable in your System Admin Panel.\n\n### Multi-tenant\nDecidim is multi-tenant, and this API supports it.\n- The **`system` scope** endpoints are available in any tenant\n- The tenant `host` attribute will be used to guess which tenant you are requesting.\n  For example, given a tenant `example.org` and `foobar.org`, the endpoint\n  * `example.org/oauth/token` will ask a token for the example.org organization\n  * `foobar.org/oauth/token` for foobar.org.\n"
  },
  "servers": [
    {
      "url": "https://{defaultHost}/api/rest_full/v0.2",
      "variables": {
        "defaultHost": {
          "default": "www.example.com"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "OAuth",
      "description": "Use OAuth to get tokens and interact with the API. You can use machine-to-machine tokens, or user token directly with the API.\n* **Machine-to-machine**: Client Credential Flow\n* **User**: Resource Owner Password Credential Flow, with **impersonation** or **login**",
      "externalDocs": {
        "description": "How to authenticate",
        "url": "https://octree-gva.github.io/decidim-rest-full/category/authentication"
      }
    },
    {
      "name": "Organizations",
      "description": "Organization controls the main configuration of the platform. \nAs you can host many Decidim in the same platform, organizations allows you to setup: \n\n- host: the domain name used by your decidim\n- secondary_hosts: other domain names, used for redirecting to the correct organizati\n\nThe current organization is guessed from the host of the request, you can thus query the API\non different hosts to gather organization's related data.\n"
    },
    {
      "name": "Organizations Extended Data",
      "description": "Metadata management for organizations.\n"
    },
    {
      "name": "Spaces",
      "description": "Search and vizualize spaces (eg. Assemblies, Participatory Processes)"
    },
    {
      "name": "Components",
      "description": "Search and vizualize components"
    },
    {
      "name": "Users",
      "description": "Get information about participants, and manage own data."
    },
    {
      "name": "Blogs",
      "description": "Get informations about blog posts"
    },
    {
      "name": "Proposals",
      "description": "Manipulate proposals and drafts"
    },
    {
      "name": "Metrics",
      "description": "Metrics of the organization"
    }
  ],
  "components": {
    "securitySchemes": {
      "credentialFlowBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Authorization via service-to-service credentials flow.\nUse this for machine clients.\n[Learn more here](https://octree-gva.github.io/decidim-rest-full/user_documentation/auth/client-credential-flow)\n"
      },
      "resourceOwnerFlowBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Authorization via resource owner flow.\nUse this for user-based authentication\n[Learn more here](https://octree-gva.github.io/decidim-rest-full/user_documentation/auth/user-credentials-flow)\n"
      }
    },
    "schemas": {
      "get_action_link": {
        "title": "GET Action URL",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Action Name"
          },
          "href": {
            "type": "string",
            "description": "Full URL"
          },
          "describedby": {
            "type": "string",
            "description": "JSONSchema URL describing the request"
          },
          "hreflang": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Available locales"
          },
          "rel": {
            "type": "string",
            "enum": [
              "action"
            ]
          },
          "meta": {
            "title": "Meta for read request",
            "type": "object",
            "properties": {
              "component_id": {
                "type": "string",
                "description": "Component ID"
              },
              "component_manifest": {
                "type": "string",
                "description": "Component manifest"
              },
              "space_id": {
                "type": "string",
                "description": "Space ID"
              },
              "space_manifest": {
                "type": "string",
                "description": "Space Manifest"
              },
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "action_method": {
                "type": "string",
                "enum": [
                  "GET"
                ],
                "description": "Action HTTP method"
              }
            },
            "required": [
              "action_method"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "href",
          "title",
          "meta",
          "rel"
        ]
      },
      "post_action_link": {
        "title": "POST/DELETE/PUT Action URL",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Action Name"
          },
          "href": {
            "type": "string",
            "description": "Full URL"
          },
          "describedby": {
            "type": "string",
            "description": "JSONSchema URL describing the request"
          },
          "hreflang": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Available locales"
          },
          "rel": {
            "type": "string",
            "enum": [
              "action"
            ]
          },
          "meta": {
            "title": "Meta for write request",
            "type": "object",
            "properties": {
              "component_id": {
                "type": "string",
                "description": "Component ID"
              },
              "component_manifest": {
                "type": "string",
                "description": "Component manifest"
              },
              "space_id": {
                "type": "string",
                "description": "Space ID"
              },
              "space_manifest": {
                "type": "string",
                "description": "Space Manifest"
              },
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "action_method": {
                "type": "string",
                "enum": [
                  "POST",
                  "DELETE",
                  "PUT"
                ],
                "description": "Action HTTP method"
              },
              "action_enctype": {
                "type": "string",
                "enum": [
                  "application/x-www-form-urlencoded",
                  "multipart/form-data"
                ],
                "description": "Encoding of the payload"
              },
              "action_target": {
                "type": "string",
                "description": "URL to goes after submitting a valid request"
              }
            },
            "required": [
              "action_method",
              "action_enctype"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "href",
          "title",
          "meta",
          "rel"
        ]
      },
      "resource_link": {
        "title": "Resource URL",
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "Full URL"
          },
          "title": {
            "type": "string",
            "description": "Page Title"
          },
          "hreflang": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Available locales"
          },
          "describedby": {
            "type": "string",
            "description": "JSONSchema URL describing the request"
          },
          "rel": {
            "type": "string",
            "enum": [
              "public_page",
              "resource"
            ]
          },
          "meta": {
            "type": "object",
            "title": "Resource URL Metadata",
            "properties": {
              "component_id": {
                "type": "string",
                "description": "Component ID"
              },
              "component_manifest": {
                "type": "string",
                "description": "Component manifest"
              },
              "space_id": {
                "type": "string",
                "description": "Space ID"
              },
              "space_manifest": {
                "type": "string",
                "description": "Space Manifest"
              },
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              }
            }
          }
        },
        "required": [
          "href",
          "title",
          "meta",
          "rel"
        ],
        "additionalProperties": false
      },
      "translated_prop": {
        "type": "object",
        "title": "Translated data",
        "description": "Hash with translated data, key=locale value=translation",
        "properties": {
          "en": {
            "type": "string",
            "description": "Translation in en"
          },
          "fr": {
            "type": "string",
            "description": "Translation in fr"
          }
        },
        "additionalProperties": false
      },
      "time_zone": {
        "type": "string",
        "title": "Time Zone",
        "description": "Time Zone identifier",
        "enum": [
          "Africa/Algiers",
          "Africa/Cairo",
          "Africa/Casablanca",
          "Africa/Harare",
          "Africa/Johannesburg",
          "Africa/Monrovia",
          "Africa/Nairobi",
          "America/Argentina/Buenos_Aires",
          "America/Bogota",
          "America/Caracas",
          "America/Chicago",
          "America/Chihuahua",
          "America/Denver",
          "America/Godthab",
          "America/Guatemala",
          "America/Guyana",
          "America/Halifax",
          "America/Indiana/Indianapolis",
          "America/Juneau",
          "America/La_Paz",
          "America/Lima",
          "America/Lima",
          "America/Los_Angeles",
          "America/Mazatlan",
          "America/Mexico_City",
          "America/Mexico_City",
          "America/Monterrey",
          "America/Montevideo",
          "America/New_York",
          "America/Phoenix",
          "America/Puerto_Rico",
          "America/Regina",
          "America/Santiago",
          "America/Sao_Paulo",
          "America/St_Johns",
          "America/Tijuana",
          "Asia/Almaty",
          "Asia/Baghdad",
          "Asia/Baku",
          "Asia/Bangkok",
          "Asia/Bangkok",
          "Asia/Chongqing",
          "Asia/Colombo",
          "Asia/Dhaka",
          "Asia/Dhaka",
          "Asia/Hong_Kong",
          "Asia/Irkutsk",
          "Asia/Jakarta",
          "Asia/Jerusalem",
          "Asia/Kabul",
          "Asia/Kamchatka",
          "Asia/Karachi",
          "Asia/Karachi",
          "Asia/Kathmandu",
          "Asia/Kolkata",
          "Asia/Kolkata",
          "Asia/Kolkata",
          "Asia/Kolkata",
          "Asia/Krasnoyarsk",
          "Asia/Kuala_Lumpur",
          "Asia/Kuwait",
          "Asia/Magadan",
          "Asia/Muscat",
          "Asia/Muscat",
          "Asia/Novosibirsk",
          "Asia/Rangoon",
          "Asia/Riyadh",
          "Asia/Seoul",
          "Asia/Shanghai",
          "Asia/Singapore",
          "Asia/Srednekolymsk",
          "Asia/Taipei",
          "Asia/Tashkent",
          "Asia/Tbilisi",
          "Asia/Tehran",
          "Asia/Tokyo",
          "Asia/Tokyo",
          "Asia/Tokyo",
          "Asia/Ulaanbaatar",
          "Asia/Urumqi",
          "Asia/Vladivostok",
          "Asia/Yakutsk",
          "Asia/Yekaterinburg",
          "Asia/Yerevan",
          "Atlantic/Azores",
          "Atlantic/Cape_Verde",
          "Atlantic/South_Georgia",
          "Australia/Adelaide",
          "Australia/Brisbane",
          "Australia/Darwin",
          "Australia/Hobart",
          "Australia/Melbourne",
          "Australia/Melbourne",
          "Australia/Perth",
          "Australia/Sydney",
          "Etc/GMT+12",
          "Etc/UTC",
          "Europe/Amsterdam",
          "Europe/Athens",
          "Europe/Belgrade",
          "Europe/Berlin",
          "Europe/Bratislava",
          "Europe/Brussels",
          "Europe/Bucharest",
          "Europe/Budapest",
          "Europe/Copenhagen",
          "Europe/Dublin",
          "Europe/Helsinki",
          "Europe/Istanbul",
          "Europe/Kaliningrad",
          "Europe/Kiev",
          "Europe/Lisbon",
          "Europe/Ljubljana",
          "Europe/London",
          "Europe/London",
          "Europe/Madrid",
          "Europe/Minsk",
          "Europe/Moscow",
          "Europe/Moscow",
          "Europe/Paris",
          "Europe/Prague",
          "Europe/Riga",
          "Europe/Rome",
          "Europe/Samara",
          "Europe/Sarajevo",
          "Europe/Skopje",
          "Europe/Sofia",
          "Europe/Stockholm",
          "Europe/Tallinn",
          "Europe/Vienna",
          "Europe/Vilnius",
          "Europe/Volgograd",
          "Europe/Warsaw",
          "Europe/Zagreb",
          "Europe/Zurich",
          "Europe/Zurich",
          "Pacific/Apia",
          "Pacific/Auckland",
          "Pacific/Auckland",
          "Pacific/Chatham",
          "Pacific/Fakaofo",
          "Pacific/Fiji",
          "Pacific/Guadalcanal",
          "Pacific/Guam",
          "Pacific/Honolulu",
          "Pacific/Majuro",
          "Pacific/Midway",
          "Pacific/Noumea",
          "Pacific/Pago_Pago",
          "Pacific/Port_Moresby",
          "Pacific/Tongatapu",
          "UTC"
        ]
      },
      "component_type": {
        "type": "string",
        "enum": [
          "page_component",
          "proposal_component",
          "meeting_component",
          "budget_component",
          "survey_component",
          "accountability_component",
          "debate_component",
          "sortition_component",
          "blog_component",
          "awesome_map_component",
          "awesome_iframe_component"
        ]
      },
      "creation_date": {
        "title": "Creation date",
        "description": "Creation date, in ISO8601 format.",
        "type": "string",
        "format": "date_time",
        "example": "2024-11-12T12:34:56Z"
      },
      "edition_date": {
        "title": "Last Update Date",
        "description": "Last update date, in ISO8601 format.",
        "type": "string",
        "format": "date_time",
        "example": "2024-12-12T20:34:56Z"
      },
      "space_manifest": {
        "title": "Space Manifest",
        "type": "string",
        "enum": [
          "participatory_processes",
          "assemblies"
        ]
      },
      "component_manifest": {
        "title": "Component Manifest",
        "type": "string",
        "enum": [
          "pages",
          "proposals",
          "meetings",
          "budgets",
          "surveys",
          "accountability",
          "debates",
          "sortitions",
          "blogs",
          "awesome_map",
          "awesome_iframe"
        ]
      },
      "resource_manifest": {
        "title": "Resource Type",
        "type": "string",
        "enum": [
          "page",
          "proposal",
          "meeting",
          "budget",
          "survey",
          "accountability",
          "debate",
          "sortition",
          "blog",
          "awesome_map",
          "awesome_iframe"
        ]
      },
      "space_type": {
        "type": "string",
        "enum": [
          "participatory_processes",
          "assemblies"
        ]
      },
      "space_classes": {
        "type": "string",
        "description": "space class name. Part of the polymorphic association (participatory_space_type,participatory_space_id)",
        "enum": [
          "Decidim::ParticipatoryProcess",
          "Decidim::Assembly"
        ]
      },
      "space": {
        "type": "object",
        "title": "Space",
        "properties": {
          "id": {
            "type": "string",
            "description": "Space Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "space"
            ]
          },
          "attributes": {
            "title": "Space Attributes",
            "type": "object",
            "properties": {
              "title": {
                "$ref": "#/components/schemas/translated_prop",
                "title": "Title translations",
                "description": "Space title"
              },
              "subtitle": {
                "$ref": "#/components/schemas/translated_prop",
                "title": "Subtitle translations",
                "description": "Space subtitle"
              },
              "short_description": {
                "$ref": "#/components/schemas/translated_prop",
                "title": "Short Description translations",
                "description": "Space short_description"
              },
              "description": {
                "$ref": "#/components/schemas/translated_prop",
                "title": "Description translations",
                "description": "Space description"
              },
              "manifest_name": {
                "$ref": "#/components/schemas/space_manifest"
              },
              "participatory_space_type": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "visibility": {
                "type": "string",
                "enum": [
                  "public",
                  "transparent",
                  "private"
                ],
                "description": "Space visibility"
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "required": [
              "title",
              "manifest_name",
              "visibility",
              "created_at",
              "updated_at"
            ],
            "additionalProperties": false
          },
          "relationships": {
            "type": "object",
            "title": "Space relationships",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "$ref": "#/components/schemas/component_type"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Space Component Relationships Data"
                  },
                  "meta": {
                    "title": "Space Component Metadata",
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count for components association"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "count"
                    ]
                  },
                  "links": {
                    "type": "object",
                    "title": "Space Component Links",
                    "properties": {
                      "self": {
                        "$ref": "#/components/schemas/resource_link"
                      },
                      "related": {
                        "$ref": "#/components/schemas/resource_link"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "self"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta",
                  "links"
                ],
                "title": "Space Component Relationships"
              }
            }
          },
          "links": {
            "type": "object",
            "title": "Space Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "required": [
              "self",
              "related"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "links",
          "relationships"
        ]
      },
      "space_index_response": {
        "type": "object",
        "title": "Space Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/space"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "space_item_response": {
        "type": "object",
        "title": "Space Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/space"
          }
        },
        "required": [
          "data"
        ]
      },
      "client_credential": {
        "type": "object",
        "title": "Client Credential",
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "client_credentials"
            ],
            "description": "Client Credential Flow, for **machine-to-machine**"
          },
          "client_id": {
            "type": "string",
            "description": "OAuth application Client Id"
          },
          "client_secret": {
            "type": "string",
            "description": "OAuth application Client Secret"
          },
          "scope": {
            "type": "string",
            "enum": [
              "public",
              "spaces",
              "system",
              "proposals",
              "meetings",
              "debates",
              "pages",
              "blogs",
              "oauth"
            ],
            "description": "Requested scopes"
          }
        },
        "required": [
          "grant_type",
          "client_id",
          "client_secret",
          "scope"
        ]
      },
      "password_grant_login": {
        "type": "object",
        "title": "Login",
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "password"
            ],
            "description": "Resource Owner Password Credentials (ROPC) Flow, for **user login**"
          },
          "auth_type": {
            "type": "string",
            "enum": [
              "login"
            ],
            "description": "Type of ROPC"
          },
          "username": {
            "type": "string",
            "description": "User nickname"
          },
          "password": {
            "type": "string",
            "description": "User password"
          },
          "client_id": {
            "type": "string",
            "description": "OAuth application Client Id"
          },
          "client_secret": {
            "type": "string",
            "description": "OAuth application Client Secret"
          },
          "scope": {
            "type": "string",
            "enum": [
              "public",
              "spaces",
              "proposals",
              "meetings",
              "debates",
              "pages",
              "blogs",
              "oauth"
            ],
            "description": "Request scopes"
          }
        },
        "required": [
          "grant_type",
          "client_id",
          "client_secret",
          "scope",
          "username",
          "password",
          "auth_type"
        ]
      },
      "password_grant_impersonate": {
        "type": "object",
        "title": "Impersonation",
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "password"
            ],
            "description": "Resource Owner Password Credentials (ROPC) Flow, for **user impersonation**"
          },
          "auth_type": {
            "type": "string",
            "enum": [
              "impersonate"
            ],
            "description": "Type of ROPC"
          },
          "username": {
            "type": "string",
            "description": "User nickname, unique and at least 6 alphanumeric chars."
          },
          "id": {
            "type": "string",
            "description": "User id, will find over id and ignore username. Fails if register_on_missing=true."
          },
          "meta": {
            "type": "object",
            "title": "User impersonation settings",
            "description": "Impersonation Settings",
            "properties": {
              "register_on_missing": {
                "type": "boolean",
                "description": "Register the user if it does not exists. Default: false"
              },
              "accept_tos_on_register": {
                "type": "boolean",
                "description": "Accept the TOS on registration, used only if register_on_missing=true. Default: false"
              },
              "skip_confirmation_on_register": {
                "type": "boolean",
                "description": "Skip email confirmation on creation, used only if register_on_missing=true. Default: false"
              },
              "email": {
                "type": "string",
                "description": "User email to use on registration. used only if register_on_missing=true. Default to <username>@example.org"
              },
              "name": {
                "type": "string",
                "description": "User name. Used only if register_on_missing=true. Default to username"
              }
            },
            "additionalProperties": false
          },
          "client_id": {
            "type": "string",
            "description": "OAuth application Client Id"
          },
          "client_secret": {
            "type": "string",
            "description": "OAuth application Client Secret"
          },
          "scope": {
            "type": "string",
            "enum": [
              "public",
              "spaces",
              "proposals",
              "meetings",
              "debates",
              "pages",
              "blogs",
              "oauth"
            ],
            "description": "Request scopes"
          }
        },
        "additionalProperties": false,
        "required": [
          "grant_type",
          "client_id",
          "client_secret",
          "scope",
          "auth_type"
        ]
      },
      "oauth_grant_param": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/client_credential"
          },
          {
            "$ref": "#/components/schemas/password_grant_impersonate"
          },
          {
            "$ref": "#/components/schemas/password_grant_login"
          }
        ]
      },
      "password_grant_param": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/password_grant_impersonate"
          },
          {
            "$ref": "#/components/schemas/password_grant_login"
          }
        ]
      },
      "blog": {
        "type": "object",
        "title": "Blog Post",
        "properties": {
          "id": {
            "type": "string",
            "description": "Blog Post Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "blog"
            ]
          },
          "attributes": {
            "type": "object",
            "title": "Blog Post Attributes",
            "properties": {
              "title": {
                "$ref": "#/components/schemas/translated_prop"
              },
              "body": {
                "$ref": "#/components/schemas/translated_prop"
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "title",
              "body"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Blog Post Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published blog post?"
              },
              "scope": {
                "type": "integer",
                "description": "Scope Id"
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published"
            ]
          },
          "links": {
            "type": "object",
            "title": "Blog Post Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "collection": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              },
              "prev": {
                "$ref": "#/components/schemas/resource_link"
              },
              "next": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self",
              "collection",
              "related"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Blog Post Relationships",
            "properties": {
              "space": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "participatory_processes",
                          "assemblies"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Linked Space Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Linked Space"
              },
              "component": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "blog_component"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Linked Blog Component Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Linked Blog Component"
              }
            },
            "required": [
              "component",
              "space"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta",
          "links"
        ]
      },
      "blog_index_response": {
        "type": "object",
        "title": "Blog Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/blog"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "blog_item_response": {
        "type": "object",
        "title": "Blog Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/blog"
          }
        },
        "required": [
          "data"
        ]
      },
      "generic_component": {
        "type": "object",
        "title": "Component",
        "properties": {
          "id": {
            "type": "string",
            "description": "Component Id"
          },
          "type": {
            "$ref": "#/components/schemas/component_type"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Component name"
              },
              "global_announcement": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Component annoucement (intro)"
              },
              "participatory_space_type": {
                "$ref": "#/components/schemas/space_classes"
              },
              "participatory_space_id": {
                "type": "string",
                "description": "Associate space id. Part of the polymorphic association (participatory_space_type,participatory_space_id)"
              },
              "created_at": {
                "type": "string",
                "description": "Creation date of the component"
              },
              "updated_at": {
                "type": "string",
                "description": "Last update date of the component"
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "name",
              "manifest_name",
              "participatory_space_type",
              "participatory_space_id"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Component Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published component?"
              },
              "scopes_enabled": {
                "type": "boolean",
                "description": "Component handle scopes?"
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published",
              "scopes_enabled"
            ]
          },
          "links": {
            "type": "object",
            "title": "Component Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Component Relationships",
            "properties": {
              "resources": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Component Linked Resources Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Component Linked Resources Metadata",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count of resources"
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Component Linked Resources"
              }
            }
          }
        }
      },
      "proposal_component": {
        "type": "object",
        "title": "Proposal Component",
        "properties": {
          "id": {
            "type": "string",
            "description": "Proposal Component Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "proposal_component"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Proposal Component name"
              },
              "global_announcement": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Proposal Component annoucement (intro)"
              },
              "participatory_space_type": {
                "$ref": "#/components/schemas/space_classes"
              },
              "participatory_space_id": {
                "type": "string",
                "description": "Associate space id. Part of the polymorphic association (participatory_space_type,participatory_space_id)"
              },
              "created_at": {
                "type": "string",
                "description": "Creation date of the component"
              },
              "updated_at": {
                "type": "string",
                "description": "Last update date of the component"
              },
              "manifest_name": {
                "type": "string",
                "enum": [
                  "proposals"
                ]
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "name",
              "manifest_name",
              "participatory_space_type",
              "participatory_space_id"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Proposal Component Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published component?"
              },
              "scopes_enabled": {
                "type": "boolean",
                "description": "Proposal Component handle scopes?"
              },
              "can_create_proposals": {
                "type": "boolean",
                "description": "If the current user can create proposal (component allows, and user did not reach publication limit)"
              },
              "can_vote": {
                "type": "boolean",
                "description": "If the current user can vote on the component"
              },
              "can_comment": {
                "type": "boolean",
                "description": "If the current user comment on the component"
              },
              "geocoding_enabled": {
                "type": "boolean",
                "description": "If the component needs a map to display its resources"
              },
              "attachments_allowed": {
                "type": "boolean",
                "description": "If the component allows to attach files to resources"
              },
              "collaborative_drafts_enabled": {
                "type": "boolean",
                "description": "If you can create collaborative draft for the proposal"
              },
              "comments_enabled": {
                "type": "boolean",
                "description": "If you can comment on proposals"
              },
              "comments_max_length": {
                "type": "integer",
                "description": "Characters limit for comment"
              },
              "default_sort_order": {
                "type": "string",
                "enum": [
                  "random",
                  "recent",
                  "most_voted",
                  "most_endorsed",
                  "most_commented",
                  "most_followed",
                  "with_more_authors",
                  "automatic",
                  "default"
                ],
                "description": "Default order of proposals"
              },
              "official_proposals_enabled": {
                "type": "boolean",
                "description": "If proposals can be official"
              },
              "participatory_texts_enabled": {
                "type": "boolean",
                "description": "If proposals are based on a text modification"
              },
              "proposal_edit_before_minutes": {
                "type": "integer",
                "description": "Time in minute participant can edit the proposal"
              },
              "proposal_edit_time": {
                "type": "string",
                "enum": [
                  "infinite",
                  "limited"
                ],
                "description": "Type of restriction for proposal edition"
              },
              "proposal_limit": {
                "type": "integer",
                "description": "Max proposal per participant. No maximum if value is 0"
              },
              "resources_permissions_enabled": {
                "type": "boolean",
                "description": "If authorizations can be defined per proposal"
              },
              "threshold_per_proposal": {
                "type": "integer",
                "description": "Threshold to compare similar proposals"
              },
              "vote_limit": {
                "type": "integer",
                "description": "Max Number of vote per participant. 0 if no limit"
              },
              "endorsements_enabled": {
                "type": "boolean",
                "description": "If endorsements are enabled"
              },
              "votes_enabled": {
                "type": "boolean",
                "description": "If votes on proposal are enabled"
              },
              "creation_enabled": {
                "type": "boolean",
                "description": "If participant can create proposal are enabled"
              },
              "proposal_answering_enabled": {
                "type": "boolean",
                "description": "If officials can answer proposals"
              },
              "amendment_creation_enabled": {
                "type": "boolean",
                "description": "If participant can propose an amendment to a proposal"
              },
              "amendment_reaction_enabled": {
                "type": "boolean",
                "description": "If participant can react to an amendment of a proposal"
              },
              "amendment_promotion_enabled": {
                "type": "boolean",
                "description": "If participant choose an amendment to replace their initial proposal"
              },
              "votes": {
                "title": "Proposal Vote Weights Options",
                "description": "Vote weight, if can_vote is true.",
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Proposal Vote Weight",
                  "properties": {
                    "label": {
                      "type": "string",
                      "description": "Label to voting button"
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Value to add to the vote. 0 for abstention"
                    }
                  },
                  "required": [
                    "label",
                    "weight"
                  ]
                }
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published",
              "scopes_enabled",
              "can_create_proposals",
              "can_vote",
              "can_comment",
              "geocoding_enabled",
              "attachments_allowed",
              "vote_limit"
            ]
          },
          "links": {
            "type": "object",
            "title": "Proposal Component Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              },
              "draft": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Proposal Component Relationships",
            "properties": {
              "resources": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Proposal Component Linked Resources Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Proposal Component Linked Resources Metadata",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count of resources"
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Proposal Component Linked Resources"
              }
            }
          }
        },
        "description": "A proposal component can host proposals from participants, and official proposals (proposals from the organization).\nThis component have many metadatas that explain what are the restrictions regarding proposing, voting, commenting, amending or endorsing. \n\nFeatures toggles: \n- `can_create_proposals`: If participants can create proposals\n- `can_vote`: If participants can vote\n- `can_comment`: If participants can comments\n- .... and some more\n\n\n"
      },
      "proposal_component_index_response": {
        "type": "object",
        "title": "Proposal Component Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/proposal_component"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "proposal_component_item_response": {
        "type": "object",
        "title": "Proposal Component Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/proposal_component"
          }
        },
        "required": [
          "data"
        ]
      },
      "blog_component": {
        "type": "object",
        "title": "Blog Post Component",
        "properties": {
          "id": {
            "type": "string",
            "description": "Blog Post Component Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "blog_component"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Blog Post Component name"
              },
              "global_announcement": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Blog Post Component annoucement (intro)"
              },
              "participatory_space_type": {
                "$ref": "#/components/schemas/space_classes"
              },
              "participatory_space_id": {
                "type": "string",
                "description": "Associate space id. Part of the polymorphic association (participatory_space_type,participatory_space_id)"
              },
              "created_at": {
                "type": "string",
                "description": "Creation date of the component"
              },
              "updated_at": {
                "type": "string",
                "description": "Last update date of the component"
              },
              "manifest_name": {
                "type": "string",
                "enum": [
                  "blogs"
                ]
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "name",
              "manifest_name",
              "participatory_space_type",
              "participatory_space_id"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Blog Post Component Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published component?"
              },
              "scopes_enabled": {
                "type": "boolean",
                "description": "Blog Post Component handle scopes?"
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published",
              "scopes_enabled"
            ]
          },
          "links": {
            "type": "object",
            "title": "Blog Post Component Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Blog Post Component Relationships",
            "properties": {
              "resources": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Blog Post Component Linked Resources Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Blog Post Component Linked Resources Metadata",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count of resources"
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Blog Post Component Linked Resources"
              }
            }
          }
        }
      },
      "blog_component_index_response": {
        "type": "object",
        "title": "Blog Component Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/blog_component"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "blog_component_item_response": {
        "type": "object",
        "title": "Blog Component Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/blog_component"
          }
        },
        "required": [
          "data"
        ]
      },
      "other_component": {
        "type": "object",
        "title": "Generic Component",
        "properties": {
          "id": {
            "type": "string",
            "description": "Generic Component Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "page_component",
              "meeting_component",
              "budget_component",
              "survey_component",
              "accountability_component",
              "debate_component",
              "sortition_component",
              "awesome_map_component",
              "awesome_iframe_component"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Generic Component name"
              },
              "global_announcement": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Generic Component annoucement (intro)"
              },
              "participatory_space_type": {
                "$ref": "#/components/schemas/space_classes"
              },
              "participatory_space_id": {
                "type": "string",
                "description": "Associate space id. Part of the polymorphic association (participatory_space_type,participatory_space_id)"
              },
              "created_at": {
                "type": "string",
                "description": "Creation date of the component"
              },
              "updated_at": {
                "type": "string",
                "description": "Last update date of the component"
              },
              "manifest_name": {
                "type": "string",
                "enum": [
                  "pages",
                  "meetings",
                  "budgets",
                  "surveys",
                  "accountability",
                  "debates",
                  "sortitions",
                  "awesome_map",
                  "awesome_iframe"
                ]
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "name",
              "manifest_name",
              "participatory_space_type",
              "participatory_space_id"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Generic Component Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published component?"
              },
              "scopes_enabled": {
                "type": "boolean",
                "description": "Generic Component handle scopes?"
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published",
              "scopes_enabled"
            ]
          },
          "links": {
            "type": "object",
            "title": "Generic Component Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Generic Component Relationships",
            "properties": {
              "resources": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Generic Component Linked Resources Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Generic Component Linked Resources Metadata",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Total count of resources"
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Generic Component Linked Resources"
              }
            }
          }
        }
      },
      "component": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/proposal_component"
          },
          {
            "$ref": "#/components/schemas/blog_component"
          },
          {
            "$ref": "#/components/schemas/other_component"
          }
        ]
      },
      "component_index_response": {
        "type": "object",
        "title": "Component Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/component"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "component_item_response": {
        "type": "object",
        "title": "Component Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/component"
          }
        },
        "required": [
          "data"
        ]
      },
      "error": {
        "type": "object",
        "title": "Api Error Payload",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error title, starting with HTTP Code, like 400: bad request"
          },
          "error_description": {
            "type": "string",
            "description": "Error detail, mostly validation error"
          },
          "state": {
            "type": "string",
            "description": "authentification state"
          }
        },
        "additionalProperties": false,
        "required": [
          "error",
          "error_description"
        ]
      },
      "error_response": {
        "$ref": "#/components/schemas/error"
      },
      "health": {
        "type": "object",
        "title": "Health Status",
        "properties": {
          "message": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          }
        }
      },
      "introspect_data": {
        "type": "object",
        "title": "Introspection Response",
        "properties": {
          "sub": {
            "type": "integer",
            "description": "Access token id"
          },
          "active": {
            "type": "boolean",
            "description": "If the token can be used"
          },
          "aud": {
            "type": "string",
            "description": "Where this token can be used (organization host)"
          },
          "resource": {
            "type": "object",
            "title": "Resource details",
            "properties": {
              "id": {
                "type": "string",
                "description": "resource id"
              },
              "type": {
                "type": "string",
                "enum": [
                  "user"
                ],
                "description": "resource type"
              },
              "attributes": {
                "type": "object",
                "title": "Resource Attributes",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Last update date"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Creation date"
                  },
                  "personal_url": {
                    "type": "string",
                    "description": "Personal url (social link, website, etc.)"
                  },
                  "locale": {
                    "type": "string",
                    "description": "Current prefered locale",
                    "enum": [
                      "en",
                      "fr"
                    ]
                  }
                },
                "required": [
                  "email",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "sub",
          "active",
          "aud",
          "exp"
        ]
      },
      "locale": {
        "title": "Current locale",
        "type": "string",
        "enum": [
          "en",
          "fr"
        ]
      },
      "locales": {
        "type": "array",
        "title": "Available locales",
        "items": {
          "$ref": "#/components/schemas/locale"
        }
      },
      "organization_attributes": {
        "title": "Organization Attributes",
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/translated_prop",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "$ref": "#/components/schemas/translated_prop",
            "additionalProperties": {
              "type": "string"
            }
          },
          "reference_prefix": {
            "type": "string",
            "description": "Prefix for the organization. Used to prefix uplodaded files and reference resources"
          },
          "host": {
            "type": "string"
          },
          "send_welcome_notification": {
            "type": "boolean",
            "description": "True if welcome email is sent to users"
          },
          "secondary_hosts": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Additional host, will redirect (301) to `host`"
            }
          },
          "available_locales": {
            "type": "array",
            "title": "Available locales",
            "items": {
              "$ref": "#/components/schemas/locale"
            }
          },
          "default_locale": {
            "type": "string",
            "description": "defaut locale for the organization"
          },
          "users_registration_mode": {
            "type": "string",
            "enum": [
              "enabled",
              "existing",
              "disabled"
            ],
            "description": "Define user registration mode: \n- `enabled`: Enable users registration\n- `existing`: Existing users will be able to login. Registration will be disabled.\n- `disabled`: No registration enabled\n"
          },
          "force_users_to_authenticate_before_access_organization": {
            "type": "boolean",
            "description": "Force users to authenticate before accessing the organization (disabled if users_registration_mode is `disabled`)"
          },
          "badges_enabled": {
            "type": "boolean",
            "description": "Enable badges for public views"
          },
          "enable_participatory_space_filters": {
            "type": "boolean",
            "description": "Display areas and scopes filter in public views."
          },
          "enable_machine_translations": {
            "type": "boolean",
            "description": "Enable machine translations (must be configured, see [Using machine translations](https://docs.decidim.org/en/develop/develop/machine_translations.html))"
          },
          "user_groups_enabled": {
            "type": "boolean",
            "description": "Enable user groups in public views"
          },
          "time_zone": {
            "$ref": "#/components/schemas/time_zone"
          },
          "comments_max_length": {
            "type": "integer",
            "description": "Default maximum length of comments"
          },
          "rich_text_editor_in_public_views": {
            "type": "boolean",
            "description": "Enable rich text editor in public views"
          },
          "created_at": {
            "$ref": "#/components/schemas/creation_date"
          },
          "updated_at": {
            "$ref": "#/components/schemas/edition_date"
          },
          "extended_data": {
            "type": "object",
            "description": "Extended data for the organization"
          }
        },
        "additionalProperties": false,
        "required": [
          "host",
          "name",
          "available_locales",
          "default_locale"
        ]
      },
      "organization": {
        "type": "object",
        "title": "Organization",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "organization"
            ]
          },
          "attributes": {
            "$ref": "#/components/schemas/organization_attributes"
          },
          "meta": {
            "title": "Organization Metadata",
            "type": "object",
            "properties": {
              "locales": {
                "type": "array",
                "title": "Available locales",
                "items": {
                  "$ref": "#/components/schemas/locale"
                }
              },
              "unconfirmed_host": {
                "type": "string",
                "description": "If host update is pending, unconfirmed host for the organization"
              }
            },
            "required": [
              "locales"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta"
        ]
      },
      "organization_index_response": {
        "type": "object",
        "title": "Organization Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/organization"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "organization_item_response": {
        "type": "object",
        "title": "Organization Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/organization"
          }
        },
        "required": [
          "data"
        ]
      },
      "organization_extended_data": {
        "type": "object",
        "title": "Organization extended data",
        "properties": {},
        "additionalProperties": true,
        "description": "Hash of values attached to an organization. These values won't be\ndisplayed to admins or users, consider this as an internal\ndata payload.\n"
      },
      "draft_proposal": {
        "type": "object",
        "title": "Draft Proposal",
        "properties": {
          "id": {
            "type": "string",
            "description": "Draft Proposal Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "draft_proposal"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Draft Proposal title"
              },
              "body": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Draft Proposal content"
              },
              "errors": {
                "type": "object",
                "title": "Draft Proposal Validation Errors",
                "properties": {
                  "title": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "body": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "title",
                  "body"
                ],
                "description": "Draft current errors"
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "title",
              "body"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Draft Proposition Metadata",
            "properties": {
              "publishable": {
                "type": "boolean",
                "description": "Draft is published as it is now?"
              },
              "client_id": {
                "type": "string",
                "description": "Attached client_id"
              },
              "scope": {
                "type": "integer",
                "description": "Scope Id"
              },
              "fields": {
                "type": "array",
                "description": "Editable field names",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "publishable",
              "client_id",
              "fields"
            ]
          },
          "links": {
            "type": "object",
            "title": "Proposal Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "collection": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self",
              "related",
              "collection"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Draft Proposal Relationships",
            "properties": {
              "space": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "$ref": "#/components/schemas/space_type"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Draft Proposal Related Space Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Draft Proposal Related Space"
              },
              "component": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "$ref": "#/components/schemas/component_type"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Draft Proposal Related Component Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Draft Proposal Related Component"
              },
              "author": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "user",
                          "user_group"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Draft Proposal Author Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Draft Proposal Author"
              },
              "coauthors": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user",
                            "user_group"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Draft Proposal Coauthors Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Draft Proposal Coauthors"
              }
            },
            "required": [
              "component",
              "space"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta",
          "links"
        ]
      },
      "draft_proposal_index_response": {
        "type": "object",
        "title": "Draft Proposal Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/draft_proposal"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "draft_proposal_item_response": {
        "type": "object",
        "title": "Draft Proposal Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/draft_proposal"
          }
        },
        "required": [
          "data"
        ]
      },
      "proposal": {
        "type": "object",
        "title": "Proposal",
        "properties": {
          "id": {
            "type": "string",
            "description": "Proposal Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "proposal"
            ]
          },
          "attributes": {
            "type": "object",
            "title": "Proposal Attributes",
            "properties": {
              "title": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Proposal title"
              },
              "body": {
                "$ref": "#/components/schemas/translated_prop",
                "description": "Proposal content"
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "required": [
              "created_at",
              "updated_at",
              "title",
              "body"
            ],
            "additionalProperties": false
          },
          "meta": {
            "type": "object",
            "title": "Proposal Metadata",
            "properties": {
              "published": {
                "type": "boolean",
                "description": "Published blog post?"
              },
              "scope": {
                "type": "integer",
                "description": "Scope Id"
              },
              "voted": {
                "type": "object",
                "title": "Current User Proposal Vote Metadata",
                "properties": {
                  "weight": {
                    "type": "integer",
                    "description": "Vote weight"
                  }
                },
                "required": [
                  "weight"
                ],
                "additionalProperties": false,
                "nullable": true
              }
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/translated_prop"
                }
              ]
            },
            "required": [
              "published"
            ]
          },
          "links": {
            "type": "object",
            "title": "Proposal Links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "collection": {
                "$ref": "#/components/schemas/resource_link"
              },
              "related": {
                "$ref": "#/components/schemas/resource_link"
              },
              "prev": {
                "$ref": "#/components/schemas/resource_link"
              },
              "next": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "additionalProperties": false,
            "required": [
              "self",
              "collection",
              "related"
            ]
          },
          "relationships": {
            "type": "object",
            "title": "Proposal Relationships",
            "properties": {
              "state": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "proposal_state"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Proposal State Relationship Data"
                  },
                  "meta": {
                    "type": "object",
                    "title": "Proposal State Relationship Metadata",
                    "properties": {
                      "token": {
                        "type": "string",
                        "description": "Proposal State token"
                      }
                    },
                    "required": [
                      "token"
                    ]
                  }
                },
                "required": [
                  "data",
                  "meta"
                ],
                "title": "Proposal State Relationship"
              },
              "space": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "$ref": "#/components/schemas/space_type"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Linked Space Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Linked Space"
              },
              "component": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "proposal_component"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Linked Proposal Component Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Linked Proposal Component"
              },
              "author": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "user",
                          "user_group"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "title": "Proposal's Author Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Proposal's Author"
              },
              "coauthors": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource Id"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user",
                            "user_group"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    },
                    "title": "Proposal's Coauthors Data"
                  }
                },
                "required": [
                  "data"
                ],
                "title": "Proposal's Coauthors"
              }
            },
            "required": [
              "component",
              "space"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta",
          "links"
        ]
      },
      "proposal_index_response": {
        "type": "object",
        "title": "Proposal Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/proposal"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "proposal_item_response": {
        "type": "object",
        "title": "Proposal Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/proposal"
          }
        },
        "required": [
          "data"
        ]
      },
      "user_extended_data": {
        "type": "object",
        "title": "User extended data",
        "properties": {},
        "additionalProperties": true,
        "description": "Hash of values attached to a user. These values won't be\ndisplayed to admins or users, consider this as an internal\ndata payload.\n"
      },
      "user": {
        "type": "object",
        "title": "User",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "user"
            ]
          },
          "meta": {
            "title": "User Metadata",
            "type": "object",
            "properties": {
              "blocked": {
                "type": "boolean",
                "description": "If the user is blocked, and need to be unblocked to signin"
              },
              "locked": {
                "type": "boolean",
                "description": "If the user is locked, and need to click on the mail link to unlock"
              }
            },
            "required": [
              "blocked",
              "locked"
            ],
            "additionalProperties": false
          },
          "relationships": {
            "type": "object",
            "title": "User Relationships",
            "properties": {
              "roles": {
                "type": "object",
                "title": "User Roles",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "title": "User Role",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user_role"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          },
          "attributes": {
            "type": "object",
            "title": "User Attributes",
            "properties": {
              "name": {
                "description": "User name, use to display the Profile identity. Public",
                "type": "string"
              },
              "nickname": {
                "description": "User nickname, unique identifier for the user. Public",
                "type": "string"
              },
              "personal_url": {
                "description": "Personal website URL or social link. Public",
                "type": "string"
              },
              "about": {
                "description": "Short bio of the user. Public",
                "type": "string"
              },
              "locale": {
                "$ref": "#/components/schemas/locale",
                "description": "User locale. Fallback to default locale of the organization. Private"
              },
              "email": {
                "description": "Email of the user. Private",
                "type": "string"
              },
              "extended_data": {
                "type": "object",
                "title": "User Extended Data",
                "description": "Additional data. Private",
                "properties": {},
                "additionalProperties": true
              },
              "created_at": {
                "$ref": "#/components/schemas/creation_date"
              },
              "updated_at": {
                "$ref": "#/components/schemas/edition_date"
              }
            },
            "additionalProperties": false,
            "required": [
              "created_at",
              "updated_at",
              "name",
              "nickname",
              "locale",
              "extended_data"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "additionalProperties": false
      },
      "user_index_response": {
        "type": "object",
        "title": "User Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/user"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "user_item_response": {
        "type": "object",
        "title": "User Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/user"
          }
        },
        "required": [
          "data"
        ]
      },
      "magic_link": {
        "type": "object",
        "title": "Magic Link",
        "properties": {
          "id": {
            "type": "string",
            "description": "Magic Token ID"
          },
          "type": {
            "type": "string",
            "enum": [
              "magic_link"
            ]
          },
          "attributes": {
            "type": "object",
            "title": "Magic Link Attributes",
            "properties": {
              "token": {
                "type": "string",
                "description": "Magic Link Token"
              },
              "label": {
                "type": "string",
                "description": "Magic Link description"
              }
            },
            "required": [
              "token",
              "label"
            ]
          },
          "links": {
            "type": "object",
            "title": "Magic Link links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/resource_link"
              },
              "sign_in": {
                "$ref": "#/components/schemas/resource_link"
              }
            },
            "required": [
              "self",
              "sign_in"
            ]
          }
        },
        "required": [
          "attributes",
          "links",
          "id",
          "type"
        ],
        "additionalProperties": false
      },
      "magic_link_index_response": {
        "type": "object",
        "title": "Magic Link Index Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/magic_link"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "magic_link_item_response": {
        "type": "object",
        "title": "Magic Link Item Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/magic_link"
          }
        },
        "required": [
          "data"
        ]
      },
      "magic_link_redirect": {
        "type": "object",
        "title": "Magic Redirect",
        "properties": {
          "id": {
            "type": "string",
            "description": "Magic Token ID"
          },
          "type": {
            "type": "string",
            "enum": [
              "magic_link_redirect"
            ]
          },
          "attributes": {
            "type": "object",
            "title": "Magic Link Attributes",
            "properties": {
              "redirect_url": {
                "type": "string",
                "description": "Redirection destination"
              },
              "label": {
                "type": "string",
                "description": "Magic Link description"
              }
            },
            "required": [
              "redirect_url",
              "label"
            ]
          },
          "links": {
            "type": "object",
            "title": "Magic Link links",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/get_action_link"
              },
              "magic_link": {
                "$ref": "#/components/schemas/get_action_link"
              }
            },
            "required": [
              "self",
              "magic_link"
            ]
          }
        },
        "required": [
          "attributes",
          "links",
          "id",
          "type"
        ],
        "additionalProperties": false
      }
    }
  },
  "paths": {
    "/users": {
      "get": {
        "summary": "List available Users",
        "tags": [
          "Users"
        ],
        "operationId": "users",
        "description": "List or search users of the organization",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[nickname_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "nickname not IN filter",
              "description": "match none of _nickname_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[nickname_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "nickname IN filter",
              "description": "match one of _nickname_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[nickname_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_nickname_ starts with",
              "title": "nickname starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[nickname_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "nickname equal filter",
              "description": "_nickname_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[nickname_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "nickname not equal filter",
              "description": "_nickname_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[nickname_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "nickname like filter",
              "description": "matches _nickname_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[nickname_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "nickname blank filter",
              "description": "_nickname_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "title": "id IN filter",
              "description": "match one of _id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[id_eq]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id equal filter",
              "description": "_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[id_lt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id less than filter",
              "description": "_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[id_gt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id greater than filter",
              "description": "_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id present filter",
              "description": "_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id blank filter",
              "description": "_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[extended_data_cont]",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "example": "\"foo\": \"bar\"",
            "description": "Search on user extended_data. use the format: `\"<key>\":<space>\"<value>\"`"
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "oauth"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Users listed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_index_response"
                },
                "examples": {
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "9920",
                          "type": "user",
                          "attributes": {
                            "name": "Salina Reichert DO",
                            "nickname": "o85n1gd0_7",
                            "personal_url": "http://thiel.test/andrea",
                            "email": "user7@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Rerum laborum inventore. 37\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Et tenetur tempore. 38\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-02T06:46:59Z",
                            "updated_at": "2025-07-02T06:46:59Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "9921",
                          "type": "user",
                          "attributes": {
                            "name": "Sueann Pouros",
                            "nickname": "lcsxmp5z_8",
                            "personal_url": "http://stiedemann.test/chun",
                            "email": "user8@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Eum illum et. 39\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Ipsa voluptates itaque. 40\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-02T06:46:59Z",
                            "updated_at": "2025-07-02T06:46:59Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "9926",
                          "type": "user",
                          "attributes": {
                            "name": "Chuck Will",
                            "nickname": "7jlby1mac_13",
                            "personal_url": "http://hoppe-haley.test/pierre.pagac",
                            "email": "user13@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Temporibus omnis dolorem. 65\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Dolore ut dolores. 66\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-02T06:46:59Z",
                            "updated_at": "2025-07-02T06:46:59Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "9927",
                          "type": "user",
                          "attributes": {
                            "name": "Clement Schulist",
                            "nickname": "u3_14",
                            "personal_url": "http://goyette-bernier.example/flora",
                            "email": "user14@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Autem consequatur numquam. 67\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Porro ut delectus. 68\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-02T06:46:59Z",
                            "updated_at": "2025-07-02T06:46:59Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "9923",
                          "type": "user",
                          "attributes": {
                            "name": "Philip Kilback I",
                            "nickname": "ydq3lztn_10",
                            "personal_url": "http://cruickshank-gleichner.test/jarrett_green",
                            "email": "user10@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Adipisci repellat velit. 59\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Distinctio a reprehenderit. 60\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-02T06:46:59Z",
                            "updated_at": "2025-07-02T06:46:59Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "9924",
                          "type": "user",
                          "attributes": {
                            "name": "Enda Collier",
                            "nickname": "dl5_11",
                            "personal_url": "http://steuber.example/kassandra_osinski",
                            "email": "user11@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Id iusto quos. 61\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Molestias fugit dicta. 62\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-02T06:46:59Z",
                            "updated_at": "2025-07-02T06:46:59Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "9925",
                          "type": "user",
                          "attributes": {
                            "name": "Thurman Bednar Jr.",
                            "nickname": "e5tqw13ks_12",
                            "personal_url": "http://gislason.test/al_berge",
                            "email": "user12@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Est ut similique. 63\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Optio et laudantium. 64\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-02T06:46:59Z",
                            "updated_at": "2025-07-02T06:46:59Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "9928",
                          "type": "user",
                          "attributes": {
                            "name": "Rev. Natisha Schimmel",
                            "nickname": "wst_15",
                            "personal_url": "http://emmerich.example/lacey_turner",
                            "email": "user15@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Et mollitia corporis. 69\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Itaque quaerat optio. 70\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-02T06:46:59Z",
                            "updated_at": "2025-07-02T06:46:59Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "user_fr": {
                    "value": {
                      "data": [
                        {
                          "id": "9929",
                          "type": "user",
                          "attributes": {
                            "name": "Dovie Yost",
                            "nickname": "b4_16",
                            "personal_url": "http://dach.example/tobi_muller",
                            "email": "user16@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Autem consequatur exercitationem. 79\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Magnam vitae nemo. 80\"}}",
                            "extended_data": {},
                            "locale": "fr",
                            "created_at": "2025-07-02T06:47:00Z",
                            "updated_at": "2025-07-02T06:47:00Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "filter_by_id_in": {
                    "value": {
                      "data": [
                        {
                          "id": "9930",
                          "type": "user",
                          "attributes": {
                            "name": "Marylou Bayer",
                            "nickname": "v9k6mub_17",
                            "personal_url": "http://christiansen-volkman.test/hector",
                            "email": "user17@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Et sit neque. 89\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Sed vel expedita. 90\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-02T06:47:00Z",
                            "updated_at": "2025-07-02T06:47:00Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "9931",
                          "type": "user",
                          "attributes": {
                            "name": "Christena Schroeder",
                            "nickname": "emxfm7_18",
                            "personal_url": "http://bashirian.test/georgann",
                            "email": "user18@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Non aliquam ad. 91\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Et optio eos. 92\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-02T06:47:00Z",
                            "updated_at": "2025-07-02T06:47:00Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "9932",
                          "type": "user",
                          "attributes": {
                            "name": "Amb. Wes Schoen",
                            "nickname": "ad9gcyd123_19",
                            "personal_url": "http://auer.example/will",
                            "email": "user19@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Nostrum aliquam ipsam. 93\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Recusandae dolores omnis. 94\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-02T06:47:00Z",
                            "updated_at": "2025-07-02T06:47:00Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "9933",
                          "type": "user",
                          "attributes": {
                            "name": "Misti Murray",
                            "nickname": "nm0up6_20",
                            "personal_url": "http://reynolds.example/brynn.west",
                            "email": "user20@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Atque id culpa. 95\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Et accusantium assumenda. 96\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-02T06:47:00Z",
                            "updated_at": "2025-07-02T06:47:00Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        },
                        {
                          "id": "9934",
                          "type": "user",
                          "attributes": {
                            "name": "Karri Funk",
                            "nickname": "u8_21",
                            "personal_url": "http://hodkiewicz.test/jimmy_gottlieb",
                            "email": "user21@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Ut et sed. 97\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Qui minus voluptates. 98\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-02T06:47:00Z",
                            "updated_at": "2025-07-02T06:47:00Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "filter_by_extended_data": {
                    "value": {
                      "data": [
                        {
                          "id": "9941",
                          "type": "user",
                          "attributes": {
                            "name": "Domonique Towne",
                            "nickname": "specific-data",
                            "personal_url": "http://dietrich.example/lorretta",
                            "email": "user28@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Nihil tenetur dolorem. 127\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Illo quia sint. 128\"}}",
                            "extended_data": {
                              "key": {
                                "is": "awesome"
                              }
                            },
                            "locale": "en",
                            "created_at": "2025-07-02T06:47:00Z",
                            "updated_at": "2025-07-02T06:47:00Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  },
                  "filter_by_nickname": {
                    "value": {
                      "data": [
                        {
                          "id": "9953",
                          "type": "user",
                          "attributes": {
                            "name": "Jerrod Donnelly",
                            "nickname": "blue-panda-218",
                            "personal_url": "http://schmidt-schiller.example/gil",
                            "email": "user40@example.org",
                            "about": "{\"en\"=>\"<script>alert(\\\"user_about\\\");</script> Repellat est est. 167\", \"machine_translations\"=>{\"fr\"=>\"<script>alert(\\\"user_about\\\");</script> Id placeat qui. 168\"}}",
                            "extended_data": {},
                            "locale": "en",
                            "created_at": "2025-07-02T06:47:01Z",
                            "updated_at": "2025-07-02T06:47:01Z"
                          },
                          "relationships": {
                            "roles": {
                              "data": []
                            }
                          },
                          "meta": {
                            "blocked": false,
                            "locked": false
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/components/proposal_components": {
      "get": {
        "summary": "Proposal Components",
        "tags": [
          "Components"
        ],
        "operationId": "proposal_components",
        "description": "List or search proposal components of the organization",
        "parameters": [
          {
            "name": "filter[name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name not IN filter",
              "description": "match none of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name IN filter",
              "description": "match one of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_name_ starts with",
              "title": "name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name equal filter",
              "description": "_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name not equal filter",
              "description": "_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name like filter",
              "description": "matches _name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "name blank filter",
              "description": "_name_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "title": "participatory_space_type not IN filter",
              "description": "match none of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "title": "participatory_space_type IN filter",
              "description": "match one of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_participatory_space_type_ starts with",
              "title": "participatory_space_type starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Decidim::Assembly",
              "title": "participatory_space_type equal filter",
              "description": "_participatory_space_type_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Decidim::Assembly",
              "title": "participatory_space_type not equal filter",
              "description": "_participatory_space_type_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_type like filter",
              "description": "matches _participatory_space_type_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_type blank filter",
              "description": "_participatory_space_type_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "participatory_space_id IN filter",
              "description": "match one of _participatory_space_id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id equal filter",
              "description": "_participatory_space_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id less than filter",
              "description": "_participatory_space_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id greater than filter",
              "description": "_participatory_space_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id present filter",
              "description": "_participatory_space_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id blank filter",
              "description": "_participatory_space_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "List of proposal components",
            "content": {
              "application/json": {
                "examples": {
                  "ok_with_draft": {
                    "value": {
                      "data": [
                        {
                          "id": "12271",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3534",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Ipsam corporis illo. 1897"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:47:09Z",
                            "updated_at": "2025-07-02T06:47:10Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "6533",
                                  "type": "proposal"
                                },
                                {
                                  "id": "6534",
                                  "type": "proposal"
                                },
                                {
                                  "id": "6535",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 3
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://31.lvh.me/components/proposal_components/12271",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3534",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://31.lvh.me/spaces/participatory_processes/3534",
                              "title": "<script>alert(\"participatory_process_title\");</script> Sit numquam at. 1871",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3534",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "draft": {
                              "href": "https://31.lvh.me/api/rest_full/v0.2/draft_proposals/6536",
                              "title": "Draft Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "12273",
                                "component_manifest": "proposals",
                                "space_id": "3534",
                                "space_manifest": "participatory_processes",
                                "resource_id": "6536",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "12272",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3534",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:47:10Z",
                            "updated_at": "2025-07-02T06:47:10Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://31.lvh.me/components/proposal_components/12272",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3534",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://31.lvh.me/spaces/participatory_processes/3534",
                              "title": "<script>alert(\"participatory_process_title\");</script> Sit numquam at. 1871",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3534",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "draft": {
                              "href": "https://31.lvh.me/api/rest_full/v0.2/draft_proposals/6536",
                              "title": "Draft Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "12273",
                                "component_manifest": "proposals",
                                "space_id": "3534",
                                "space_manifest": "participatory_processes",
                                "resource_id": "6536",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        },
                        {
                          "id": "12273",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3534",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Dignissimos quas quam. 1935"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:47:10Z",
                            "updated_at": "2025-07-02T06:47:10Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "6536",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://31.lvh.me/components/proposal_components/12273",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3534",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://31.lvh.me/spaces/participatory_processes/3534",
                              "title": "<script>alert(\"participatory_process_title\");</script> Sit numquam at. 1871",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3534",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "draft": {
                              "href": "https://31.lvh.me/api/rest_full/v0.2/draft_proposals/6536",
                              "title": "Draft Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "12273",
                                "component_manifest": "proposals",
                                "space_id": "3534",
                                "space_manifest": "participatory_processes",
                                "resource_id": "6536",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        }
                      ]
                    }
                  },
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "12267",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3532",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Nostrum animi omnis. 1689"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:47:09Z",
                            "updated_at": "2025-07-02T06:47:09Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "6528",
                                  "type": "proposal"
                                },
                                {
                                  "id": "6527",
                                  "type": "proposal"
                                },
                                {
                                  "id": "6529",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 3
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://29.lvh.me/components/proposal_components/12267",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3532",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://29.lvh.me/spaces/participatory_processes/3532",
                              "title": "<script>alert(\"participatory_process_title\");</script> Fuga et voluptatem. 1663",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3532",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "12268",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3532",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:47:09Z",
                            "updated_at": "2025-07-02T06:47:09Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://29.lvh.me/components/proposal_components/12268",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3532",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://29.lvh.me/spaces/participatory_processes/3532",
                              "title": "<script>alert(\"participatory_process_title\");</script> Fuga et voluptatem. 1663",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3532",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "components_in_Process": {
                    "value": {
                      "data": [
                        {
                          "id": "12269",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3533",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> In at quas. 1793"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:47:09Z",
                            "updated_at": "2025-07-02T06:47:09Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "6530",
                                  "type": "proposal"
                                },
                                {
                                  "id": "6531",
                                  "type": "proposal"
                                },
                                {
                                  "id": "6532",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 3
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://30.lvh.me/components/proposal_components/12269",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3533",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://30.lvh.me/spaces/participatory_processes/3533",
                              "title": "<script>alert(\"participatory_process_title\");</script> Quis vel quisquam. 1767",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3533",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "12270",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3533",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:47:09Z",
                            "updated_at": "2025-07-02T06:47:09Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://30.lvh.me/components/proposal_components/12270",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3533",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://30.lvh.me/spaces/participatory_processes/3533",
                              "title": "<script>alert(\"participatory_process_title\");</script> Quis vel quisquam. 1767",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3533",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "12281",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::Assembly",
                            "participatory_space_id": "2432",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Distinctio sit ipsum. 2175"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:47:10Z",
                            "updated_at": "2025-07-02T06:47:10Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://33.lvh.me/components/proposal_components/12281",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2432",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://33.lvh.me/spaces/assemblies/2432",
                              "title": "<script>alert(\"assembly_title\");</script> Magnam quos voluptas. 2081",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2432",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "12282",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::Assembly",
                            "participatory_space_id": "2432",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Reiciendis natus ex. 2181"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:47:10Z",
                            "updated_at": "2025-07-02T06:47:10Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://33.lvh.me/components/proposal_components/12282",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2432",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://33.lvh.me/spaces/assemblies/2432",
                              "title": "<script>alert(\"assembly_title\");</script> Magnam quos voluptas. 2081",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2432",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_component_index_response"
                }
              }
            }
          }
        }
      }
    },
    "/draft_proposals/{id}/publish": {
      "post": {
        "summary": "Publish a draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "operationId": "publishDraftProposal",
        "description": "Publish a draft proposal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Draft Id"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Draft Proposal published",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "6555",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-02T06:47:13Z",
                          "updated_at": "2025-07-02T06:47:13Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Earum unde facilis. 2663"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Modi est sit. 2665</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3541",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "12295",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "10043",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "10043",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://38.lvh.me/public/components/12295",
                            "title": "<script>alert(\"component_name\");</script> Velit reiciendis numquam. 2657",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3541",
                              "space_manifest": "participatory_processes",
                              "component_id": "12295",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://38.lvh.me/api/rest_full/v0.2/proposals/6555",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "12295",
                              "component_manifest": "proposals",
                              "space_id": "3541",
                              "space_manifest": "participatory_processes",
                              "resource_id": "6555",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://38.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "12295",
                              "component_manifest": "proposals",
                              "space_id": "3541",
                              "space_manifest": "participatory_processes",
                              "resource_id": "6555",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "client_id": 4633
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_item_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Body cannot be blank"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}": {
      "get": {
        "summary": "Organization",
        "tags": [
          "Organizations"
        ],
        "operationId": "organization",
        "description": "Show organization",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Organization Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Organization shown",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "4861",
                        "type": "organization",
                        "attributes": {
                          "host": "47.lvh.me",
                          "secondary_hosts": [],
                          "default_locale": "en",
                          "available_locales": [
                            "en",
                            "fr"
                          ],
                          "enable_machine_translations": false,
                          "enable_participatory_space_filters": true,
                          "badges_enabled": true,
                          "rich_text_editor_in_public_views": false,
                          "comments_max_length": 1000,
                          "time_zone": "UTC",
                          "users_registration_mode": "enabled",
                          "user_groups_enabled": true,
                          "force_users_to_authenticate_before_access_organization": false,
                          "reference_prefix": "V",
                          "send_welcome_notification": true,
                          "name": {
                            "en": "Jones, Lesch and Halvorson",
                            "fr": "Spinka, Kulas and Purdy"
                          },
                          "description": {
                            "en": "<p><script>alert(\"organization_description\");</script> Cupiditate fugiat distinctio. 2923</p>"
                          },
                          "extended_data": {},
                          "created_at": "2025-07-02T06:47:17Z",
                          "updated_at": "2025-07-02T06:47:17Z"
                        },
                        "meta": {
                          "locales": [
                            "en",
                            "fr"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/organization_item_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update organization",
        "tags": [
          "Organizations"
        ],
        "operationId": "updateOrganization",
        "description": "This endpoint allows you to update an organization.\n\n### Update host\nTo update the host, send in your payload the `host` attribute. It will be saved as an `unconfirmed_host` extended data attribute. \nOnce saved, a job will be enqueued to reverse DNS the unconfirmed host before actually updating the host.\nThe `host` attribute must be unique across all organizations.\nMore information on this update process is documented in the [Safe host update](https://octree-gva.github.io/decidim-rest-full/dev/update-hosts) page.\n\n### Update name\nTo update the name, send in your payload the `name` attribute.\nThe `name` attribute must be unique across all organizations.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Organization updated",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "5121",
                        "type": "organization",
                        "attributes": {
                          "host": "643.lvh.me",
                          "secondary_hosts": [
                            "[]"
                          ],
                          "default_locale": "en",
                          "available_locales": [
                            "en",
                            "fr"
                          ],
                          "enable_machine_translations": false,
                          "enable_participatory_space_filters": true,
                          "badges_enabled": true,
                          "rich_text_editor_in_public_views": false,
                          "comments_max_length": 1000,
                          "time_zone": "UTC",
                          "users_registration_mode": "enabled",
                          "user_groups_enabled": true,
                          "force_users_to_authenticate_before_access_organization": false,
                          "reference_prefix": "V",
                          "send_welcome_notification": true,
                          "name": {
                            "en": "New Name",
                            "fr": "Nom de l'organisation"
                          },
                          "description": {
                            "en": "<p><script>alert(\"organization_description\");</script> Voluptates voluptatem et. 45819</p>"
                          },
                          "extended_data": {},
                          "created_at": "2025-07-02T06:49:23Z",
                          "updated_at": "2025-07-02T06:49:23Z"
                        },
                        "meta": {
                          "locales": [
                            "en",
                            "fr"
                          ],
                          "unconfirmed_host": "new-host.com"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/organization_item_response"
                }
              }
            }
          },
          "404": {
            "description": "Organization Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Organization Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_host_taken": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Unconfirmed host has already been taken"
                    }
                  },
                  "bad_request_name_taken": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Name en has already been taken"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Update Organization Payload",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/organization_attributes"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/blogs/{id}": {
      "get": {
        "summary": "Show a blog detail",
        "tags": [
          "Blogs"
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "blogs"
            ]
          }
        ],
        "operationId": "blog",
        "description": "Get blog post details",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Blog Post Id"
            },
            "required": true
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          }
        ],
        "responses": {
          "404": {
            "description": "Blog Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Blog Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blog_item_response"
                },
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "1715",
                        "type": "blog",
                        "attributes": {
                          "created_at": "2025-07-02T06:47:24Z",
                          "updated_at": "2025-07-02T06:47:24Z",
                          "title": {
                            "en": "<script>alert(\"blog_title\");</script> Reiciendis aut qui. 3753"
                          },
                          "body": {
                            "en": "<p><script>alert(\"blog_body\");</script> Laborum vero est. 3755</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3563",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "12317",
                              "type": "blog_component"
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://67.lvh.me/public/components/12317",
                            "title": "<script>alert(\"component_name\");</script> Nemo placeat culpa. 3733",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3563",
                              "space_manifest": "participatory_processes",
                              "component_id": "12317",
                              "component_manifest": "blogs",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://67.lvh.me/api/rest_full/v0.2/blogs/1715",
                            "title": "Blogs Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "12317",
                              "component_manifest": "blogs",
                              "space_id": "3563",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1715",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://67.lvh.me/api/rest_full/v0.2/blogs",
                            "title": "Blogs List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "12317",
                              "component_manifest": "blogs",
                              "space_id": "3563",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1715",
                              "action_method": "GET"
                            }
                          },
                          "next": {
                            "href": "https://67.lvh.me/api/rest_full/v0.2/blogs/1714",
                            "title": "Next Blog Post",
                            "rel": "resource",
                            "meta": {
                              "component_id": "12317",
                              "component_manifest": "blogs",
                              "space_id": "3563",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1714",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://67.lvh.me/api/rest_full/v0.2/blogs/1716",
                            "title": "Previous Blog Post",
                            "rel": "resource",
                            "meta": {
                              "component_id": "12317",
                              "component_manifest": "blogs",
                              "space_id": "3563",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1716",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  },
                  "ok_no_more": {
                    "value": {
                      "data": {
                        "id": "1709",
                        "type": "blog",
                        "attributes": {
                          "created_at": "2025-07-02T06:47:24Z",
                          "updated_at": "2025-07-02T06:47:24Z",
                          "title": {
                            "en": "<script>alert(\"blog_title\");</script> Ratione sint enim. 3683"
                          },
                          "body": {
                            "en": "<p><script>alert(\"blog_body\");</script> Mollitia eum hic. 3685</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3562",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "12316",
                              "type": "blog_component"
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://66.lvh.me/public/components/12316",
                            "title": "<script>alert(\"component_name\");</script> Modi dolores hic. 3675",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3562",
                              "space_manifest": "participatory_processes",
                              "component_id": "12316",
                              "component_manifest": "blogs",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://66.lvh.me/api/rest_full/v0.2/blogs/1709",
                            "title": "Blogs Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "12316",
                              "component_manifest": "blogs",
                              "space_id": "3562",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1709",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://66.lvh.me/api/rest_full/v0.2/blogs",
                            "title": "Blogs List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "12316",
                              "component_manifest": "blogs",
                              "space_id": "3562",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1709",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://66.lvh.me/api/rest_full/v0.2/blogs/1710",
                            "title": "Previous Blog Post",
                            "rel": "resource",
                            "meta": {
                              "component_id": "12316",
                              "component_manifest": "blogs",
                              "space_id": "3562",
                              "space_manifest": "participatory_processes",
                              "resource_id": "1710",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/components/blog_components": {
      "get": {
        "summary": "Blog Components",
        "tags": [
          "Components"
        ],
        "operationId": "blog_components",
        "description": "List or search blog components of the organization",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "participatory_space_id IN filter",
              "description": "match one of _participatory_space_id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id equal filter",
              "description": "_participatory_space_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id less than filter",
              "description": "_participatory_space_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id greater than filter",
              "description": "_participatory_space_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id present filter",
              "description": "_participatory_space_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id blank filter",
              "description": "_participatory_space_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "title": "participatory_space_type not IN filter",
              "description": "match none of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Decidim::Assembly"
              },
              "title": "participatory_space_type IN filter",
              "description": "match one of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_participatory_space_type_ starts with",
              "title": "participatory_space_type starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Decidim::Assembly",
              "title": "participatory_space_type equal filter",
              "description": "_participatory_space_type_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Decidim::Assembly",
              "title": "participatory_space_type not equal filter",
              "description": "_participatory_space_type_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_type like filter",
              "description": "matches _participatory_space_type_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_type blank filter",
              "description": "_participatory_space_type_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name not IN filter",
              "description": "match none of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name IN filter",
              "description": "match one of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_name_ starts with",
              "title": "name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name equal filter",
              "description": "_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name not equal filter",
              "description": "_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name like filter",
              "description": "matches _name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "name blank filter",
              "description": "_name_ is null or empty"
            },
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "List of blog components",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "12351",
                          "type": "blog_component",
                          "attributes": {
                            "manifest_name": "blogs",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3577",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Atque mollitia quibusdam. 4987"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:47:30Z",
                            "updated_at": "2025-07-02T06:47:30Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://81.lvh.me/components/blog_components/12351",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3577",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://81.lvh.me/spaces/participatory_processes/3577",
                              "title": "<script>alert(\"participatory_process_title\");</script> Iure ut vel. 4935",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3577",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "components_in_Process": {
                    "value": {
                      "data": [
                        {
                          "id": "12370",
                          "type": "blog_component",
                          "attributes": {
                            "manifest_name": "blogs",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3582",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Praesentium saepe doloribus. 5511"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:47:32Z",
                            "updated_at": "2025-07-02T06:47:32Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://86.lvh.me/components/blog_components/12370",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3582",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://86.lvh.me/spaces/participatory_processes/3582",
                              "title": "<script>alert(\"participatory_process_title\");</script> Dolor et iure. 5459",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3582",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "12364",
                          "type": "blog_component",
                          "attributes": {
                            "manifest_name": "blogs",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3580",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Cum fugiat aliquam. 5309"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:47:31Z",
                            "updated_at": "2025-07-02T06:47:31Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://84.lvh.me/components/blog_components/12364",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3580",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://84.lvh.me/spaces/participatory_processes/3580",
                              "title": "<script>alert(\"participatory_process_title\");</script> Minus fugit voluptatibus. 5253",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3580",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        },
                        {
                          "id": "12365",
                          "type": "blog_component",
                          "attributes": {
                            "manifest_name": "blogs",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3580",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Nemo nam mollitia. 5315"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:47:31Z",
                            "updated_at": "2025-07-02T06:47:31Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://84.lvh.me/components/blog_components/12365",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3580",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://84.lvh.me/spaces/participatory_processes/3580",
                              "title": "<script>alert(\"participatory_process_title\");</script> Minus fugit voluptatibus. 5253",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3580",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/blog_component_index_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/me/magic_links": {
      "post": {
        "summary": "Create a magic-lick",
        "tags": [
          "Users"
        ],
        "operationId": "generateMagicLink",
        "description": "Generates a uniq magic link, valid for 5minutes. If the user follow this link, it will be signed in automatically\n",
        "parameters": [],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "oauth"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "bad_blocked": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "User blocked"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "201": {
            "description": "Magick link created",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "63",
                        "type": "magic_link",
                        "attributes": {
                          "token": "emg3SkNoVTdqNnc0YTFIeng3RkM=",
                          "label": "My label"
                        },
                        "links": {
                          "self": {
                            "href": "https://94.lvh.me/api/rest_full/v0.2/me/magic_links",
                            "title": "Generates a magic link",
                            "rel": "resource",
                            "meta": {
                              "action_method": "POST",
                              "action_enctype": "application/x-www-form-urlencoded"
                            }
                          },
                          "sign_in": {
                            "href": "https://94.lvh.me/api/rest_full/v0.2/me/magic_links/emg3SkNoVTdqNnc0YTFIeng3RkM=",
                            "title": "Sign in with magic link",
                            "rel": "resource",
                            "meta": {
                              "action_method": "GET"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/magic_link_item_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Generate Magic Link Payload",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "redirect_url": {
                        "type": "string",
                        "description": "Redirect url after sign-in"
                      }
                    },
                    "required": [
                      "redirect_url"
                    ],
                    "description": "Optional payload to configure the magic link"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "summary": "Organizations",
        "tags": [
          "Organizations"
        ],
        "operationId": "organizations",
        "description": "List available organizations",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Organizations listed",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "2",
                          "type": "organization",
                          "attributes": {
                            "host": "localhost",
                            "secondary_hosts": [
                              "0.0.0.0",
                              "127.0.0.1"
                            ],
                            "default_locale": "en",
                            "available_locales": [
                              "en",
                              "fr"
                            ],
                            "enable_machine_translations": false,
                            "enable_participatory_space_filters": true,
                            "badges_enabled": true,
                            "rich_text_editor_in_public_views": true,
                            "comments_max_length": 1000,
                            "time_zone": "UTC",
                            "users_registration_mode": "enabled",
                            "user_groups_enabled": true,
                            "force_users_to_authenticate_before_access_organization": false,
                            "reference_prefix": "PhD",
                            "send_welcome_notification": true,
                            "name": {
                              "en": "Schowalter-Kuphal",
                              "fr": ""
                            },
                            "description": {
                              "en": "<p>Ea quis aspernatur voluptatibus beatae maxime quis consequatur sit necessitatibus eos omnis blanditiis sed excepturi.</p>"
                            },
                            "extended_data": {},
                            "created_at": "2025-06-25T05:51:20Z",
                            "updated_at": "2025-06-28T06:23:54Z"
                          },
                          "meta": {
                            "locales": [
                              "en",
                              "fr"
                            ]
                          }
                        },
                        {
                          "id": "4911",
                          "type": "organization",
                          "attributes": {
                            "host": "97.lvh.me",
                            "secondary_hosts": [],
                            "default_locale": "en",
                            "available_locales": [
                              "en",
                              "fr"
                            ],
                            "enable_machine_translations": false,
                            "enable_participatory_space_filters": true,
                            "badges_enabled": true,
                            "rich_text_editor_in_public_views": false,
                            "comments_max_length": 1000,
                            "time_zone": "UTC",
                            "users_registration_mode": "enabled",
                            "user_groups_enabled": true,
                            "force_users_to_authenticate_before_access_organization": false,
                            "reference_prefix": "PhD",
                            "send_welcome_notification": true,
                            "name": {
                              "en": "Terry Group",
                              "fr": "Legros-Marquardt"
                            },
                            "description": {
                              "en": "<p><script>alert(\"organization_description\");</script> Est commodi dolorem. 5949</p>"
                            },
                            "extended_data": {},
                            "created_at": "2025-07-02T06:47:37Z",
                            "updated_at": "2025-07-02T06:47:37Z"
                          },
                          "meta": {
                            "locales": [
                              "en",
                              "fr"
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/organization_index_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/proposal_votes": {
      "post": {
        "summary": "Vote",
        "tags": [
          "Proposals Vote"
        ],
        "operationId": "voteProposal",
        "description": "Vote on a proposal",
        "parameters": [],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Vote created",
            "content": {
              "application/json": {
                "examples": {
                  "default_with_abstention": {
                    "value": {
                      "data": {
                        "id": "6606",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-02T06:47:41Z",
                          "updated_at": "2025-07-02T06:47:41Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Eum sunt voluptate. 6229"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Illo voluptatem omnis. 6231</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3591",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "12383",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "10166",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "10166",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://105.lvh.me/public/components/12383",
                            "title": "<script>alert(\"proposals\");</script> Proposals",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3591",
                              "space_manifest": "participatory_processes",
                              "component_id": "12383",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://105.lvh.me/api/rest_full/v0.2/proposals/6606",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "12383",
                              "component_manifest": "proposals",
                              "space_id": "3591",
                              "space_manifest": "participatory_processes",
                              "resource_id": "6606",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://105.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "12383",
                              "component_manifest": "proposals",
                              "space_id": "3591",
                              "space_manifest": "participatory_processes",
                              "resource_id": "6606",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "voted": {
                            "weight": 0
                          }
                        }
                      }
                    }
                  },
                  "voting_cards": {
                    "value": {
                      "data": {
                        "id": "6607",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-02T06:47:41Z",
                          "updated_at": "2025-07-02T06:47:41Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Quos occaecati harum. 6277"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Commodi et rerum. 6279</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3592",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "12384",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "10168",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "10168",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://106.lvh.me/public/components/12384",
                            "title": "<script>alert(\"proposals\");</script> Proposals",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3592",
                              "space_manifest": "participatory_processes",
                              "component_id": "12384",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://106.lvh.me/api/rest_full/v0.2/proposals/6607",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "12384",
                              "component_manifest": "proposals",
                              "space_id": "3592",
                              "space_manifest": "participatory_processes",
                              "resource_id": "6607",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://106.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "12384",
                              "component_manifest": "proposals",
                              "space_id": "3592",
                              "space_manifest": "participatory_processes",
                              "resource_id": "6607",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "voted": {
                            "weight": 2
                          }
                        }
                      }
                    }
                  },
                  "voting_cards_with_abstention": {
                    "value": {
                      "data": {
                        "id": "6608",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-02T06:47:41Z",
                          "updated_at": "2025-07-02T06:47:41Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Facere corrupti eligendi. 6325"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Quas provident ut. 6327</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3593",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "12385",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "10170",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "10170",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://107.lvh.me/public/components/12385",
                            "title": "<script>alert(\"proposals\");</script> Proposals",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3593",
                              "space_manifest": "participatory_processes",
                              "component_id": "12385",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://107.lvh.me/api/rest_full/v0.2/proposals/6608",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "12385",
                              "component_manifest": "proposals",
                              "space_id": "3593",
                              "space_manifest": "participatory_processes",
                              "resource_id": "6608",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://107.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "12385",
                              "component_manifest": "proposals",
                              "space_id": "3593",
                              "space_manifest": "participatory_processes",
                              "resource_id": "6608",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "voted": {
                            "weight": 0
                          }
                        }
                      }
                    }
                  },
                  "default": {
                    "value": {
                      "data": {
                        "id": "6609",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-02T06:47:42Z",
                          "updated_at": "2025-07-02T06:47:42Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Fugiat commodi totam. 6375"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Dolor repellat aliquid. 6377</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3594",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "12386",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "10172",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "10172",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://108.lvh.me/public/components/12386",
                            "title": "<script>alert(\"proposals\");</script> Proposals",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3594",
                              "space_manifest": "participatory_processes",
                              "component_id": "12386",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://108.lvh.me/api/rest_full/v0.2/proposals/6609",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "12386",
                              "component_manifest": "proposals",
                              "space_id": "3594",
                              "space_manifest": "participatory_processes",
                              "resource_id": "6609",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://108.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "12386",
                              "component_manifest": "proposals",
                              "space_id": "3594",
                              "space_manifest": "participatory_processes",
                              "resource_id": "6609",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "voted": {
                            "weight": 1
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_item_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Vote A Proposal Payload",
                "properties": {
                  "proposal_id": {
                    "type": "integer",
                    "description": "Proposal Id"
                  },
                  "data": {
                    "type": "object",
                    "title": "Vote A Proposal Data",
                    "properties": {
                      "weight": {
                        "type": "integer",
                        "description": "Weight for your vote"
                      }
                    },
                    "required": [
                      "weight"
                    ],
                    "description": "Payload to send your vote"
                  }
                },
                "required": [
                  "data",
                  "proposal_id"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/me/magic_links/{magic_token}": {
      "get": {
        "summary": "Use a magic-lick",
        "tags": [
          "Users"
        ],
        "operationId": "magicLinkSignin",
        "description": "Challenge given token, open and a session and redirect. Publically accessible by HTTP.\n",
        "parameters": [
          {
            "name": "magic_token",
            "in": "path",
            "schema": {
              "type": "string",
              "description": "A token received for magic link"
            },
            "required": true
          }
        ],
        "security": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "bad_blocked": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "User blocked"
                    }
                  },
                  "bad_token": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Token not found"
                    }
                  },
                  "bad_token_expired": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Invalid Token"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "302": {
            "description": "Signed in",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/me/extended_data": {
      "get": {
        "summary": "Get user extended data",
        "tags": [
          "Users"
        ],
        "operationId": "userData",
        "description": "Fetch user extended data",
        "parameters": [
          {
            "name": "object_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "object path, in dot style, like foo.bar"
            }
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "oauth"
            ]
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Resource not found",
                      "error_description": "Resource not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Extended Data for a given object_path given",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "personal": {
                          "birthday": "1989-01-28"
                        },
                        "birthday": "1989-01-28"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user_extended_data"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user extended data",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "oauth"
            ]
          }
        ],
        "operationId": "setUserData",
        "description": "The extended_data feature allows you to update a hash with recursive merging. Use the body payload with these keys:\n\n1. `data`: The value or hash you want to update.\n2. `object_path`: The dot-style path to the key (e.g., access.this.key).\n\n**Root path**<br />\nTo update data from root of the hash, use `object_path=\".\"`.\n\nExample:\n```\n  body={\"data\": {\"name\": \"Jane\"}, \"object_path\": \"personnal\"}\n```\nThis recursively merges data into the hash without removing existing keys.\n\n**Merge some data**<br />\nInitial hash:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\"}\n  }\n```\nPatch payload:\n```json\n  {\n    \"data\": {\n      \"name\": \"Jane\"\n    },\n    \"object_path\": \"personnal\"\n  }\n```\nResult:\n```\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\", \"name\": \"Jane\"}\n  }\n```\n\n**Create new Paths**<br />\nPaths are created as needed.\nExemple:\n```json\n  body = {\"data\": {\"external_user_id\": 12}, \"object_path\": \"data-store.my-app.foo\"}\n```\nResult:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\"},\n    \"data-store\": {\"my-app\": {\"foo\": {\"external_user_id\": 12}}}\n  }\n```\nAlternatively:\n```\n  body = {\"data\": 12, \"object_path\": \"data-store.my-app.foo.external_user_id\"}\n```\n\n**Remove a key**<br />\nSet a key to null or an empty value to remove it.\n\nExample: Initial hash:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\", \"name\": \"Jane\"}\n  }\n```\nPatch:\n```json\n  body = {\"data\": {\"birthday\": \"\"}, \"object_path\": \"personnal\"}\n```\n\nResult:\n```\n{\n  \"personnal\": {\"name\": \"Jane\"}\n}\n```\n\n**Return Value**<br />\nThe update request returns the updated value at the specified path.\n\n",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Update extended data value",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "foo": "bar"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user_extended_data"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "User Extended Data Payload",
                "properties": {
                  "data": {
                    "type": "object",
                    "title": "User Extended Data Data",
                    "description": "New value for the extended data at the given path"
                  },
                  "object_path": {
                    "type": "string",
                    "description": "object path, in dot style, like foo.bar. use '.' to update the whole user data"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/spaces/search": {
      "get": {
        "summary": "Search Participatory Spaces",
        "tags": [
          "Spaces"
        ],
        "operationId": "searchSpaces",
        "description": "List or search spaces of the organization. Can be processes, assemblies, or any other registred participatory space.",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[manifest_name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "participatory_processes",
                  "assemblies"
                ]
              },
              "title": "manifest_name not IN filter",
              "description": "match none of _manifest_name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "participatory_processes",
                  "assemblies"
                ]
              },
              "title": "manifest_name IN filter",
              "description": "match one of _manifest_name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_manifest_name_ starts with",
              "title": "manifest_name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "title": "manifest_name equal filter",
              "description": "_manifest_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "title": "manifest_name not equal filter",
              "description": "_manifest_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "manifest_name like filter",
              "description": "matches _manifest_name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "manifest_name blank filter",
              "description": "_manifest_name_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "title": "id IN filter",
              "description": "match one of _id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[id_eq]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id equal filter",
              "description": "_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[id_lt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id less than filter",
              "description": "_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[id_gt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id greater than filter",
              "description": "_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id present filter",
              "description": "_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id blank filter",
              "description": "_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[title_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "title not IN filter",
              "description": "match none of _title_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[title_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "title IN filter",
              "description": "match one of _title_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[title_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_title_ starts with",
              "title": "title starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[title_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "title equal filter",
              "description": "_title_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[title_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "title not equal filter",
              "description": "_title_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[title_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "title like filter",
              "description": "matches _title_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[title_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "title blank filter",
              "description": "_title_ is null or empty"
            },
            "required": false
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Search Results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/space_index_response"
                },
                "examples": {
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "2530",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Dignissimos vitae a. 18161"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Similique aut rerum. 18163"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Consequatur sed sunt. 18165</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Sunt est sapiente. 18167</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-02T06:48:01Z",
                            "updated_at": "2025-07-02T06:48:01Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://247.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=2530",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "2530",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://247.lvh.me/public/assemblies/2530",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2530",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://247.lvh.me/system/organizations/4953",
                              "title": "Feeney, Cartwright and Reynolds",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "2531",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Et minima repellat. 18191"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Qui rerum qui. 18193"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Rerum voluptas molestiae. 18195</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Est aut dolorem. 18197</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-02T06:48:01Z",
                            "updated_at": "2025-07-02T06:48:01Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://247.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=2531",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "2531",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://247.lvh.me/public/assemblies/2531",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2531",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://247.lvh.me/system/organizations/4953",
                              "title": "Feeney, Cartwright and Reynolds",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "filter_by_id_in": {
                    "value": {
                      "data": [
                        {
                          "id": "3655",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Accusantium ab quam. 19211"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Provident atque eos. 19213"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Eaque esse aut. 19215</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> A delectus aliquid. 19217</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-02T06:48:02Z",
                            "updated_at": "2025-07-02T06:48:02Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://261.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=3655",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "3655",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://261.lvh.me/public/participatory_processes/3655",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3655",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://261.lvh.me/system/organizations/4955",
                              "title": "Murazik-Greenfelder",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "3656",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Adipisci cumque eum. 19261"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Sapiente a possimus. 19263"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Laudantium assumenda alias. 19265</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Nam laborum omnis. 19267</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-02T06:48:02Z",
                            "updated_at": "2025-07-02T06:48:02Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://261.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=3656",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "3656",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://261.lvh.me/public/participatory_processes/3656",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3656",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://261.lvh.me/system/organizations/4955",
                              "title": "Murazik-Greenfelder",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "3657",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Adipisci molestiae nihil. 19311"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Et asperiores doloribus. 19313"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Distinctio ea earum. 19315</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Dolorem cum magni. 19317</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-02T06:48:02Z",
                            "updated_at": "2025-07-02T06:48:02Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://261.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=3657",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "3657",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://261.lvh.me/public/participatory_processes/3657",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3657",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://261.lvh.me/system/organizations/4955",
                              "title": "Murazik-Greenfelder",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "manifest_name_in_Assemblies": {
                    "value": {
                      "data": [
                        {
                          "id": "2542",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Porro sed et. 20407"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Nesciunt vero ipsa. 20409"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Illum ut optio. 20411</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Nobis consequatur ducimus. 20413</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-02T06:48:04Z",
                            "updated_at": "2025-07-02T06:48:04Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://275.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=2542",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "2542",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://275.lvh.me/public/assemblies/2542",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2542",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://275.lvh.me/system/organizations/4957",
                              "title": "Boehm-Kshlerin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "6",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "My assembly for testing purpose",
                              "fr": "c'est une assemblée"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Quasi cupiditate distinctio. 19993"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Voluptatem quasi rerum. 19995</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Velit tenetur et. 19997</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-02T06:48:03Z",
                            "updated_at": "2025-07-02T06:48:03Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [
                                {
                                  "id": "12772",
                                  "type": "accountability_component"
                                },
                                {
                                  "id": "12777",
                                  "type": "awesome_iframe_component"
                                },
                                {
                                  "id": "12776",
                                  "type": "awesome_map_component"
                                },
                                {
                                  "id": "12775",
                                  "type": "blog_component"
                                },
                                {
                                  "id": "12770",
                                  "type": "budget_component"
                                },
                                {
                                  "id": "12773",
                                  "type": "debate_component"
                                },
                                {
                                  "id": "12762",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "12769",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "12764",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "12766",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "12767",
                                  "type": "page_component"
                                },
                                {
                                  "id": "12765",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "12761",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "12763",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "12768",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "12774",
                                  "type": "sortition_component"
                                },
                                {
                                  "id": "12771",
                                  "type": "survey_component"
                                }
                              ],
                              "meta": {
                                "count": 17
                              },
                              "links": {
                                "self": {
                                  "href": "https://275.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=6",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "6",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://275.lvh.me/public/assemblies/6",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "6",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://275.lvh.me/system/organizations/4957",
                              "title": "Boehm-Kshlerin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "2543",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Inventore reprehenderit doloremque. 20457"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Assumenda adipisci nemo. 20459"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Et corporis facere. 20461</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Est aliquam dicta. 20463</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-02T06:48:04Z",
                            "updated_at": "2025-07-02T06:48:04Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://275.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=2543",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "2543",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://275.lvh.me/public/assemblies/2543",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2543",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://275.lvh.me/system/organizations/4957",
                              "title": "Boehm-Kshlerin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "2541",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Est exercitationem animi. 20357"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Assumenda amet autem. 20359"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Ut et labore. 20361</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Inventore ea ab. 20363</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-02T06:48:04Z",
                            "updated_at": "2025-07-02T06:48:04Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://275.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=2541",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "2541",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://275.lvh.me/public/assemblies/2541",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2541",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://275.lvh.me/system/organizations/4957",
                              "title": "Boehm-Kshlerin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "2545",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Aut quasi autem. 20995"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Neque quas at. 20997"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Aut libero esse. 20999</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Rerum illum qui. 21001</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-02T06:48:04Z",
                            "updated_at": "2025-07-02T06:48:04Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://282.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=2545",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "2545",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://282.lvh.me/public/assemblies/2545",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2545",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://282.lvh.me/system/organizations/4958",
                              "title": "Schimmel-Champlin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "3664",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Consequatur sed ipsa. 20975"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Veniam fugiat voluptate. 20977"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Et veritatis qui. 20979</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Repudiandae ut et. 20981</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-02T06:48:04Z",
                            "updated_at": "2025-07-02T06:48:04Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://282.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=3664",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "3664",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://282.lvh.me/public/participatory_processes/3664",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3664",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://282.lvh.me/system/organizations/4958",
                              "title": "Schimmel-Champlin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "2546",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Quis sed odit. 21045"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Doloremque qui qui. 21047"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Nihil accusantium incidunt. 21049</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Expedita dolor itaque. 21051</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-02T06:48:04Z",
                            "updated_at": "2025-07-02T06:48:04Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://282.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=2546",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "2546",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://282.lvh.me/public/assemblies/2546",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2546",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://282.lvh.me/system/organizations/4958",
                              "title": "Schimmel-Champlin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "3666",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Hic cum autem. 21075"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Et modi iure. 21077"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Aliquam atque neque. 21079</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Neque ut et. 21081</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-02T06:48:04Z",
                            "updated_at": "2025-07-02T06:48:04Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://282.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=3666",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "3666",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://282.lvh.me/public/participatory_processes/3666",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3666",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://282.lvh.me/system/organizations/4958",
                              "title": "Schimmel-Champlin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "2544",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "<script>alert(\"assembly_title\");</script> Quia et aut. 20945"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Placeat ut earum. 20947"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Rerum saepe voluptas. 20949</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Fuga quia nam. 20951</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-02T06:48:04Z",
                            "updated_at": "2025-07-02T06:48:04Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://282.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=2544",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "2544",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://282.lvh.me/public/assemblies/2544",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2544",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://282.lvh.me/system/organizations/4958",
                              "title": "Schimmel-Champlin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "6",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "My assembly for testing purpose",
                              "fr": "c'est une assemblée"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Et quis maxime. 20581"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Facilis pariatur ratione. 20583</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Et quasi unde. 20585</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-02T06:48:04Z",
                            "updated_at": "2025-07-02T06:48:04Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [
                                {
                                  "id": "12789",
                                  "type": "accountability_component"
                                },
                                {
                                  "id": "12794",
                                  "type": "awesome_iframe_component"
                                },
                                {
                                  "id": "12793",
                                  "type": "awesome_map_component"
                                },
                                {
                                  "id": "12792",
                                  "type": "blog_component"
                                },
                                {
                                  "id": "12787",
                                  "type": "budget_component"
                                },
                                {
                                  "id": "12790",
                                  "type": "debate_component"
                                },
                                {
                                  "id": "12786",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "12779",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "12781",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "12783",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "12784",
                                  "type": "page_component"
                                },
                                {
                                  "id": "12782",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "12778",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "12785",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "12780",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "12791",
                                  "type": "sortition_component"
                                },
                                {
                                  "id": "12788",
                                  "type": "survey_component"
                                }
                              ],
                              "meta": {
                                "count": 17
                              },
                              "links": {
                                "self": {
                                  "href": "https://282.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=6",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "6",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://282.lvh.me/public/assemblies/6",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "6",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://282.lvh.me/system/organizations/4958",
                              "title": "Schimmel-Champlin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        },
                        {
                          "id": "3665",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "participatory_processes",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "title": {
                              "en": "<script>alert(\"participatory_process_title\");</script> Nihil molestiae dolor. 21025"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"participatory_process_subtitle\");</script> Tempore ab alias. 21027"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"participatory_process_short_description\");</script> Pariatur doloremque a. 21029</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"participatory_process_description\");</script> Dolores totam voluptatem. 21031</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-02T06:48:04Z",
                            "updated_at": "2025-07-02T06:48:04Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [],
                              "meta": {
                                "count": 0
                              },
                              "links": {
                                "self": {
                                  "href": "https://282.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=3665",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "participatory_processes",
                                    "space_id": "3665",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://282.lvh.me/public/participatory_processes/3665",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3665",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://282.lvh.me/system/organizations/4958",
                              "title": "Schimmel-Champlin",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "search_translatable_text": {
                    "value": {
                      "data": [
                        {
                          "id": "6",
                          "type": "space",
                          "attributes": {
                            "manifest_name": "assemblies",
                            "participatory_space_type": "Decidim::Assembly",
                            "title": {
                              "en": "My assembly for testing purpose",
                              "fr": "c'est une assemblée"
                            },
                            "subtitle": {
                              "en": "<script>alert(\"assembly_subtitle\");</script> Ut itaque est. 19405"
                            },
                            "short_description": {
                              "en": "<p><script>alert(\"assembly_short_description\");</script> Ut est praesentium. 19407</p>"
                            },
                            "description": {
                              "en": "<p><script>alert(\"assembly_description\");</script> Facilis expedita eos. 19409</p>"
                            },
                            "visibility": "public",
                            "created_at": "2025-07-02T06:48:03Z",
                            "updated_at": "2025-07-02T06:48:03Z"
                          },
                          "relationships": {
                            "components": {
                              "data": [
                                {
                                  "id": "12755",
                                  "type": "accountability_component"
                                },
                                {
                                  "id": "12760",
                                  "type": "awesome_iframe_component"
                                },
                                {
                                  "id": "12759",
                                  "type": "awesome_map_component"
                                },
                                {
                                  "id": "12758",
                                  "type": "blog_component"
                                },
                                {
                                  "id": "12753",
                                  "type": "budget_component"
                                },
                                {
                                  "id": "12756",
                                  "type": "debate_component"
                                },
                                {
                                  "id": "12752",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "12745",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "12747",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "12749",
                                  "type": "meeting_component"
                                },
                                {
                                  "id": "12750",
                                  "type": "page_component"
                                },
                                {
                                  "id": "12748",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "12744",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "12751",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "12746",
                                  "type": "proposal_component"
                                },
                                {
                                  "id": "12757",
                                  "type": "sortition_component"
                                },
                                {
                                  "id": "12754",
                                  "type": "survey_component"
                                }
                              ],
                              "meta": {
                                "count": 17
                              },
                              "links": {
                                "self": {
                                  "href": "https://268.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=6",
                                  "title": "Component list for this space",
                                  "rel": "resource",
                                  "meta": {
                                    "space_manifest": "assemblies",
                                    "space_id": "6",
                                    "action_method": "GET"
                                  }
                                }
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://268.lvh.me/public/assemblies/6",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "6",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://268.lvh.me/system/organizations/4956",
                              "title": "Bartell-Tremblay",
                              "rel": "resource",
                              "meta": {
                                "action_method": "GET"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/components/search": {
      "get": {
        "summary": "Search components",
        "tags": [
          "Components"
        ],
        "operationId": "searchComponents",
        "description": "List or search components of the organization",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/component_manifest"
              },
              "title": "manifest_name not IN filter",
              "description": "match none of _manifest_name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/component_manifest"
              },
              "title": "manifest_name IN filter",
              "description": "match one of _manifest_name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_manifest_name_ starts with",
              "title": "manifest_name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_eq]",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/component_manifest",
              "title": "manifest_name equal filter",
              "description": "_manifest_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_not_eq]",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/component_manifest",
              "title": "manifest_name not equal filter",
              "description": "_manifest_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "manifest_name like filter",
              "description": "matches _manifest_name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[manifest_name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "manifest_name blank filter",
              "description": "_manifest_name_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "title": "id IN filter",
              "description": "match one of _id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[id_eq]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id equal filter",
              "description": "_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[id_lt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id less than filter",
              "description": "_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[id_gt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id greater than filter",
              "description": "_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id present filter",
              "description": "_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id blank filter",
              "description": "_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "participatory_space_id IN filter",
              "description": "match one of _participatory_space_id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id equal filter",
              "description": "_participatory_space_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id less than filter",
              "description": "_participatory_space_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_id greater than filter",
              "description": "_participatory_space_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id present filter",
              "description": "_participatory_space_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_id blank filter",
              "description": "_participatory_space_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/space_type"
              },
              "title": "participatory_space_type not IN filter",
              "description": "match none of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/space_type"
              },
              "title": "participatory_space_type IN filter",
              "description": "match one of _participatory_space_type_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_participatory_space_type_ starts with",
              "title": "participatory_space_type starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_eq]",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/space_type",
              "title": "participatory_space_type equal filter",
              "description": "_participatory_space_type_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_not_eq]",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/space_type",
              "title": "participatory_space_type not equal filter",
              "description": "_participatory_space_type_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "participatory_space_type like filter",
              "description": "matches _participatory_space_type_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[participatory_space_type_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "participatory_space_type blank filter",
              "description": "_participatory_space_type_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[name_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name not IN filter",
              "description": "match none of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "name IN filter",
              "description": "match one of _name_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[name_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_name_ starts with",
              "title": "name starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name equal filter",
              "description": "_name_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name not equal filter",
              "description": "_name_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[name_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "name like filter",
              "description": "matches _name_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[name_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "name blank filter",
              "description": "_name_ is null or empty"
            },
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "List of components",
            "content": {
              "application/json": {
                "examples": {
                  "components_in_Process": {
                    "value": {
                      "data": [
                        {
                          "id": "12884",
                          "type": "meeting_component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3681",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Ut dolore culpa. 24107"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:48:12Z",
                            "updated_at": "2025-07-02T06:48:12Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://331.lvh.me/components/meeting_components/12884",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3681",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://331.lvh.me/spaces/participatory_processes/3681",
                              "title": "<script>alert(\"participatory_process_title\");</script> Aspernatur cumque id. 24081",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3681",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "default_registration_terms": false,
                            "comments_enabled": false,
                            "comments_max_length": false,
                            "registration_code_enabled": false,
                            "creation_enabled_for_participants": false
                          }
                        },
                        {
                          "id": "12885",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3681",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Et optio error. 24193"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:48:12Z",
                            "updated_at": "2025-07-02T06:48:12Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "6782",
                                  "type": "proposal"
                                },
                                {
                                  "id": "6783",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://331.lvh.me/components/proposal_components/12885",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3681",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://331.lvh.me/spaces/participatory_processes/3681",
                              "title": "<script>alert(\"participatory_process_title\");</script> Aspernatur cumque id. 24081",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3681",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "12886",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3681",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:48:12Z",
                            "updated_at": "2025-07-02T06:48:12Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://331.lvh.me/components/proposal_components/12886",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3681",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://331.lvh.me/spaces/participatory_processes/3681",
                              "title": "<script>alert(\"participatory_process_title\");</script> Aspernatur cumque id. 24081",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3681",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        },
                        {
                          "id": "12887",
                          "type": "accountability_component",
                          "attributes": {
                            "manifest_name": "accountability",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3681",
                            "name": {
                              "en": "<script>alert(\"accountability\");</script> Accountability",
                              "fr": "<script>alert(\"accountability\");</script> Suivi"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:48:12Z",
                            "updated_at": "2025-07-02T06:48:12Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "595",
                                  "type": "result"
                                },
                                {
                                  "id": "596",
                                  "type": "result"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://331.lvh.me/components/accountability_components/12887",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3681",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://331.lvh.me/spaces/participatory_processes/3681",
                              "title": "<script>alert(\"participatory_process_title\");</script> Aspernatur cumque id. 24081",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3681",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "ok": {
                    "value": {
                      "data": [
                        {
                          "id": "12876",
                          "type": "meeting_component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3679",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Earum laboriosam quaerat. 23727"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:48:11Z",
                            "updated_at": "2025-07-02T06:48:11Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://325.lvh.me/components/meeting_components/12876",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3679",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://325.lvh.me/spaces/participatory_processes/3679",
                              "title": "<script>alert(\"participatory_process_title\");</script> Doloribus sapiente omnis. 23701",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3679",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "default_registration_terms": false,
                            "comments_enabled": false,
                            "comments_max_length": false,
                            "registration_code_enabled": false,
                            "creation_enabled_for_participants": false
                          }
                        },
                        {
                          "id": "12877",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3679",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Illum et a. 23813"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:48:11Z",
                            "updated_at": "2025-07-02T06:48:11Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "6778",
                                  "type": "proposal"
                                },
                                {
                                  "id": "6779",
                                  "type": "proposal"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://325.lvh.me/components/proposal_components/12877",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3679",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://325.lvh.me/spaces/participatory_processes/3679",
                              "title": "<script>alert(\"participatory_process_title\");</script> Doloribus sapiente omnis. 23701",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3679",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 1000,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": false,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": false,
                            "can_endorse": true,
                            "can_comment": true
                          }
                        },
                        {
                          "id": "12878",
                          "type": "proposal_component",
                          "attributes": {
                            "manifest_name": "proposals",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3679",
                            "name": {
                              "en": "<script>alert(\"proposals\");</script> Proposals",
                              "fr": "<script>alert(\"proposals\");</script> Propositions"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:48:11Z",
                            "updated_at": "2025-07-02T06:48:11Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://325.lvh.me/components/proposal_components/12878",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3679",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://325.lvh.me/spaces/participatory_processes/3679",
                              "title": "<script>alert(\"participatory_process_title\");</script> Doloribus sapiente omnis. 23701",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3679",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "amendments_enabled": false,
                            "attachments_allowed": false,
                            "collaborative_drafts_enabled": false,
                            "comments_enabled": true,
                            "comments_max_length": 0,
                            "default_sort_order": "default",
                            "geocoding_enabled": false,
                            "minimum_votes_per_user": 0,
                            "official_proposals_enabled": true,
                            "participatory_texts_enabled": false,
                            "proposal_edit_before_minutes": 5,
                            "proposal_edit_time": "limited",
                            "proposal_limit": 0,
                            "resources_permissions_enabled": true,
                            "threshold_per_proposal": 0,
                            "vote_limit": 0,
                            "endorsements_enabled": true,
                            "votes_enabled": true,
                            "creation_enabled": false,
                            "proposal_answering_enabled": true,
                            "amendment_creation_enabled": true,
                            "amendment_reaction_enabled": true,
                            "amendment_promotion_enabled": true,
                            "can_create_proposals": false,
                            "can_vote": true,
                            "can_endorse": true,
                            "can_comment": true,
                            "votes": [
                              {
                                "weight": 1,
                                "label": "Red"
                              },
                              {
                                "weight": 2,
                                "label": "Yellow"
                              },
                              {
                                "weight": 3,
                                "label": "Green"
                              }
                            ]
                          }
                        },
                        {
                          "id": "12879",
                          "type": "accountability_component",
                          "attributes": {
                            "manifest_name": "accountability",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3679",
                            "name": {
                              "en": "<script>alert(\"accountability\");</script> Accountability",
                              "fr": "<script>alert(\"accountability\");</script> Suivi"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:48:11Z",
                            "updated_at": "2025-07-02T06:48:11Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "591",
                                  "type": "result"
                                },
                                {
                                  "id": "592",
                                  "type": "result"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://325.lvh.me/components/accountability_components/12879",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3679",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://325.lvh.me/spaces/participatory_processes/3679",
                              "title": "<script>alert(\"participatory_process_title\");</script> Doloribus sapiente omnis. 23701",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3679",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "filter_byId": {
                    "value": {
                      "data": [
                        {
                          "id": "12937",
                          "type": "meeting_component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3686",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Quibusdam ut quia. 25255"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:48:14Z",
                            "updated_at": "2025-07-02T06:48:14Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://346.lvh.me/components/meeting_components/12937",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3686",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://346.lvh.me/spaces/participatory_processes/3686",
                              "title": "<script>alert(\"participatory_process_title\");</script> Voluptatum quam unde. 25229",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3686",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "default_registration_terms": false,
                            "comments_enabled": false,
                            "comments_max_length": false,
                            "registration_code_enabled": false,
                            "creation_enabled_for_participants": false
                          }
                        },
                        {
                          "id": "12940",
                          "type": "accountability_component",
                          "attributes": {
                            "manifest_name": "accountability",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3686",
                            "name": {
                              "en": "<script>alert(\"accountability\");</script> Accountability",
                              "fr": "<script>alert(\"accountability\");</script> Suivi"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:48:14Z",
                            "updated_at": "2025-07-02T06:48:14Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [
                                {
                                  "id": "606",
                                  "type": "result"
                                },
                                {
                                  "id": "605",
                                  "type": "result"
                                }
                              ],
                              "meta": {
                                "count": 2
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://346.lvh.me/components/accountability_components/12940",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3686",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://346.lvh.me/spaces/participatory_processes/3686",
                              "title": "<script>alert(\"participatory_process_title\");</script> Voluptatum quam unde. 25229",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3686",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "12926",
                          "type": "survey_component",
                          "attributes": {
                            "manifest_name": "surveys",
                            "participatory_space_type": "Decidim::Assembly",
                            "participatory_space_id": "2565",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Quod ad assumenda. 25125"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:48:14Z",
                            "updated_at": "2025-07-02T06:48:14Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://343.lvh.me/components/survey_components/12926",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2565",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://343.lvh.me/spaces/assemblies/2565",
                              "title": "<script>alert(\"assembly_title\");</script> Consequuntur modi vero. 24943",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2565",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        },
                        {
                          "id": "12927",
                          "type": "survey_component",
                          "attributes": {
                            "manifest_name": "surveys",
                            "participatory_space_type": "Decidim::Assembly",
                            "participatory_space_id": "2565",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Ipsum sed sequi. 25131"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:48:14Z",
                            "updated_at": "2025-07-02T06:48:14Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://343.lvh.me/components/survey_components/12927",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2565",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://343.lvh.me/spaces/assemblies/2565",
                              "title": "<script>alert(\"assembly_title\");</script> Consequuntur modi vero. 24943",
                              "rel": "resource",
                              "meta": {
                                "space_id": "2565",
                                "space_manifest": "assemblies",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false
                          }
                        }
                      ]
                    }
                  },
                  "manifest_name_in_Meetings": {
                    "value": {
                      "data": [
                        {
                          "id": "12880",
                          "type": "meeting_component",
                          "attributes": {
                            "manifest_name": "meetings",
                            "participatory_space_type": "Decidim::ParticipatoryProcess",
                            "participatory_space_id": "3680",
                            "name": {
                              "en": "<script>alert(\"component_name\");</script> Illum itaque reprehenderit. 23917"
                            },
                            "global_announcement": {},
                            "created_at": "2025-07-02T06:48:11Z",
                            "updated_at": "2025-07-02T06:48:11Z"
                          },
                          "relationships": {
                            "resources": {
                              "data": [],
                              "meta": {
                                "count": 0
                              }
                            }
                          },
                          "links": {
                            "self": {
                              "href": "https://328.lvh.me/components/meeting_components/12880",
                              "title": "en",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3680",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            },
                            "related": {
                              "href": "https://328.lvh.me/spaces/participatory_processes/3680",
                              "title": "<script>alert(\"participatory_process_title\");</script> Recusandae inventore amet. 23891",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3680",
                                "space_manifest": "participatory_processes",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true,
                            "scopes_enabled": false,
                            "default_registration_terms": false,
                            "comments_enabled": false,
                            "comments_max_length": false,
                            "registration_code_enabled": false,
                            "creation_enabled_for_participants": false
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/component_index_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/spaces/assemblies/{id}": {
      "get": {
        "summary": "Assemblies Details",
        "tags": [
          "Spaces"
        ],
        "operationId": "Assemblies",
        "description": "Get detail of a Assemblies given its id",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Id of the space"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Assemblies Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/space_item_response"
                },
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "6",
                        "type": "space",
                        "attributes": {
                          "manifest_name": "assemblies",
                          "participatory_space_type": "Decidim::Assembly",
                          "title": {
                            "en": "My assembly for testing purpose",
                            "fr": "c'est une assemblée"
                          },
                          "subtitle": {
                            "en": "<script>alert(\"assembly_subtitle\");</script> Maxime provident deleniti. 33255"
                          },
                          "short_description": {
                            "en": "<p><script>alert(\"assembly_short_description\");</script> Nihil dolorem et. 33257</p>"
                          },
                          "description": {
                            "en": "<p><script>alert(\"assembly_description\");</script> Aut voluptatum dolores. 33259</p>"
                          },
                          "visibility": "public",
                          "created_at": "2025-07-02T06:48:28Z",
                          "updated_at": "2025-07-02T06:48:28Z"
                        },
                        "relationships": {
                          "components": {
                            "data": [
                              {
                                "id": "13155",
                                "type": "accountability_component"
                              },
                              {
                                "id": "13160",
                                "type": "awesome_iframe_component"
                              },
                              {
                                "id": "13159",
                                "type": "awesome_map_component"
                              },
                              {
                                "id": "13158",
                                "type": "blog_component"
                              },
                              {
                                "id": "13153",
                                "type": "budget_component"
                              },
                              {
                                "id": "13156",
                                "type": "debate_component"
                              },
                              {
                                "id": "13152",
                                "type": "meeting_component"
                              },
                              {
                                "id": "13145",
                                "type": "meeting_component"
                              },
                              {
                                "id": "13147",
                                "type": "meeting_component"
                              },
                              {
                                "id": "13149",
                                "type": "meeting_component"
                              },
                              {
                                "id": "13150",
                                "type": "page_component"
                              },
                              {
                                "id": "13148",
                                "type": "proposal_component"
                              },
                              {
                                "id": "13144",
                                "type": "proposal_component"
                              },
                              {
                                "id": "13151",
                                "type": "proposal_component"
                              },
                              {
                                "id": "13146",
                                "type": "proposal_component"
                              },
                              {
                                "id": "13157",
                                "type": "sortition_component"
                              },
                              {
                                "id": "13154",
                                "type": "survey_component"
                              }
                            ],
                            "meta": {
                              "count": 17
                            },
                            "links": {
                              "self": {
                                "href": "https://446.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::Assembly&filter[participatory_space_id_eq]=6",
                                "title": "Component list for this space",
                                "rel": "resource",
                                "meta": {
                                  "space_manifest": "assemblies",
                                  "space_id": "6",
                                  "action_method": "GET"
                                }
                              }
                            }
                          }
                        },
                        "links": {
                          "self": {
                            "href": "https://446.lvh.me/public/assemblies/6",
                            "title": "My assembly for testing purpose",
                            "rel": "resource",
                            "meta": {
                              "space_id": "6",
                              "space_manifest": "assemblies",
                              "action_method": "GET"
                            }
                          },
                          "related": {
                            "href": "https://446.lvh.me/system/organizations/5002",
                            "title": "Greenholt, Prosacco and Harris",
                            "rel": "resource",
                            "meta": {
                              "action_method": "GET"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/spaces/participatory_processes/{id}": {
      "get": {
        "summary": "Participatory Processes Details",
        "tags": [
          "Spaces"
        ],
        "operationId": "ParticipatoryProcesses",
        "description": "Get detail of a Participatory Processes given its id",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Id of the space"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Participatory Processes Details",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "6",
                        "type": "space",
                        "attributes": {
                          "manifest_name": "participatory_processes",
                          "participatory_space_type": "Decidim::ParticipatoryProcess",
                          "title": {
                            "en": "My participatory_process for testing purpose",
                            "fr": "c'est une concertation"
                          },
                          "subtitle": {
                            "en": "<script>alert(\"participatory_process_subtitle\");</script> Distinctio placeat unde. 38967"
                          },
                          "short_description": {
                            "en": "<p><script>alert(\"participatory_process_short_description\");</script> Sed aut aspernatur. 38969</p>"
                          },
                          "description": {
                            "en": "<p><script>alert(\"participatory_process_description\");</script> Accusantium blanditiis natus. 38971</p>"
                          },
                          "visibility": "public",
                          "created_at": "2025-07-02T06:48:35Z",
                          "updated_at": "2025-07-02T06:48:35Z"
                        },
                        "relationships": {
                          "components": {
                            "data": [],
                            "meta": {
                              "count": 0
                            },
                            "links": {
                              "self": {
                                "href": "https://509.lvh.me/api/rest_full/v0.2/public/components?filter[participatory_space_type_eq]=Decidim::ParticipatoryProcess&filter[participatory_space_id_eq]=6",
                                "title": "Component list for this space",
                                "rel": "resource",
                                "meta": {
                                  "space_manifest": "participatory_processes",
                                  "space_id": "6",
                                  "action_method": "GET"
                                }
                              }
                            }
                          }
                        },
                        "links": {
                          "self": {
                            "href": "https://509.lvh.me/public/participatory_processes/6",
                            "title": "My participatory_process for testing purpose",
                            "rel": "resource",
                            "meta": {
                              "space_id": "6",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          },
                          "related": {
                            "href": "https://509.lvh.me/system/organizations/5011",
                            "title": "Langosh-Beier",
                            "rel": "resource",
                            "meta": {
                              "action_method": "GET"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/space_item_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/draft_proposals/{id}": {
      "delete": {
        "summary": "Withdrawn a draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "operationId": "withdrawnDraftProposal",
        "description": "Withdrawn a draft proposal. This action cannot be undone.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Draft Id"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Draft proposal Removed",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "7019",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-07-02T06:48:39Z",
                          "updated_at": "2025-07-02T06:48:39Z",
                          "title": {},
                          "body": {},
                          "errors": {
                            "title": [],
                            "body": []
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3764",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13366",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "10628",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "10628",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://538.lvh.me/public/components/13366",
                            "title": "<script>alert(\"component_name\");</script> Distinctio qui in. 41583",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3764",
                              "space_manifest": "participatory_processes",
                              "component_id": "13366",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://538.lvh.me/api/rest_full/v0.2/proposals/7019",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13366",
                              "component_manifest": "proposals",
                              "space_id": "3764",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7019",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://538.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13366",
                              "component_manifest": "proposals",
                              "space_id": "3764",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7019",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "5L32mpV-Ro--Nog0bG83h8S0XdpuDFP9YlvFi5Hb-0E",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/draft_proposal_item_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "operationId": "updateDraftProposal",
        "description": "This endpoint allows you to  update a draft proposal associated with your application ID.\nDrafts updated via this API are not visible in the Decidim front-end, and drafts created from the Decidim application are not editable through the API.\nTherefore, any draft you create here is new and tied to your application's credentials.\n\n### Example Request\n\n```http\nPUT /public/assemblies/12/2319/proposals/draft\nContent-Type: application/json\nAuthorization: Bearer YOUR_bearer_token\n\n{\n  \"title\": \"My valid title\"\n}\n```\n## Access Requirements\n\n* Authentication: This endpoint requires an impersonation token. You must create drafts on behalf of a participant; drafts cannot be created using a service token (credential_token).\n\n## Error Handling\n\n* Field Errors: Only errors related to the fields you're updating will be returned.\n* Publishable Status: To determine if the draft is publishable, check the data.meta.publishable field in the response.\n\n### Example response\n```json\n{\n  \"data\": {\n    \"id\": \"12345\",\n    \"type\": \"proposal\",\n    \"attributes\": {\n      \"title\": \"My valid title\",\n      \"body\": null\n    },\n    \"meta\": {\n      \"publishable\": false\n    }\n  }\n}\n```\nIn this example, the title is valid, so the server returns a 200 OK status.\nHowever, since the body is blank, meta.publishable is false, indicating that the draft is not yet ready for publication.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Draft Id"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Draft updated",
            "content": {
              "application/json": {
                "examples": {
                  "ok_empty": {
                    "value": {
                      "data": {
                        "id": "7023",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-07-02T06:48:46Z",
                          "updated_at": "2025-07-02T06:48:46Z",
                          "title": {},
                          "body": {},
                          "errors": {
                            "title": [
                              "Title cannot be blank"
                            ],
                            "body": [
                              "Body cannot be blank"
                            ]
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3768",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13370",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "10645",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "10645",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://554.lvh.me/public/components/13370",
                            "title": "<script>alert(\"component_name\");</script> Adipisci et voluptatem. 41875",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3768",
                              "space_manifest": "participatory_processes",
                              "component_id": "13370",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://554.lvh.me/api/rest_full/v0.2/proposals/7023",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13370",
                              "component_manifest": "proposals",
                              "space_id": "3768",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7023",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://554.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13370",
                              "component_manifest": "proposals",
                              "space_id": "3768",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7023",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "GUzk7INiFsaxH5TJYTXjQSEoRg5B6Oa-ZrauEHxbmV8",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  },
                  "ok": {
                    "value": {
                      "data": {
                        "id": "7025",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-07-02T06:48:47Z",
                          "updated_at": "2025-07-02T06:48:47Z",
                          "title": {
                            "fr": "This is a valid proposal title sample"
                          },
                          "body": {
                            "fr": ""
                          },
                          "errors": {
                            "title": [],
                            "body": [
                              "Body cannot be blank"
                            ]
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3770",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13372",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "10647",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "10647",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://556.lvh.me/public/components/13372",
                            "title": "<script>alert(\"component_name\");</script> Et sapiente molestiae. 41963",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3770",
                              "space_manifest": "participatory_processes",
                              "component_id": "13372",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://556.lvh.me/api/rest_full/v0.2/proposals/7025",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13372",
                              "component_manifest": "proposals",
                              "space_id": "3770",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7025",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://556.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13372",
                              "component_manifest": "proposals",
                              "space_id": "3770",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7025",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "RRr6z7NIZUMwajOmqgDe0hVQ-JBvjLI9DAYzjOhxkbw",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/draft_proposal_item_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Update Draft Proposal Payload",
                "properties": {
                  "data": {
                    "type": "object",
                    "title": "Update Draft Proposal Payload Data",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Title of the draft"
                      },
                      "body": {
                        "type": "string",
                        "description": "Content of the draft"
                      },
                      "locale": {
                        "type": "string",
                        "enum": [
                          "en",
                          "fr"
                        ],
                        "description": "Locale of the draft. default to user locale"
                      }
                    },
                    "description": "Payload to update in the proposal"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      },
      "get": {
        "summary": "Display a draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "operationId": "draftProposal",
        "description": "Detail a draft proposal. Raise HTTP 404 error if no draft is created for now.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Draft Id"
            },
            "required": true
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Record not found",
                      "error_description": "Record not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Draft Found",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "7138",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-07-02T06:49:46Z",
                          "updated_at": "2025-07-02T06:49:46Z",
                          "title": {},
                          "body": {},
                          "errors": {
                            "title": [],
                            "body": [
                              "Body cannot be blank"
                            ]
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3870",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13472",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "10898",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "10898",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://698.lvh.me/public/components/13472",
                            "title": "<script>alert(\"component_name\");</script> Alias officiis sed. 48407",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3870",
                              "space_manifest": "participatory_processes",
                              "component_id": "13472",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://698.lvh.me/api/rest_full/v0.2/proposals/7138",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13472",
                              "component_manifest": "proposals",
                              "space_id": "3870",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7138",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://698.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13472",
                              "component_manifest": "proposals",
                              "space_id": "3870",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7138",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "J1QgouXKEyv1LzNSownB0rfsxPIyrxnqOWwONqPtazo",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/draft_proposal_item_response"
                }
              }
            }
          }
        }
      }
    },
    "/oauth/token": {
      "post": {
        "summary": "Request a OAuth token through Client Credentials",
        "tags": [
          "OAuth"
        ],
        "security": [],
        "operationId": "createToken",
        "description": "Create a oauth token for the given scopes",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "bad_request": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "Invalid Api Client, check credentials"
                    }
                  },
                  "user_not_found": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "User not found. To create one, user meta.register_on_missing"
                    }
                  },
                  "invalid_username_on_register": {
                    "value": {
                      "error": "400: Bad request",
                      "error_description": "User not found. To create one, user meta.register_on_missing"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Token returned",
            "content": {
              "application/json": {
                "examples": {
                  "ok_ropc_impersonate": {
                    "value": {
                      "access_token": "_xxi3ZQM3INP9rWAG7913uBz7xh3tw3tyn5yso5pHlg",
                      "token_type": "Bearer",
                      "expires_in": 7200,
                      "scope": "public",
                      "created_at": 1751438924
                    }
                  },
                  "ok_ropc_login": {
                    "value": {
                      "access_token": "FkKdMUTOtSb8tV1FOw7lm9gTlr5XuQ_v9cdumJ6xuq0",
                      "token_type": "Bearer",
                      "expires_in": 7200,
                      "scope": "public proposals",
                      "created_at": 1751438925
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/oauth_grant_param"
              }
            }
          },
          "required": true
        }
      }
    },
    "/organizations/{id}/extended_data": {
      "put": {
        "summary": "Update organization extended data",
        "tags": [
          "Organizations Extended Data"
        ],
        "operationId": "setOrganizationExtendedData",
        "description": "The extended_data feature allows you to update a hash with recursive merging. Use the body payload with these keys:\n\n1. `data`: The value or hash you want to update.\n2. `object_path`: The dot-style path to the key (e.g., access.this.key).\n\n**Root path**<br />\nTo update data from root of the hash, use `object_path=\".\"`.\n\nExample:\n```\n  body={\"data\": {\"name\": \"Jane\"}, \"object_path\": \"personnal\"}\n```\nThis recursively merges data into the hash without removing existing keys.\n\n**Merge some data**<br />\nInitial hash:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\"}\n  }\n```\nPatch payload:\n```json\n  {\n    \"data\": {\n      \"name\": \"Jane\"\n    },\n    \"object_path\": \"personnal\"\n  }\n```\nResult:\n```\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\", \"name\": \"Jane\"}\n  }\n```\n\n**Create new Paths**<br />\nPaths are created as needed.\nExemple:\n```json\n  body = {\"data\": {\"external_user_id\": 12}, \"object_path\": \"data-store.my-app.foo\"}\n```\nResult:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\"},\n    \"data-store\": {\"my-app\": {\"foo\": {\"external_user_id\": 12}}}\n  }\n```\nAlternatively:\n```\n  body = {\"data\": 12, \"object_path\": \"data-store.my-app.foo.external_user_id\"}\n```\n\n**Remove a key**<br />\nSet a key to null or an empty value to remove it.\n\nExample: Initial hash:\n```json\n  {\n    \"personnal\": {\"birthday\": \"1989-05-18\", \"name\": \"Jane\"}\n  }\n```\nPatch:\n```json\n  body = {\"data\": {\"birthday\": \"\"}, \"object_path\": \"personnal\"}\n```\n\nResult:\n```\n{\n  \"personnal\": {\"name\": \"Jane\"}\n}\n```\n\n**Return Value**<br />\nThe update request returns the updated value at the specified path.\n\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Id of the organization"
            },
            "required": true
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Update extended data value",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "foo": "bar"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/organization_extended_data"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "User Extended Data Payload",
                "properties": {
                  "data": {
                    "type": "object",
                    "title": "User Extended Data Data",
                    "description": "New value for the extended data at the given path"
                  },
                  "object_path": {
                    "type": "string",
                    "description": "object path, in dot style, like foo.bar. use '.' to update the whole user data"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      },
      "get": {
        "summary": "Organization extended data",
        "tags": [
          "Organizations Extended Data"
        ],
        "operationId": "organizationData",
        "description": "Fetch organization extended data",
        "parameters": [
          {
            "name": "object_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "object path, in dot style, like foo.bar"
            }
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Id of the organization"
            },
            "required": true
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "system"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Extended Data for a given object_path given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organization_extended_data"
                },
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "birthday": "1989-01-28",
                        "personal": {
                          "birthday": "1989-01-28"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "not_found": {
                    "value": {
                      "error": "404: Resource not found",
                      "error_description": "Resource not found"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/components/blog_components/{id}": {
      "get": {
        "summary": "Blog Component Details",
        "tags": [
          "Components"
        ],
        "operationId": "blog_component",
        "description": "Blog component details",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          },
          {
            "name": "space_manifest",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "description": "Space type"
            },
            "required": false
          },
          {
            "name": "space_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Space Id"
            },
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Blog Component",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "13388",
                        "type": "blog_component",
                        "attributes": {
                          "manifest_name": "blogs",
                          "participatory_space_type": "Decidim::ParticipatoryProcess",
                          "participatory_space_id": "3786",
                          "name": {
                            "en": "<script>alert(\"component_name\");</script> Impedit dolor et. 42889"
                          },
                          "global_announcement": {},
                          "created_at": "2025-07-02T06:48:55Z",
                          "updated_at": "2025-07-02T06:48:55Z"
                        },
                        "relationships": {
                          "resources": {
                            "data": [],
                            "meta": {
                              "count": 0
                            }
                          }
                        },
                        "links": {
                          "self": {
                            "href": "https://579.lvh.me/components/blog_components/13388",
                            "title": "<script>alert(\"component_name\");</script> Impedit dolor et. 42889",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3786",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          },
                          "related": {
                            "href": "https://579.lvh.me/spaces/participatory_processes/3786",
                            "title": "<script>alert(\"participatory_process_title\");</script> Quis et ex. 42899",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3786",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "scopes_enabled": false
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/blog_component_item_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/blogs": {
      "get": {
        "summary": "Blog Post Lists",
        "tags": [
          "Blogs"
        ],
        "operationId": "blogs",
        "description": "Get blog post list",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "space_manifest",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "description": "Space type"
            },
            "required": false
          },
          {
            "name": "space_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Space Id"
            },
            "required": false
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Order by",
            "required": false
          },
          {
            "name": "order_direction",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "Order direction",
            "required": false
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "blogs"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Blogs Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/blog_index_response"
                },
                "examples": {
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "1827",
                          "type": "blog",
                          "attributes": {
                            "created_at": "2025-07-02T06:49:05Z",
                            "updated_at": "2025-07-02T06:49:05Z",
                            "title": {
                              "en": "<script>alert(\"blog_title\");</script> Doloribus asperiores illo. 44435"
                            },
                            "body": {
                              "en": "<p><script>alert(\"blog_body\");</script> Esse maiores corporis. 44437</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3811",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13413",
                                "type": "blog_component"
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://605.lvh.me/public/components/13413",
                              "title": "<script>alert(\"component_name\");</script> Dolores velit qui. 44401",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3811",
                                "space_manifest": "participatory_processes",
                                "component_id": "13413",
                                "component_manifest": "blogs",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://605.lvh.me/api/rest_full/v0.2/blogs/1827",
                              "title": "Blogs Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13413",
                                "component_manifest": "blogs",
                                "space_id": "3811",
                                "space_manifest": "participatory_processes",
                                "resource_id": "1827",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://605.lvh.me/api/rest_full/v0.2/blogs",
                              "title": "Blogs List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13413",
                                "component_manifest": "blogs",
                                "space_id": "3811",
                                "space_manifest": "participatory_processes",
                                "resource_id": "1827",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "1828",
                          "type": "blog",
                          "attributes": {
                            "created_at": "2025-07-02T06:49:05Z",
                            "updated_at": "2025-07-02T06:49:05Z",
                            "title": {
                              "en": "<script>alert(\"blog_title\");</script> Omnis vel vel. 44441"
                            },
                            "body": {
                              "en": "<p><script>alert(\"blog_body\");</script> Ipsam quia aut. 44443</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3811",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13413",
                                "type": "blog_component"
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://605.lvh.me/public/components/13413",
                              "title": "<script>alert(\"component_name\");</script> Dolores velit qui. 44401",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3811",
                                "space_manifest": "participatory_processes",
                                "component_id": "13413",
                                "component_manifest": "blogs",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://605.lvh.me/api/rest_full/v0.2/blogs/1828",
                              "title": "Blogs Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13413",
                                "component_manifest": "blogs",
                                "space_id": "3811",
                                "space_manifest": "participatory_processes",
                                "resource_id": "1828",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://605.lvh.me/api/rest_full/v0.2/blogs",
                              "title": "Blogs List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13413",
                                "component_manifest": "blogs",
                                "space_id": "3811",
                                "space_manifest": "participatory_processes",
                                "resource_id": "1828",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/components/proposal_components/{id}": {
      "get": {
        "summary": "Proposal Component Details",
        "tags": [
          "Components"
        ],
        "operationId": "proposal_component",
        "description": "Find on proposal",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[id_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "title": "id IN filter",
              "description": "match one of _id_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[id_eq]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id equal filter",
              "description": "_id_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[id_lt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id less than filter",
              "description": "_id_ is less than"
            },
            "required": false
          },
          {
            "name": "filter[id_gt]",
            "in": "query",
            "schema": {
              "type": "integer",
              "title": "id greater than filter",
              "description": "_id_ is greater than"
            },
            "required": false
          },
          {
            "name": "filter[id_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id present filter",
              "description": "_id_ is not null and not empty"
            },
            "required": false
          },
          {
            "name": "filter[id_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "id blank filter",
              "description": "_id_ is null or empty"
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Proposal Component",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "13423",
                        "type": "proposal_component",
                        "attributes": {
                          "manifest_name": "proposals",
                          "participatory_space_type": "Decidim::ParticipatoryProcess",
                          "participatory_space_id": "3821",
                          "name": {
                            "en": "<script>alert(\"component_name\");</script> Nihil aut impedit. 45155"
                          },
                          "global_announcement": {},
                          "created_at": "2025-07-02T06:49:10Z",
                          "updated_at": "2025-07-02T06:49:10Z"
                        },
                        "relationships": {
                          "resources": {
                            "data": [],
                            "meta": {
                              "count": 0
                            }
                          }
                        },
                        "links": {
                          "self": {
                            "href": "https://615.lvh.me/components/proposal_components/13423",
                            "title": "<script>alert(\"component_name\");</script> Nihil aut impedit. 45155",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3821",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          },
                          "related": {
                            "href": "https://615.lvh.me/spaces/participatory_processes/3821",
                            "title": "<script>alert(\"participatory_process_title\");</script> Aut numquam ea. 45129",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3821",
                              "space_manifest": "participatory_processes",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true,
                          "scopes_enabled": false,
                          "amendments_enabled": false,
                          "attachments_allowed": false,
                          "collaborative_drafts_enabled": false,
                          "comments_enabled": true,
                          "comments_max_length": 1000,
                          "default_sort_order": "default",
                          "geocoding_enabled": false,
                          "minimum_votes_per_user": 0,
                          "official_proposals_enabled": true,
                          "participatory_texts_enabled": false,
                          "proposal_edit_before_minutes": 5,
                          "proposal_edit_time": "limited",
                          "proposal_limit": 0,
                          "resources_permissions_enabled": true,
                          "threshold_per_proposal": 0,
                          "vote_limit": 0,
                          "endorsements_enabled": true,
                          "votes_enabled": false,
                          "creation_enabled": false,
                          "proposal_answering_enabled": true,
                          "amendment_creation_enabled": true,
                          "amendment_reaction_enabled": true,
                          "amendment_promotion_enabled": true,
                          "can_create_proposals": false,
                          "can_vote": false,
                          "can_endorse": true,
                          "can_comment": true
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_component_item_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/metrics/health": {
      "get": {
        "summary": "Health",
        "tags": [
          "Metrics"
        ],
        "operationId": "health-metrics",
        "description": "Health metrics",
        "security": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Healthy services",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "message": "OK"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/health"
                }
              }
            }
          },
          "503": {
            "description": "Unhealthy services",
            "content": {
              "application/json": {
                "examples": {
                  "error_referer": {
                    "value": {
                      "message": "ERROR"
                    }
                  },
                  "error_db": {
                    "value": {
                      "message": "ERROR"
                    }
                  },
                  "error_public_assets": {
                    "value": {
                      "message": "ERROR"
                    }
                  },
                  "error_cache": {
                    "value": {
                      "message": "ERROR"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/health"
                }
              }
            }
          }
        }
      }
    },
    "/oauth/introspect": {
      "post": {
        "summary": "Introspect a OAuth token",
        "tags": [
          "OAuth"
        ],
        "security": [
          {
            "credentialFlowBearer": [
              "public"
            ]
          },
          {
            "resourceOwnerFlowBearer": [
              "public"
            ]
          }
        ],
        "operationId": "introspectToken",
        "description": "Get given oauth token details",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User details returned",
            "content": {
              "application/json": {
                "examples": {
                  "bearer_client_credential": {
                    "value": {
                      "active": true,
                      "scope": "public",
                      "client_id": "iWnuYGOGzUbRHWUNwHfHSwwNuc1GH37sSeELDdfQ-2M",
                      "token_type": "Bearer",
                      "exp": 3505556314,
                      "iat": 1751438957,
                      "sub": 4807,
                      "aud": "https://632.lvh.me"
                    }
                  },
                  "bearer_ropc": {
                    "value": {
                      "active": true,
                      "scope": "public",
                      "client_id": "Z6wsRwOXXNhD1_6TgrxcYvIqTJ5ezK-7Sk7m1LKw6UI",
                      "token_type": "Bearer",
                      "exp": 3505556316,
                      "iat": 1751438958,
                      "sub": 4809,
                      "aud": "https://633.lvh.me",
                      "resource": {
                        "id": "10770",
                        "type": "user",
                        "attributes": {
                          "email": "user854@example.org",
                          "name": "Cleo Gerlach",
                          "created_at": "2025-07-02T06:49:18Z",
                          "updated_at": "2025-07-02T06:49:18Z",
                          "personal_url": "http://crooks-schaefer.test/tabetha_buckridge",
                          "locale": "en"
                        },
                        "relationships": {},
                        "meta": {
                          "blocked": false,
                          "locked": false
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/introspect_data"
                }
              }
            }
          },
          "401": {
            "description": "When the token is invalid",
            "content": {
              "application/json": {
                "examples": {
                  "expired_token": {
                    "value": {
                      "error": "invalid_token",
                      "error_description": "The access token expired",
                      "state": "unauthorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/draft_proposals": {
      "post": {
        "summary": "Create draft proposal",
        "tags": [
          "Draft Proposals"
        ],
        "operationId": "createDraftProposal",
        "description": "Create a draft\n",
        "parameters": [],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                },
                "examples": {
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Draft updated",
            "content": {
              "application/json": {
                "examples": {
                  "ok_empty": {
                    "value": {
                      "data": {
                        "id": "7037",
                        "type": "draft_proposal",
                        "attributes": {
                          "created_at": "2025-07-02T06:49:21Z",
                          "updated_at": "2025-07-02T06:49:21Z",
                          "title": {},
                          "body": {},
                          "errors": {
                            "title": [
                              "Title cannot be blank"
                            ],
                            "body": [
                              "Body cannot be blank"
                            ]
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3829",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13431",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "10776",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "10776",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://639.lvh.me/public/components/13431",
                            "title": "<script>alert(\"component_name\");</script> Nihil esse ut. 45745",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3829",
                              "space_manifest": "participatory_processes",
                              "component_id": "13431",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://639.lvh.me/api/rest_full/v0.2/proposals/7037",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13431",
                              "component_manifest": "proposals",
                              "space_id": "3829",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7037",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://639.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13431",
                              "component_manifest": "proposals",
                              "space_id": "3829",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7037",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "publishable": false,
                          "client_id": "iovk8NM91c5_v1C9QRWHssLG7-75510SwK0ishlpEUI",
                          "fields": [
                            "title",
                            "body"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/draft_proposal_item_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Create Draft Proposal Payload",
                "properties": {
                  "data": {
                    "type": "object",
                    "title": "Draft Proposal Data",
                    "properties": {
                      "component_id": {
                        "type": "integer",
                        "description": "Component ID"
                      }
                    },
                    "required": [
                      "component_id"
                    ],
                    "description": "Payload to update in the proposal"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/proposals/{id}": {
      "get": {
        "summary": "Proposal Details",
        "tags": [
          "Proposals"
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "operationId": "proposal",
        "description": "Proposal detail",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "space_manifest",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "description": "Space type"
            },
            "required": false
          },
          {
            "name": "space_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Space Id"
            },
            "required": false
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "voted_weight not IN filter",
              "description": "match none of _voted_weight_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "voted_weight IN filter",
              "description": "match one of _voted_weight_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_voted_weight_ starts with",
              "title": "voted_weight starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight equal filter",
              "description": "_voted_weight_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight not equal filter",
              "description": "_voted_weight_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight like filter",
              "description": "matches _voted_weight_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "voted_weight blank filter",
              "description": "_voted_weight_ is null or empty"
            },
            "required": false
          },
          {
            "name": "filter[state_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "state not IN filter",
              "description": "match none of _state_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[state_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "state IN filter",
              "description": "match one of _state_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[state_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_state_ starts with",
              "title": "state starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[state_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state equal filter",
              "description": "_state_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[state_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state not equal filter",
              "description": "_state_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[state_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state like filter",
              "description": "matches _state_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[state_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "state blank filter",
              "description": "_state_ is null or empty"
            },
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "description": "Proposal Id"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Proposal Found",
            "content": {
              "application/json": {
                "examples": {
                  "ok": {
                    "value": {
                      "data": {
                        "id": "7068",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-02T06:49:32Z",
                          "updated_at": "2025-07-02T06:49:32Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Error quia perferendis. 46741"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Sunt qui recusandae. 46743</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3846",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13448",
                              "type": "proposal_component"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "10815",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "10815",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://667.lvh.me/public/components/13448",
                            "title": "<script>alert(\"component_name\");</script> Beatae exercitationem dolore. 46735",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3846",
                              "space_manifest": "participatory_processes",
                              "component_id": "13448",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://667.lvh.me/api/rest_full/v0.2/proposals/7068",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13448",
                              "component_manifest": "proposals",
                              "space_id": "3846",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7068",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://667.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13448",
                              "component_manifest": "proposals",
                              "space_id": "3846",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7068",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  },
                  "accepted_proposal": {
                    "value": {
                      "data": {
                        "id": "7067",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-02T06:49:31Z",
                          "updated_at": "2025-07-02T06:49:31Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Unde est et. 46695"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Eos dolorum velit. 46697</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3845",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13447",
                              "type": "proposal_component"
                            }
                          },
                          "state": {
                            "data": {
                              "id": "10883",
                              "type": "proposal_state"
                            },
                            "meta": {
                              "token": "accepted"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "10813",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "10813",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://666.lvh.me/public/components/13447",
                            "title": "<script>alert(\"component_name\");</script> Cum ducimus totam. 46679",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3845",
                              "space_manifest": "participatory_processes",
                              "component_id": "13447",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://666.lvh.me/api/rest_full/v0.2/proposals/7067",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13447",
                              "component_manifest": "proposals",
                              "space_id": "3845",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7067",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://666.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13447",
                              "component_manifest": "proposals",
                              "space_id": "3845",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7067",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://666.lvh.me/api/rest_full/v0.2/proposals/7066",
                            "title": "Previous Proposal",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13447",
                              "component_manifest": "proposals",
                              "space_id": "3845",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7066",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  },
                  "navigation_last_accepted": {
                    "value": {
                      "data": {
                        "id": "7060",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-02T06:49:30Z",
                          "updated_at": "2025-07-02T06:49:30Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Et itaque placeat. 46553"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Repudiandae quod id. 46555</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3843",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13445",
                              "type": "proposal_component"
                            }
                          },
                          "state": {
                            "data": {
                              "id": "10877",
                              "type": "proposal_state"
                            },
                            "meta": {
                              "token": "accepted"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "10804",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "10804",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://664.lvh.me/public/components/13445",
                            "title": "<script>alert(\"component_name\");</script> Impedit laudantium dolorem. 46527",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3843",
                              "space_manifest": "participatory_processes",
                              "component_id": "13445",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://664.lvh.me/api/rest_full/v0.2/proposals/7060",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13445",
                              "component_manifest": "proposals",
                              "space_id": "3843",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7060",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://664.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13445",
                              "component_manifest": "proposals",
                              "space_id": "3843",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7060",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://664.lvh.me/api/rest_full/v0.2/proposals/7059",
                            "title": "Previous Proposal",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13445",
                              "component_manifest": "proposals",
                              "space_id": "3843",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7059",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  },
                  "navigation_non_rejected": {
                    "value": {
                      "data": {
                        "id": "7063",
                        "type": "proposal",
                        "attributes": {
                          "created_at": "2025-07-02T06:49:31Z",
                          "updated_at": "2025-07-02T06:49:31Z",
                          "title": {
                            "en": "<script>alert(\"proposal_title\");</script> Commodi earum provident. 46619"
                          },
                          "body": {
                            "en": "<p><script>alert(\"proposal_body\");</script> Et ab vero. 46621</p>"
                          }
                        },
                        "relationships": {
                          "space": {
                            "data": {
                              "id": "3844",
                              "type": "participatory_processes"
                            }
                          },
                          "component": {
                            "data": {
                              "id": "13446",
                              "type": "proposal_component"
                            }
                          },
                          "state": {
                            "data": {
                              "id": "10880",
                              "type": "proposal_state"
                            },
                            "meta": {
                              "token": "accepted"
                            }
                          },
                          "author": {
                            "data": {
                              "id": "10808",
                              "type": "user"
                            }
                          },
                          "coauthors": {
                            "data": [
                              {
                                "id": "10808",
                                "type": "user"
                              }
                            ],
                            "meta": {
                              "count": 1
                            }
                          }
                        },
                        "links": {
                          "related": {
                            "href": "https://665.lvh.me/public/components/13446",
                            "title": "<script>alert(\"component_name\");</script> Quos sed beatae. 46603",
                            "rel": "resource",
                            "meta": {
                              "space_id": "3844",
                              "space_manifest": "participatory_processes",
                              "component_id": "13446",
                              "component_manifest": "proposals",
                              "action_method": "GET"
                            }
                          },
                          "self": {
                            "href": "https://665.lvh.me/api/rest_full/v0.2/proposals/7063",
                            "title": "Proposals Details",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13446",
                              "component_manifest": "proposals",
                              "space_id": "3844",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7063",
                              "action_method": "GET"
                            }
                          },
                          "collection": {
                            "href": "https://665.lvh.me/api/rest_full/v0.2/proposals",
                            "title": "Proposals List",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13446",
                              "component_manifest": "proposals",
                              "space_id": "3844",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7063",
                              "action_method": "GET"
                            }
                          },
                          "next": {
                            "href": "https://665.lvh.me/api/rest_full/v0.2/proposals/7065",
                            "title": "Next Proposal",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13446",
                              "component_manifest": "proposals",
                              "space_id": "3844",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7065",
                              "action_method": "GET"
                            }
                          },
                          "prev": {
                            "href": "https://665.lvh.me/api/rest_full/v0.2/proposals/7062",
                            "title": "Previous Proposal",
                            "rel": "resource",
                            "meta": {
                              "component_id": "13446",
                              "component_manifest": "proposals",
                              "space_id": "3844",
                              "space_manifest": "participatory_processes",
                              "resource_id": "7062",
                              "action_method": "GET"
                            }
                          }
                        },
                        "meta": {
                          "published": true
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_item_response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/proposals": {
      "get": {
        "summary": "Proposals",
        "tags": [
          "Proposals"
        ],
        "operationId": "proposals",
        "description": "Search proposals",
        "parameters": [
          {
            "name": "locales[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "title": "Available locales",
              "items": {
                "$ref": "#/components/schemas/locale"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "space_manifest",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "participatory_processes",
                "assemblies"
              ],
              "description": "Space type"
            },
            "required": false
          },
          {
            "name": "space_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Space Id"
            },
            "required": false
          },
          {
            "name": "component_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Component Id"
            },
            "required": false
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "published_at",
                "rand"
              ]
            },
            "description": "Order by",
            "required": false
          },
          {
            "name": "order_direction",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "Order direction",
            "required": false
          },
          {
            "name": "filter[voted_weight_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "voted_weight IN filter",
              "description": "match one of _voted_weight_'s values in array. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight equal filter",
              "description": "_voted_weight_ is equal to. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_lt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight less than filter",
              "description": "_voted_weight_ is less than. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_gt]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "voted_weight greater than filter",
              "description": "_voted_weight_ is greater than. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_present]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "voted_weight present filter",
              "description": "_voted_weight_ is not null and not empty. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[voted_weight_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "voted_weight blank filter",
              "description": "_voted_weight_ is null or empty. Only available with [:impersonationFlow] flow"
            },
            "required": false
          },
          {
            "name": "filter[state_not_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "state not IN filter",
              "description": "match none of _state_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[state_in][]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "state IN filter",
              "description": "match one of _state_'s values in array"
            },
            "required": false
          },
          {
            "name": "filter[state_start]",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "_state_ starts with",
              "title": "state starts With filter",
              "example": "some_string"
            },
            "required": false
          },
          {
            "name": "filter[state_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state equal filter",
              "description": "_state_ is equal to"
            },
            "required": false
          },
          {
            "name": "filter[state_not_eq]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state not equal filter",
              "description": "_state_ is NOT equal to"
            },
            "required": false
          },
          {
            "name": "filter[state_matches]",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "state like filter",
              "description": "matches _state_ with `LIKE`",
              "example": "%some_string"
            },
            "required": false
          },
          {
            "name": "filter[state_blank]",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "state blank filter",
              "description": "_state_ is null or empty"
            },
            "required": false
          }
        ],
        "security": [
          {
            "resourceOwnerFlowBearer": [
              "proposals"
            ]
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden_credentialFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  },
                  "forbidden_impersonationFlow": {
                    "value": {
                      "error": "403: Forbidden",
                      "error_description": "Forbidden"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "200": {
            "description": "Proposal List",
            "content": {
              "application/json": {
                "examples": {
                  "paginated": {
                    "value": {
                      "data": [
                        {
                          "id": "7121",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-02T06:49:42Z",
                            "updated_at": "2025-07-02T06:49:42Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Autem explicabo numquam. 47899"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Et dolores consequatur. 47901</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3861",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13463",
                                "type": "proposal_component"
                              }
                            },
                            "state": {
                              "data": {
                                "id": "10931",
                                "type": "proposal_state"
                              },
                              "meta": {
                                "token": "accepted"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "10873",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "10873",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://689.lvh.me/public/components/13463",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3861",
                                "space_manifest": "participatory_processes",
                                "component_id": "13463",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://689.lvh.me/api/rest_full/v0.2/proposals/7121",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13463",
                                "component_manifest": "proposals",
                                "space_id": "3861",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7121",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://689.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13463",
                                "component_manifest": "proposals",
                                "space_id": "3861",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7121",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "7122",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-02T06:49:42Z",
                            "updated_at": "2025-07-02T06:49:42Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Incidunt nisi quia. 47909"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Voluptate voluptas qui. 47911</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3861",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13463",
                                "type": "proposal_component"
                              }
                            },
                            "state": {
                              "data": {
                                "id": "10931",
                                "type": "proposal_state"
                              },
                              "meta": {
                                "token": "accepted"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "10874",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "10874",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://689.lvh.me/public/components/13463",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3861",
                                "space_manifest": "participatory_processes",
                                "component_id": "13463",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://689.lvh.me/api/rest_full/v0.2/proposals/7122",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13463",
                                "component_manifest": "proposals",
                                "space_id": "3861",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7122",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://689.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13463",
                                "component_manifest": "proposals",
                                "space_id": "3861",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7122",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        }
                      ]
                    }
                  },
                  "state_accepted": {
                    "value": {
                      "data": [
                        {
                          "id": "7105",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-02T06:49:40Z",
                            "updated_at": "2025-07-02T06:49:40Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Accusamus recusandae voluptatem. 47661"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Voluptatem aut blanditiis. 47663</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3859",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13461",
                                "type": "proposal_component"
                              }
                            },
                            "state": {
                              "data": {
                                "id": "10925",
                                "type": "proposal_state"
                              },
                              "meta": {
                                "token": "accepted"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "10855",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "10855",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://687.lvh.me/public/components/13461",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3859",
                                "space_manifest": "participatory_processes",
                                "component_id": "13461",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://687.lvh.me/api/rest_full/v0.2/proposals/7105",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13461",
                                "component_manifest": "proposals",
                                "space_id": "3859",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7105",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://687.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13461",
                                "component_manifest": "proposals",
                                "space_id": "3859",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7105",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        }
                      ]
                    }
                  },
                  "state_non_rejected": {
                    "value": {
                      "data": [
                        {
                          "id": "7112",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-02T06:49:41Z",
                            "updated_at": "2025-07-02T06:49:41Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Voluptas velit reiciendis. 47769"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Eos sed et. 47771</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3860",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13462",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "10863",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "10863",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://688.lvh.me/public/components/13462",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://688.lvh.me/api/rest_full/v0.2/proposals/7112",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7112",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://688.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7112",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "7113",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-02T06:49:41Z",
                            "updated_at": "2025-07-02T06:49:41Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Autem debitis culpa. 47779"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Et quam quaerat. 47781</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3860",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13462",
                                "type": "proposal_component"
                              }
                            },
                            "state": {
                              "data": {
                                "id": "10928",
                                "type": "proposal_state"
                              },
                              "meta": {
                                "token": "accepted"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "10864",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "10864",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://688.lvh.me/public/components/13462",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://688.lvh.me/api/rest_full/v0.2/proposals/7113",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7113",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://688.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7113",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "7115",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-02T06:49:41Z",
                            "updated_at": "2025-07-02T06:49:41Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Commodi enim quia. 47799"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Et accusantium expedita. 47801</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3860",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13462",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "10866",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "10866",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://688.lvh.me/public/components/13462",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://688.lvh.me/api/rest_full/v0.2/proposals/7115",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7115",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://688.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7115",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "7116",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-02T06:49:41Z",
                            "updated_at": "2025-07-02T06:49:41Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Beatae qui asperiores. 47809"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Aut accusamus voluptate. 47811</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3860",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13462",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "10867",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "10867",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://688.lvh.me/public/components/13462",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://688.lvh.me/api/rest_full/v0.2/proposals/7116",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7116",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://688.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7116",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "7117",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-02T06:49:41Z",
                            "updated_at": "2025-07-02T06:49:41Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Vel sit asperiores. 47819"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> At voluptas sunt. 47821</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3860",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13462",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "10868",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "10868",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://688.lvh.me/public/components/13462",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://688.lvh.me/api/rest_full/v0.2/proposals/7117",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7117",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://688.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7117",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "7118",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-02T06:49:41Z",
                            "updated_at": "2025-07-02T06:49:41Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> Culpa quam similique. 47829"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Eaque in eveniet. 47831</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3860",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13462",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "10869",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "10869",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://688.lvh.me/public/components/13462",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://688.lvh.me/api/rest_full/v0.2/proposals/7118",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7118",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://688.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7118",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        },
                        {
                          "id": "7119",
                          "type": "proposal",
                          "attributes": {
                            "created_at": "2025-07-02T06:49:41Z",
                            "updated_at": "2025-07-02T06:49:41Z",
                            "title": {
                              "en": "<script>alert(\"proposal_title\");</script> In vero atque. 47839"
                            },
                            "body": {
                              "en": "<p><script>alert(\"proposal_body\");</script> Esse ut amet. 47841</p>"
                            }
                          },
                          "relationships": {
                            "space": {
                              "data": {
                                "id": "3860",
                                "type": "participatory_processes"
                              }
                            },
                            "component": {
                              "data": {
                                "id": "13462",
                                "type": "proposal_component"
                              }
                            },
                            "author": {
                              "data": {
                                "id": "10870",
                                "type": "user"
                              }
                            },
                            "coauthors": {
                              "data": [
                                {
                                  "id": "10870",
                                  "type": "user"
                                }
                              ],
                              "meta": {
                                "count": 1
                              }
                            }
                          },
                          "links": {
                            "related": {
                              "href": "https://688.lvh.me/public/components/13462",
                              "title": "<script>alert(\"proposals\");</script> Proposals",
                              "rel": "resource",
                              "meta": {
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "action_method": "GET"
                              }
                            },
                            "self": {
                              "href": "https://688.lvh.me/api/rest_full/v0.2/proposals/7119",
                              "title": "Proposals Details",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7119",
                                "action_method": "GET"
                              }
                            },
                            "collection": {
                              "href": "https://688.lvh.me/api/rest_full/v0.2/proposals",
                              "title": "Proposals List",
                              "rel": "resource",
                              "meta": {
                                "component_id": "13462",
                                "component_manifest": "proposals",
                                "space_id": "3860",
                                "space_manifest": "participatory_processes",
                                "resource_id": "7119",
                                "action_method": "GET"
                              }
                            }
                          },
                          "meta": {
                            "published": true
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/proposal_index_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    }
  }
}